[
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0}",
    [
      {
        "template": "show {COLUMN0} , {COLUMN1} and {COLUMN2} commanders of the {TABLE0} with no {TABLE1} {COLUMN4} in the '{VALUE0} ' .",
        "question": "Show names , results and bulgarian commanders of the battles with no ships lost in the 'English Channel ' .",
        "concise pattern": "WHERE",
        "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
        "name dict": {
          "{COLUMN5}": "location",
          "{COLUMN2}": "bulgarian_commander",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'English Channel'",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE9}": "0",
          "{TABLE1}": "ship",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "result",
          "{TABLE0}": "battle",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{COLUMN4}": "lost_in_battle",
          "{VALUE6}": "1",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "show {COLUMN0} for all {TABLE0} except for {TABLE0} having a {TABLE1} in {COLUMN2} {VALUE6} .",
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014 .",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "name dict": {
          "{TABLE1}": "concert",
          "{COLUMN2}": "year",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "stadium_id",
          "{TABLE0}": "stadium",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "2014"
        }
      },
      {
        "template": "what is the tv {COLUMN2} of tv {COLUMN0} with {COLUMN3} `` {VALUE0} '' ? list the tv {COLUMN2} 's {COLUMN0} name .",
        "question": "What is the TV Channel of TV series with Episode `` A Love of a Lifetime '' ? List the TV Channel 's series name .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "name dict": {
          "{TABLE1}": "tv series",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"A Love of a Lifetime\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "series_name",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "episode",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} dates , {COLUMN1} , and {COLUMN2} numbers of the {TABLE1} that were for the {COLUMN3} named '{VALUE0} ' ?",
        "question": "What are the create dates , states , and phone numbers of the votes that were for the contestant named 'Tabatha Gehling ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
        "name dict": {
          "{TABLE1}": "votes",
          "{COLUMN2}": "phone_number",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "'Tabatha Gehling'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "0",
          "{VALUE1}": "2",
          "{COLUMN0}": "created",
          "{COLUMN1}": "state",
          "{TABLE0}": "contestants",
          "{VALUE2}": "2",
          "{COLUMN3}": "contestant_number",
          "{COLUMN4}": "contestant_name",
          "{VALUE6}": "1",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {TABLE1} are owned by someone who lives in {VALUE0} ? list the {COLUMN2} 's {COLUMN0} {COLUMN1} and the dog 's {COLUMN1} .",
        "question": "Which dogs are owned by someone who lives in Virginia ? List the owner 's first name and the dog 's name .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "owner_id",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Virginia'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "name",
          "{TABLE0}": "owners",
          "{VALUE2}": "2",
          "{COLUMN3}": "state",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "find the {COLUMN0} {COLUMN1} of {TABLE0} living in {VALUE0} and the {COLUMN1} of {TABLE1} they own .",
        "question": "Find the first names of owners living in Virginia and the names of dogs they own .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "owner_id",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Virginia'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "name",
          "{TABLE0}": "owners",
          "{VALUE2}": "2",
          "{COLUMN3}": "state",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "list the dog {COLUMN0} , {COLUMN1} and {COLUMN2} of the {TABLE0} who have been {COLUMN3} ? {VALUE0} stands for yes , and 0 stands for no .",
        "question": "List the dog name , age and weight of the dogs who have been abandoned ? 1 stands for yes , and 0 stands for no .",
        "concise pattern": "WHERE",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "name dict": {
          "{COLUMN2}": "weight",
          "{COLUMN1}": "age",
          "{COLUMN3}": "abandoned_yn",
          "{COLUMN0}": "name",
          "{OP0}": "=",
          "{VALUE0}": "1",
          "{TABLE0}": "dogs"
        }
      },
      {
        "template": "what are the dog {COLUMN0} , {COLUMN1} and {COLUMN2} of the {TABLE0} that were {COLUMN3} ? note that {VALUE0} stands for yes , and 0 stands for no in the tables .",
        "question": "What are the dog name , age and weight of the dogs that were abandoned ? Note that 1 stands for yes , and 0 stands for no in the tables .",
        "concise pattern": "WHERE",
        "query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "name dict": {
          "{COLUMN2}": "weight",
          "{COLUMN1}": "age",
          "{COLUMN3}": "abandoned_yn",
          "{COLUMN0}": "name",
          "{OP0}": "=",
          "{VALUE0}": "1",
          "{TABLE0}": "dogs"
        }
      },
      {
        "template": "list all {COLUMN1} {COLUMN0} in {TABLE2} in {COLUMN3} {VALUE9} .",
        "question": "List all singer names in concerts in year 2014 .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "name dict": {
          "{TABLE1}": "singer",
          "{COLUMN2}": "concert_id",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{VALUE0}": "2",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE9}": "2014",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE0}": "singer in concert",
          "{VALUE2}": "2",
          "{COLUMN3}": "year",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{TABLE2}": "concert",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the {COLUMN0} number and {COLUMN1} type code for the {COLUMN1} with {COLUMN0} number later than {VALUE0} ?",
        "question": "What is the version number and template type code for the template with version number later than 5 ?",
        "concise pattern": "WHERE",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "name dict": {
          "{COLUMN0}": "version_number",
          "{OP0}": ">",
          "{VALUE0}": "5",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "return the {COLUMN0} numbers and {COLUMN1} type codes of {TABLE0} with a {COLUMN0} number greater than {VALUE0} .",
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5 .",
        "concise pattern": "WHERE",
        "query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "name dict": {
          "{COLUMN0}": "version_number",
          "{OP0}": ">",
          "{VALUE0}": "5",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "list the {COLUMN0} name and {COLUMN1} date of all {TABLE0} from the {COLUMN2} with code {VALUE0} .",
        "question": "List the first name and birth date of all players from the country with code USA .",
        "concise pattern": "WHERE",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "country_code",
          "{COLUMN1}": "birth_date",
          "{TABLE0}": "players",
          "{COLUMN0}": "first_name",
          "{OP0}": "=",
          "{VALUE0}": "'USA'"
        }
      },
      {
        "template": "what are the {TABLE0} and injury situations {COLUMN2} by the {TABLE1} with {COLUMN4} '{VALUE0} ' ?",
        "question": "What are the death and injury situations caused by the ship with tonnage 't ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
        "name dict": {
          "{TABLE1}": "ship",
          "{COLUMN2}": "caused_by_ship_id",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'t'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "killed",
          "{COLUMN1}": "injured",
          "{TABLE0}": "death",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{COLUMN4}": "tonnage",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} of the {TABLE0} when the {COLUMN2} commander is not '{VALUE0} '",
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril '",
        "concise pattern": "WHERE",
        "query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "bulgarian_commander",
          "{COLUMN1}": "result",
          "{TABLE0}": "battle",
          "{COLUMN0}": "name",
          "{OP0}": "!=",
          "{VALUE0}": "'Boril'"
        }
      },
      {
        "template": "what are the different {COLUMN0} and {COLUMN1} of the {TABLE0} that {COLUMN2} any '{VALUE0} ' type shipes ?",
        "question": "What are the different ids and names of the battles that lost any 'Brig ' type shipes ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
        "name dict": {
          "{TABLE1}": "ship",
          "{COLUMN2}": "lost_in_battle",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Brig'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "id",
          "{COLUMN1}": "name",
          "{TABLE0}": "battle",
          "{VALUE2}": "1",
          "{COLUMN3}": "ship_type",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "who is enrolled in a {VALUE0} {COLUMN4} program ? list the {COLUMN0} name , {COLUMN1} name , {COLUMN2} name .",
        "question": "Who is enrolled in a Bachelor degree program ? List the first name , middle name , last name .",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "name dict": {
          "{COLUMN5}": "degree_summary_name",
          "{COLUMN2}": "last_name",
          "{TABLE1}": "student enrolment",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "middle_name",
          "{VALUE12}": "0",
          "{COLUMN4}": "degree_program_id",
          "{OP0}": "=",
          "{TABLE2}": "degree programs",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "students",
          "{VALUE5}": "2",
          "{VALUE0}": "'Bachelor'",
          "{VALUE9}": "2",
          "{COLUMN0}": "first_name",
          "{VALUE2}": "1",
          "{COLUMN3}": "student_id",
          "{VALUE11}": "3",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "list the {COLUMN0} of all {TABLE1} showed on tv {COLUMN2} with {COLUMN3} name `` {VALUE0} '' .",
        "question": "List the title of all Cartoons showed on TV Channel with series name `` Sky Radio '' .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Sky Radio\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "title",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "series_name",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "list the {COLUMN0} of all tv {COLUMN3} showed on tv {COLUMN2} with {COLUMN3} name `` {VALUE0} '' .",
        "question": "List the Episode of all TV series showed on TV Channel with series name `` Sky Radio '' .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "name dict": {
          "{TABLE1}": "tv series",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Sky Radio\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "episode",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "series_name",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "which {COLUMN0} ' tv {COLUMN2} are playing some {TABLE1} {COLUMN3} by {VALUE0} ?",
        "question": "which countries ' tv channels are playing some cartoon written by Todd Casey ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "'Todd Casey'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "country",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "written_by",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "which {COLUMN0} ' tv {COLUMN2} are not playing any {TABLE1} {COLUMN3} by {VALUE0} ?",
        "question": "which countries ' tv channels are not playing any cartoon written by Todd Casey ?",
        "concise pattern": "WHERE",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "'Todd Casey'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "country",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "written_by",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "find the {COLUMN0} of tv {COLUMN1} that do not play any {TABLE1} {COLUMN2} by {VALUE0} .",
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones .",
        "concise pattern": "WHERE",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "name dict": {
          "{VALUE1}": "0",
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "directed_by",
          "{COLUMN1}": "channel",
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "id",
          "{OP0}": "=",
          "{VALUE0}": "'Ben Jones'"
        }
      },
      {
        "template": "what are the {COLUMN0} of the tv {COLUMN1} that do not have any {TABLE1} {COLUMN2} by {VALUE0} ?",
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones ?",
        "concise pattern": "WHERE",
        "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "name dict": {
          "{VALUE1}": "0",
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "directed_by",
          "{COLUMN1}": "channel",
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "id",
          "{OP0}": "=",
          "{VALUE0}": "'Ben Jones'"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} who have conducted {COLUMN1} founded after the {COLUMN3} {VALUE5} ?",
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "name dict": {
          "{COLUMN2}": "conductor_id",
          "{VALUE4}": "2",
          "{TABLE0}": "conductor",
          "{VALUE5}": "2008",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{VALUE2}": "2",
          "{COLUMN3}": "year_of_founded",
          "{OP0}": ">",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "which {TABLE0} live in the {COLUMN3} whose name contains the substring 'north ' ? list his {COLUMN0} name , {COLUMN1} name and {COLUMN2} .",
        "question": "Which owners live in the state whose name contains the substring 'North ' ? List his first name , last name and email .",
        "concise pattern": "WHERE",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "email_address",
          "{COLUMN1}": "last_name",
          "{COLUMN3}": "state",
          "{COLUMN0}": "first_name",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%North%'",
          "{TABLE0}": "owners"
        }
      },
      {
        "template": "return the {COLUMN0} name , {COLUMN1} name and {COLUMN2} of the {TABLE0} living in a {COLUMN3} whose name contains the substring 'north ' .",
        "question": "Return the first name , last name and email of the owners living in a state whose name contains the substring 'North ' .",
        "concise pattern": "WHERE",
        "query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "email_address",
          "{COLUMN1}": "last_name",
          "{COLUMN3}": "state",
          "{COLUMN0}": "first_name",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%North%'",
          "{TABLE0}": "owners"
        }
      },
      {
        "template": "show distinct {COLUMN0} of {TABLE0} that have {TABLE1} with {COLUMN2} more than {VALUE6} .",
        "question": "Show distinct names of singers that have songs with sales more than 300000 .",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "name dict": {
          "{TABLE1}": "song",
          "{COLUMN2}": "sales",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE0}": "singer",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "300000"
        }
      },
      {
        "template": "what are all distinct {COLUMN0} where {TABLE0} above {COLUMN1} {VALUE0} are from ?",
        "question": "What are all distinct countries where singers above age 20 are from ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "name dict": {
          "{COLUMN0}": "country",
          "{OP0}": ">",
          "{VALUE0}": "20",
          "{COLUMN1}": "age",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "what are the different {COLUMN0} with {TABLE0} above {COLUMN1} {VALUE0} ?",
        "question": "What are the different countries with singers above age 20 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "name dict": {
          "{COLUMN0}": "country",
          "{OP0}": ">",
          "{VALUE0}": "20",
          "{COLUMN1}": "age",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "what are the {COLUMN0} of all {TABLE0} that did not have a {TABLE1} in {VALUE6} ?",
        "question": "What are the names of all stadiums that did not have a concert in 2014 ?",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "name dict": {
          "{TABLE1}": "concert",
          "{COLUMN2}": "year",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "stadium_id",
          "{TABLE0}": "stadium",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "2014"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE1} who performed in a {COLUMN2} in {VALUE9} ?",
        "question": "What are the names of the singers who performed in a concert in 2014 ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "name dict": {
          "{TABLE1}": "singer",
          "{COLUMN2}": "concert_id",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{VALUE0}": "2",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE9}": "2014",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE0}": "singer in concert",
          "{VALUE2}": "2",
          "{COLUMN3}": "year",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{TABLE2}": "concert",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the {COLUMN0} and nation of the {TABLE0} who have a {COLUMN2} having 'hey ' in its {COLUMN0} ?",
        "question": "what is the name and nation of the singer who have a song having 'Hey ' in its name ?",
        "concise pattern": "WHERE",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "song_name",
          "{COLUMN1}": "country",
          "{TABLE0}": "singer",
          "{COLUMN0}": "name",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%Hey%'"
        }
      },
      {
        "template": "what are the {COLUMN0} names and {COLUMN1} for {COLUMN0} in the {VALUE0} ?",
        "question": "What are the airline names and abbreviations for airlines in the USA ?",
        "concise pattern": "WHERE",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "country",
          "{COLUMN1}": "abbreviation",
          "{TABLE0}": "airlines",
          "{COLUMN0}": "airline",
          "{OP0}": "=",
          "{VALUE0}": "\"USA\""
        }
      },
      {
        "template": "what is the {COLUMN3} id , {COLUMN1} id and description for {COLUMN3} named `` {VALUE0} '' ?",
        "question": "What is the document id , template id and description for document named `` Robbin CV '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "document_description",
          "{COLUMN1}": "template_id",
          "{COLUMN3}": "document_name",
          "{COLUMN0}": "document_id",
          "{OP0}": "=",
          "{VALUE0}": "\"Robbin CV\"",
          "{TABLE0}": "documents"
        }
      },
      {
        "template": "return the {COLUMN3} id , {COLUMN1} id , and description for the {COLUMN3} with the name {VALUE0} .",
        "question": "Return the document id , template id , and description for the document with the name Robbin CV .",
        "concise pattern": "WHERE",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "document_description",
          "{COLUMN1}": "template_id",
          "{COLUMN3}": "document_name",
          "{COLUMN0}": "document_id",
          "{OP0}": "=",
          "{VALUE0}": "\"Robbin CV\"",
          "{TABLE0}": "documents"
        }
      },
      {
        "template": "what is the {COLUMN1} type code of the {COLUMN1} used by {COLUMN2} with the name `` {VALUE0} '' ?",
        "question": "What is the template type code of the template used by document with the name `` Data base '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "document_name",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Data base\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "return the {COLUMN1} type code of the {COLUMN1} that is used by a {COLUMN2} named {VALUE0} .",
        "question": "Return the template type code of the template that is used by a document named Data base .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "document_name",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Data base\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "show all {COLUMN0} names using {TABLE0} with {COLUMN1} type code {VALUE0} .",
        "question": "Show all document names using templates with template type code BK .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "template_type_code",
          "{VALUE4}": "1",
          "{VALUE0}": "\"BK\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "document_name",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "show the {COLUMN0} of the {COLUMN3} for the {VALUE0} {COLUMN1} .",
        "question": "Show the name of the teacher for the math course .",
        "concise pattern": "WHERE",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "name dict": {
          "{TABLE1}": "teacher",
          "{COLUMN2}": "course_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "\"Math\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "2",
          "{VALUE1}": "3",
          "{VALUE10}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "course",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "1",
          "{COLUMN3}": "teacher_id",
          "{OP0}": "=",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} ticket expense of the {TABLE1} whose membership {COLUMN3} is {VALUE1} ?",
        "question": "What is the total ticket expense of the visitors whose membership level is 1 ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
        "name dict": {
          "{TABLE1}": "visit",
          "{COLUMN2}": "visitor_id",
          "{AGG0}": "SUM",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "total_spent",
          "{COLUMN1}": "id",
          "{TABLE0}": "customer",
          "{VALUE2}": "2",
          "{COLUMN3}": "level_of_membership",
          "{OP0}": "=",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} names and {COLUMN1} dates of {TABLE0} from the {VALUE0} ?",
        "question": "What are the first names and birth dates of players from the USA ?",
        "concise pattern": "WHERE",
        "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "country_code",
          "{COLUMN1}": "birth_date",
          "{TABLE0}": "players",
          "{COLUMN0}": "first_name",
          "{OP0}": "=",
          "{VALUE0}": "'USA'"
        }
      },
      {
        "template": "what is the tv {COLUMN2} that shows the {TABLE1} `` the rise of the blue beetle ! '' ? list the tv {COLUMN2} 's {COLUMN0} name .",
        "question": "What is the TV Channel that shows the cartoon `` The Rise of the Blue Beetle ! '' ? List the TV Channel 's series name .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"The Rise of the Blue Beetle!\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "series_name",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "title",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN0} of all the cartools that are on the tv {COLUMN2} with the {COLUMN3} name `` {VALUE0} '' ?",
        "question": "What is the title of all the cartools that are on the TV Channel with the series name `` Sky Radio '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Sky Radio\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "title",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "series_name",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} that have {TABLE1} on tv that were {COLUMN3} by {VALUE0} ?",
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "'Todd Casey'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "country",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "written_by",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} that are not playing {TABLE1} {COLUMN3} by {VALUE0} ?",
        "question": "What are the countries that are not playing cartoons written by Todd Casey ?",
        "concise pattern": "WHERE",
        "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "'Todd Casey'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "country",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "written_by",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "show {COLUMN0} of {TABLE0} whose {COLUMN1} is not `` {VALUE0} '' .",
        "question": "Show names of people whose nationality is not `` Russia '' .",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "nationality",
          "{TABLE0}": "people",
          "{OP0}": "!=",
          "{VALUE0}": "\"Russia\""
        }
      },
      {
        "template": "what is last date {COLUMN0} of {TABLE0} from the {COLUMN1} '{VALUE0} ' ?",
        "question": "What is last date created of votes from the state 'CA ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT max(created) FROM votes WHERE state  =  'CA'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "created",
          "{AGG0}": "MAX",
          "{COLUMN1}": "state",
          "{TABLE0}": "votes",
          "{OP0}": "=",
          "{VALUE0}": "'CA'"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} whose {COLUMN1} are not `` {VALUE0} '' ?",
        "question": "What are the names of conductors whose nationalities are not `` USA '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "nationality",
          "{TABLE0}": "conductor",
          "{OP0}": "!=",
          "{VALUE0}": "'USA'"
        }
      },
      {
        "template": "return the {COLUMN0} of {TABLE0} that do not have the {COLUMN1} `` {VALUE0} '' .",
        "question": "Return the names of conductors that do not have the nationality `` USA '' .",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "nationality",
          "{TABLE0}": "conductor",
          "{OP0}": "!=",
          "{VALUE0}": "'USA'"
        }
      },
      {
        "template": "what are the maximum and minimum {COLUMN0} of {TABLE0} whose {COLUMN1} is not `` {VALUE0} '' .",
        "question": "What are the maximum and minimum share of performances whose type is not `` Live final '' .",
        "concise pattern": "WHERE",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "name dict": {
          "{AGG1}": "MIN",
          "{AGG0}": "MAX",
          "{TABLE0}": "performance",
          "{VALUE0}": "\"Live final\"",
          "{VALUE1}": "0",
          "{COLUMN0}": "share",
          "{COLUMN1}": "type",
          "{OP0}": "!="
        }
      },
      {
        "template": "return the maximum and minimum {COLUMN0} for {TABLE0} that do not have the {COLUMN1} `` {VALUE0} '' .",
        "question": "Return the maximum and minimum shares for performances that do not have the type `` Live final '' .",
        "concise pattern": "WHERE",
        "query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "name dict": {
          "{AGG1}": "MIN",
          "{AGG0}": "MAX",
          "{TABLE0}": "performance",
          "{VALUE0}": "\"Live final\"",
          "{VALUE1}": "0",
          "{COLUMN0}": "share",
          "{COLUMN1}": "type",
          "{OP0}": "!="
        }
      },
      {
        "template": "please show the {COLUMN0} of the {COLUMN2} that has conducted {COLUMN1} founded after {VALUE5} .",
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008 .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "name dict": {
          "{COLUMN2}": "conductor_id",
          "{VALUE4}": "2",
          "{TABLE0}": "conductor",
          "{VALUE5}": "2008",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{VALUE2}": "2",
          "{COLUMN3}": "year_of_founded",
          "{OP0}": ">",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "return the {COLUMN0} of {TABLE0} of the high school {COLUMN1} {VALUE0} .",
        "question": "Return the names of friends of the high school student Kyle .",
        "concise pattern": "WHERE",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "\"Kyle\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "2",
          "{VALUE1}": "3",
          "{VALUE10}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "1",
          "{COLUMN3}": "friend_id",
          "{OP0}": "=",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {TABLE0} live in a city containing the substring 'west ' ? list his or her {COLUMN0} , {COLUMN1} , city and {COLUMN3} .",
        "question": "Which professionals live in a city containing the substring 'West ' ? List his or her role , street , city and state .",
        "concise pattern": "WHERE",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "city",
          "{COLUMN1}": "street",
          "{COLUMN3}": "state",
          "{COLUMN0}": "role_code",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%West%'",
          "{TABLE0}": "professionals"
        }
      },
      {
        "template": "find the {COLUMN0} , {COLUMN1} , city and {COLUMN3} of the {TABLE0} living in a city that contains the substring 'west ' .",
        "question": "Find the role , street , city and state of the professionals living in a city that contains the substring 'West ' .",
        "concise pattern": "WHERE",
        "query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "city",
          "{COLUMN1}": "street",
          "{COLUMN3}": "state",
          "{COLUMN0}": "role_code",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%West%'",
          "{TABLE0}": "professionals"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} whose {COLUMN1} is not `` {VALUE0} '' .",
        "question": "List the name of singers whose citizenship is not `` France '' .",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "citizenship",
          "{TABLE0}": "singer",
          "{OP0}": "!=",
          "{VALUE0}": "\"France\""
        }
      },
      {
        "template": "what are the different {COLUMN0} of the {TABLE0} that have {COLUMN2} more than {VALUE6} ?",
        "question": "what are the different names of the singers that have sales more than 300000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "name dict": {
          "{TABLE1}": "song",
          "{COLUMN2}": "sales",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE0}": "singer",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "300000"
        }
      },
      {
        "template": "what is the average , minimum , and maximum {COLUMN0} of all {TABLE0} from {VALUE0} ?",
        "question": "What is the average , minimum , and maximum age of all singers from France ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "name dict": {
          "{AGG1}": "MIN",
          "{AGG0}": "AVG",
          "{TABLE0}": "singer",
          "{VALUE0}": "'France'",
          "{VALUE1}": "0",
          "{COLUMN0}": "age",
          "{COLUMN1}": "country",
          "{OP0}": "=",
          "{AGG2}": "MAX"
        }
      },
      {
        "template": "what is the {COLUMN0} and country of origin of every {TABLE0} who has a {COLUMN2} with the word 'hey ' in its title ?",
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey ' in its title ?",
        "concise pattern": "WHERE",
        "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "song_name",
          "{COLUMN1}": "country",
          "{TABLE0}": "singer",
          "{COLUMN0}": "name",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%Hey%'"
        }
      },
      {
        "template": "find the number of {TABLE0} whose {COLUMN0} is heavier than {VALUE0} .",
        "question": "Find the number of pets whose weight is heavier than 10 .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10",
        "name dict": {
          "{COLUMN0}": "weight",
          "{OP0}": ">",
          "{VALUE0}": "10",
          "{AGG0}": "COUNT",
          "{TABLE0}": "pets"
        }
      },
      {
        "template": "how many {TABLE0} have a greater {COLUMN0} than {VALUE0} ?",
        "question": "How many pets have a greater weight than 10 ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM pets WHERE weight  >  10",
        "name dict": {
          "{COLUMN0}": "weight",
          "{OP0}": ">",
          "{VALUE0}": "10",
          "{AGG0}": "COUNT",
          "{TABLE0}": "pets"
        }
      },
      {
        "template": "how many pets are owned by {TABLE0} that have an {COLUMN1} greater than {VALUE5} ?",
        "question": "How many pets are owned by students that have an age greater than 20 ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{TABLE1}": "has pet",
          "{VALUE5}": "20",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "stuid",
          "{COLUMN1}": "age",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": ">",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "find the id and {COLUMN1} of all {TABLE0} whose age is older than {VALUE0} .",
        "question": "Find the id and weight of all pets whose age is older than 1 .",
        "concise pattern": "WHERE",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "name dict": {
          "{COLUMN2}": "pet_age",
          "{COLUMN1}": "weight",
          "{TABLE0}": "pets",
          "{COLUMN0}": "petid",
          "{OP0}": ">",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the id and {COLUMN1} of every {COLUMN2} who is older than {VALUE0} ?",
        "question": "What is the id and weight of every pet who is older than 1 ?",
        "concise pattern": "WHERE",
        "query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "name dict": {
          "{COLUMN2}": "pet_age",
          "{COLUMN1}": "weight",
          "{TABLE0}": "pets",
          "{COLUMN0}": "petid",
          "{OP0}": ">",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "find the name of the {COLUMN0} that produced some cars in the {COLUMN4} of {VALUE0} ?",
        "question": "Find the name of the makers that produced some cars in the year of 1970 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "name dict": {
          "{COLUMN2}": "model",
          "{TABLE1}": "model list",
          "{VALUE13}": "0",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "id",
          "{VALUE12}": "4",
          "{COLUMN4}": "year",
          "{OP0}": "=",
          "{TABLE2}": "car names",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "car makers",
          "{TABLE3}": "cars data",
          "{VALUE5}": "2",
          "{VALUE0}": "'1970'",
          "{VALUE9}": "4",
          "{COLUMN0}": "maker",
          "{VALUE2}": "1",
          "{COLUMN3}": "makeid",
          "{VALUE11}": "4",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what is the average miles per gallon ( {COLUMN0} ) of the cars with {VALUE0} {COLUMN1} ?",
        "question": "What is the average miles per gallon ( mpg ) of the cars with 4 cylinders ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "name dict": {
          "{COLUMN0}": "mpg",
          "{AGG0}": "AVG",
          "{COLUMN1}": "cylinders",
          "{TABLE0}": "cars data",
          "{OP0}": "=",
          "{VALUE0}": "4"
        }
      },
      {
        "template": "what is the average {COLUMN0} of the cars of {COLUMN3} {VALUE0} ?",
        "question": "What is the average edispl of the cars of model volvo ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{AGG0}": "AVG",
          "{VALUE4}": "1",
          "{VALUE0}": "'volvo'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "edispl",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "1",
          "{COLUMN3}": "model",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN0} of {COLUMN1} `` {VALUE0} '' ?",
        "question": "What is the abbreviation of Airline `` JetBlue Airways '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "abbreviation",
          "{COLUMN1}": "airline",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"JetBlue Airways\""
        }
      },
      {
        "template": "list all {COLUMN0} names and their {COLUMN1} in `` {VALUE0} '' .",
        "question": "List all airline names and their abbreviations in `` USA '' .",
        "concise pattern": "WHERE",
        "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "country",
          "{COLUMN1}": "abbreviation",
          "{TABLE0}": "airlines",
          "{COLUMN0}": "airline",
          "{OP0}": "=",
          "{VALUE0}": "\"USA\""
        }
      },
      {
        "template": "which {COLUMN0} has {COLUMN1} '{VALUE0} ' ?",
        "question": "Which airline has abbreviation 'UAL ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "abbreviation",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"UAL\""
        }
      },
      {
        "template": "give the {COLUMN0} with {COLUMN1} '{VALUE0} ' .",
        "question": "Give the airline with abbreviation 'UAL ' .",
        "concise pattern": "WHERE",
        "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "abbreviation",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"UAL\""
        }
      },
      {
        "template": "how many {TABLE0} does {COLUMN0} '{VALUE0} ' have ?",
        "question": "How many flights does airline 'JetBlue Airways ' have ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "airlines",
          "{VALUE5}": "2",
          "{VALUE0}": "\"JetBlue Airways\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "flights",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are {COLUMN0} that have {TABLE1} arriving at airport '{VALUE0} ' ?",
        "question": "What are airlines that have flights arriving at airport 'AHD ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "destairport",
          "{VALUE4}": "1",
          "{VALUE0}": "\"AHD\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN0} name and {COLUMN1} id for {COLUMN0} with description with the letter 'w ' in it ?",
        "question": "What is the document name and template id for document with description with the letter 'w ' in it ?",
        "concise pattern": "WHERE",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "document_description",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "documents",
          "{COLUMN0}": "document_name",
          "{OP0}": "LIKE",
          "{VALUE0}": "\"%w%\""
        }
      },
      {
        "template": "how many {TABLE0} are using the {COLUMN1} with type code '{VALUE0} ' ?",
        "question": "How many documents are using the template with type code 'PPT ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "templates",
          "{VALUE5}": "2",
          "{VALUE0}": "'PPT'",
          "{VALUE1}": "1",
          "{COLUMN0}": "template_id",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "documents",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "count the number of {TABLE0} that use the {VALUE0} {COLUMN1} type .",
        "question": "Count the number of documents that use the PPT template type .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "templates",
          "{VALUE5}": "2",
          "{VALUE0}": "'PPT'",
          "{VALUE1}": "1",
          "{COLUMN0}": "template_id",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "documents",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "how many {TABLE0} have {COLUMN0} type code {VALUE0} ?",
        "question": "How many templates have template type code CV ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "template_type_code",
          "{AGG0}": "COUNT",
          "{TABLE0}": "templates",
          "{OP0}": "=",
          "{VALUE0}": "\"CV\""
        }
      },
      {
        "template": "what are the names of {TABLE1} that use {TABLE0} with the code {VALUE0} ?",
        "question": "What are the names of documents that use templates with the code BK ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "template_type_code",
          "{VALUE4}": "1",
          "{VALUE0}": "\"BK\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "document_name",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN1} type descriptions for {COLUMN1} type code `` {VALUE0} '' .",
        "question": "What is the template type descriptions for template type code `` AD '' .",
        "concise pattern": "WHERE",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "template_type_description",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "reference template types",
          "{OP0}": "=",
          "{VALUE0}": "\"AD\""
        }
      },
      {
        "template": "return the {COLUMN1} type description of the {COLUMN1} type with the code {VALUE0} .",
        "question": "Return the template type description of the template type with the code AD .",
        "concise pattern": "WHERE",
        "query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "template_type_description",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "reference template types",
          "{OP0}": "=",
          "{VALUE0}": "\"AD\""
        }
      },
      {
        "template": "what is the {COLUMN1} type code for {COLUMN1} type description `` {VALUE0} '' .",
        "question": "What is the template type code for template type description `` Book '' .",
        "concise pattern": "WHERE",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_type_description",
          "{TABLE0}": "reference template types",
          "{OP0}": "=",
          "{VALUE0}": "\"Book\""
        }
      },
      {
        "template": "what are the {COLUMN1} ids with {COLUMN1} type description `` {VALUE0} '' .",
        "question": "What are the template ids with template type description `` Presentation '' .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "name dict": {
          "{TABLE1}": "templates",
          "{COLUMN2}": "template_type_description",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Presentation\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "template_id",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "reference template types",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many {TABLE0} for the {COLUMN1} with name '{VALUE0} ' ?",
        "question": "How many paragraphs for the document with name 'Summer Show ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "documents",
          "{VALUE5}": "2",
          "{VALUE0}": "'Summer Show'",
          "{VALUE1}": "1",
          "{COLUMN0}": "document_id",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "count the number of {TABLE0} in the {COLUMN1} named '{VALUE0} ' .",
        "question": "Count the number of paragraphs in the document named 'Summer Show ' .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "documents",
          "{VALUE5}": "2",
          "{VALUE0}": "'Summer Show'",
          "{VALUE1}": "1",
          "{COLUMN0}": "document_id",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "show {COLUMN1} details for {COLUMN1} with text '{VALUE0} ' .",
        "question": "Show paragraph details for paragraph with text 'Korea ' .",
        "concise pattern": "WHERE",
        "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "other_details",
          "{COLUMN1}": "paragraph_text",
          "{TABLE0}": "paragraphs",
          "{OP0}": "=",
          "{VALUE0}": "'Korea'"
        }
      },
      {
        "template": "show all {COLUMN1} ids and texts for the {COLUMN3} with name '{VALUE0} ' .",
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY ' .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "document_id",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Welcome to NY'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "paragraph_id",
          "{COLUMN1}": "paragraph_text",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{COLUMN3}": "document_name",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the ids and texts of {TABLE0} in the {COLUMN3} titled '{VALUE0} ' ?",
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "document_id",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Welcome to NY'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "paragraph_id",
          "{COLUMN1}": "paragraph_text",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{COLUMN3}": "document_name",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "show all {COLUMN0} texts for the {COLUMN1} `` {VALUE0} '' .",
        "question": "Show all paragraph texts for the document `` Customer reviews '' .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "document_name",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Customer reviews\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "paragraph_text",
          "{COLUMN1}": "document_id",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} texts for the {COLUMN1} with the name '{VALUE0} ' ?",
        "question": "What are the paragraph texts for the document with the name 'Customer reviews ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "name dict": {
          "{TABLE1}": "documents",
          "{COLUMN2}": "document_name",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Customer reviews\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "paragraph_text",
          "{COLUMN1}": "document_id",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} whose {COLUMN1} is not `` little lever urban district '' .",
        "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "hometown",
          "{TABLE0}": "teacher",
          "{OP0}": "!=",
          "{VALUE0}": "\"Little Lever Urban Distric\""
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} whose {COLUMN1} is not `` little lever urban district '' ?",
        "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "hometown",
          "{TABLE0}": "teacher",
          "{OP0}": "!=",
          "{VALUE0}": "\"Little Lever Urban Distric\""
        }
      },
      {
        "template": "what are the {COLUMN0} of the people who teach {VALUE0} {COLUMN1} ?",
        "question": "What are the names of the people who teach math courses ?",
        "concise pattern": "WHERE",
        "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "name dict": {
          "{TABLE1}": "teacher",
          "{COLUMN2}": "course_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "\"Math\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "2",
          "{VALUE1}": "3",
          "{VALUE10}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "course",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "1",
          "{COLUMN3}": "teacher_id",
          "{OP0}": "=",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the average {COLUMN0} of the visitors whose membership {COLUMN1} is not higher than {VALUE0} ?",
        "question": "What is the average age of the visitors whose membership level is not higher than 4 ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
        "name dict": {
          "{COLUMN0}": "age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "level_of_membership",
          "{TABLE0}": "customer",
          "{OP0}": "<=",
          "{VALUE0}": "4"
        }
      },
      {
        "template": "find the average number of staff working for the {TABLE0} that were {COLUMN1} before {VALUE0} .",
        "question": "Find the average number of staff working for the museums that were open before 2009 .",
        "concise pattern": "WHERE",
        "query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
        "name dict": {
          "{COLUMN0}": "num_of_staff",
          "{AGG0}": "AVG",
          "{COLUMN1}": "open_year",
          "{TABLE0}": "museum",
          "{OP0}": "<",
          "{VALUE0}": "2009"
        }
      },
      {
        "template": "what are the opening year and staff number of the {TABLE0} {COLUMN2} {VALUE0} ?",
        "question": "What are the opening year and staff number of the museum named Plaza Museum ?",
        "concise pattern": "WHERE",
        "query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "name",
          "{COLUMN1}": "open_year",
          "{TABLE0}": "museum",
          "{COLUMN0}": "num_of_staff",
          "{OP0}": "=",
          "{VALUE0}": "'Plaza Museum'"
        }
      },
      {
        "template": "what are the {COLUMN0} , {COLUMN1} , and {COLUMN2} names for everybody enrolled in a bachelors program ?",
        "question": "What are the first , middle , and last names for everybody enrolled in a Bachelors program ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "name dict": {
          "{COLUMN5}": "degree_summary_name",
          "{COLUMN2}": "last_name",
          "{TABLE1}": "student enrolment",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "middle_name",
          "{VALUE12}": "0",
          "{COLUMN4}": "degree_program_id",
          "{OP0}": "=",
          "{TABLE2}": "degree programs",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "students",
          "{VALUE5}": "2",
          "{VALUE0}": "'Bachelor'",
          "{VALUE9}": "2",
          "{COLUMN0}": "first_name",
          "{VALUE2}": "1",
          "{COLUMN3}": "student_id",
          "{VALUE11}": "3",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "list all {TABLE0} {COLUMN1} by `` {VALUE0} '' .",
        "question": "List all cartoon directed by `` Ben Jones '' .",
        "concise pattern": "WHERE",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "title",
          "{COLUMN1}": "directed_by",
          "{TABLE0}": "cartoon",
          "{OP0}": "=",
          "{VALUE0}": "\"Ben Jones\""
        }
      },
      {
        "template": "what are the names of all {TABLE0} {COLUMN1} by {VALUE0} ?",
        "question": "What are the names of all cartoons directed by Ben Jones ?",
        "concise pattern": "WHERE",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "title",
          "{COLUMN1}": "directed_by",
          "{TABLE0}": "cartoon",
          "{OP0}": "=",
          "{VALUE0}": "\"Ben Jones\""
        }
      },
      {
        "template": "how many {TABLE0} were {COLUMN0} by `` {VALUE0} '' ?",
        "question": "How many cartoons were written by `` Joseph Kuhr '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "written_by",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cartoon",
          "{OP0}": "=",
          "{VALUE0}": "\"Joseph Kuhr\""
        }
      },
      {
        "template": "what is the number of {TABLE0} {COLUMN0} by {VALUE0} ?",
        "question": "What is the number of cartoones written by Joseph Kuhr ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "written_by",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cartoon",
          "{OP0}": "=",
          "{VALUE0}": "\"Joseph Kuhr\""
        }
      },
      {
        "template": "what is the {COLUMN0} of the {COLUMN1} {VALUE0} ?",
        "question": "What is the content of the series Sky Radio ?",
        "concise pattern": "WHERE",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "content",
          "{COLUMN1}": "series_name",
          "{TABLE0}": "tv channel",
          "{OP0}": "=",
          "{VALUE0}": "\"Sky Radio\""
        }
      },
      {
        "template": "what are the {COLUMN0} options of the tv channels whose {COLUMN1} names are {VALUE0} ?",
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio ?",
        "concise pattern": "WHERE",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "package_option",
          "{COLUMN1}": "series_name",
          "{TABLE0}": "tv channel",
          "{OP0}": "=",
          "{VALUE0}": "\"Sky Radio\""
        }
      },
      {
        "template": "what is the {COLUMN0} name of the tv {COLUMN2} that shows the {TABLE1} `` the rise of the blue beetle '' ?",
        "question": "What is the series name of the TV Channel that shows the cartoon `` The Rise of the Blue Beetle '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "name dict": {
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"The Rise of the Blue Beetle!\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "series_name",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "title",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN0} date of tv series with {COLUMN1} `` {VALUE0} '' ?",
        "question": "What is the air date of TV series with Episode `` A Love of a Lifetime '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "air_date",
          "{COLUMN1}": "episode",
          "{TABLE0}": "tv series",
          "{OP0}": "=",
          "{VALUE0}": "\"A Love of a Lifetime\""
        }
      },
      {
        "template": "when did the {COLUMN1} `` {VALUE0} '' {COLUMN0} ?",
        "question": "When did the episode `` A Love of a Lifetime '' air ?",
        "concise pattern": "WHERE",
        "query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "air_date",
          "{COLUMN1}": "episode",
          "{TABLE0}": "tv series",
          "{OP0}": "=",
          "{VALUE0}": "\"A Love of a Lifetime\""
        }
      },
      {
        "template": "what is {COLUMN0} rank of tv series with {COLUMN1} `` {VALUE0} '' ?",
        "question": "What is Weekly Rank of TV series with Episode `` A Love of a Lifetime '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "weekly_rank",
          "{COLUMN1}": "episode",
          "{TABLE0}": "tv series",
          "{OP0}": "=",
          "{VALUE0}": "\"A Love of a Lifetime\""
        }
      },
      {
        "template": "what is the {COLUMN0} rank for the {COLUMN1} `` {VALUE0} '' ?",
        "question": "What is the weekly rank for the episode `` A Love of a Lifetime '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "weekly_rank",
          "{COLUMN1}": "episode",
          "{TABLE0}": "tv series",
          "{OP0}": "=",
          "{VALUE0}": "\"A Love of a Lifetime\""
        }
      },
      {
        "template": "what is the name of the {COLUMN0} that has the {COLUMN3} `` {VALUE0} '' ?",
        "question": "What is the name of the series that has the episode `` A Love of a Lifetime '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "name dict": {
          "{TABLE1}": "tv series",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"A Love of a Lifetime\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "series_name",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "episode",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN0} for the tv {COLUMN3} named `` {VALUE0} '' ?",
        "question": "What is the episode for the TV series named `` Sky Radio '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "name dict": {
          "{TABLE1}": "tv series",
          "{COLUMN2}": "channel",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Sky Radio\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "episode",
          "{COLUMN1}": "id",
          "{TABLE0}": "tv channel",
          "{VALUE2}": "1",
          "{COLUMN3}": "series_name",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the maximum number of {COLUMN0} tables made among poker players with {COLUMN1} less than {VALUE0} ?",
        "question": "What is the maximum number of final tables made among poker players with earnings less than 200000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "name dict": {
          "{COLUMN0}": "final_table_made",
          "{AGG0}": "MAX",
          "{COLUMN1}": "earnings",
          "{TABLE0}": "poker player",
          "{OP0}": "<",
          "{VALUE0}": "200000"
        }
      },
      {
        "template": "return the maximum {COLUMN0} tables made across all poker players who have {COLUMN1} below {VALUE0} .",
        "question": "Return the maximum final tables made across all poker players who have earnings below 200000 .",
        "concise pattern": "WHERE",
        "query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "name dict": {
          "{COLUMN0}": "final_table_made",
          "{AGG0}": "MAX",
          "{COLUMN1}": "earnings",
          "{TABLE0}": "poker player",
          "{OP0}": "<",
          "{VALUE0}": "200000"
        }
      },
      {
        "template": "what are the {COLUMN0} of poker players whose {COLUMN2} is higher than {VALUE6} ?",
        "question": "What are the names of poker players whose earnings is higher than 300000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "earnings",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "300000"
        }
      },
      {
        "template": "give the {COLUMN0} of poker players who have {COLUMN2} above {VALUE6} .",
        "question": "Give the names of poker players who have earnings above 300000 .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "earnings",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "300000"
        }
      },
      {
        "template": "what is the average {COLUMN0} of poker players with {COLUMN2} higher than {VALUE6} ?",
        "question": "What is the average earnings of poker players with height higher than 200 ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "height",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "earnings",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "200"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} who are not from {VALUE0} ?",
        "question": "What are the names of people who are not from Russia ?",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "nationality",
          "{TABLE0}": "people",
          "{OP0}": "!=",
          "{VALUE0}": "\"Russia\""
        }
      },
      {
        "template": "what is the {COLUMN0} {COLUMN1} which {VALUE0} belongs to ?",
        "question": "What is the continent name which Anguilla belongs to ?",
        "concise pattern": "WHERE",
        "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "name",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Anguilla\""
        }
      },
      {
        "template": "which {COLUMN0} is the {TABLE1} {VALUE0} located in ?",
        "question": "Which region is the city Kabul located in ?",
        "concise pattern": "WHERE",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "name dict": {
          "{TABLE1}": "city",
          "{COLUMN2}": "countrycode",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Kabul\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "region",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{COLUMN3}": "name",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what are the {COLUMN1} and {COLUMN0} of {VALUE0} ?",
        "question": "What are the region and population of Angola ?",
        "concise pattern": "WHERE",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "name",
          "{COLUMN1}": "region",
          "{TABLE0}": "country",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"Angola\""
        }
      },
      {
        "template": "what {COLUMN1} does {VALUE0} belong to and what is its {COLUMN0} ?",
        "question": "What region does Angola belong to and what is its population ?",
        "concise pattern": "WHERE",
        "query": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "name",
          "{COLUMN1}": "region",
          "{TABLE0}": "country",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"Angola\""
        }
      },
      {
        "template": "what is the total {COLUMN0} and maximum {COLUMN1} in {VALUE0} ?",
        "question": "What is the total population and maximum GNP in Asia ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "MAX",
          "{COLUMN2}": "continent",
          "{AGG0}": "SUM",
          "{COLUMN1}": "gnp",
          "{TABLE0}": "country",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "what is the total {COLUMN0} of {VALUE0} {COLUMN1} ?",
        "question": "What is the total population of Gelderland district ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "population",
          "{AGG0}": "SUM",
          "{COLUMN1}": "district",
          "{TABLE0}": "city",
          "{OP0}": "=",
          "{VALUE0}": "\"Gelderland\""
        }
      },
      {
        "template": "what is the average {COLUMN0} and total {COLUMN1} in all nations whose government is {VALUE0} ?",
        "question": "What is the average GNP and total population in all nations whose government is US territory ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "SUM",
          "{COLUMN2}": "governmentform",
          "{AGG0}": "AVG",
          "{COLUMN1}": "population",
          "{TABLE0}": "country",
          "{COLUMN0}": "gnp",
          "{OP0}": "=",
          "{VALUE0}": "\"US Territory\""
        }
      },
      {
        "template": "give the mean {COLUMN0} and total {COLUMN1} of nations which are considered {VALUE0} .",
        "question": "Give the mean GNP and total population of nations which are considered US territory .",
        "concise pattern": "WHERE",
        "query": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "SUM",
          "{COLUMN2}": "governmentform",
          "{AGG0}": "AVG",
          "{COLUMN1}": "population",
          "{TABLE0}": "country",
          "{COLUMN0}": "gnp",
          "{OP0}": "=",
          "{VALUE0}": "\"US Territory\""
        }
      },
      {
        "template": "return the {COLUMN0} for the high schooler {COLUMN1} {VALUE0} .",
        "question": "Return the grade for the high schooler named Kyle .",
        "concise pattern": "WHERE",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "grade",
          "{COLUMN1}": "name",
          "{TABLE0}": "high schooler",
          "{OP0}": "=",
          "{VALUE0}": "\"Kyle\""
        }
      },
      {
        "template": "show the {COLUMN0} of all high schoolers in {COLUMN1} {VALUE0} .",
        "question": "Show the names of all high schoolers in grade 10 .",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10",
        "name dict": {
          "{COLUMN0}": "name",
          "{OP0}": "=",
          "{VALUE0}": "10",
          "{COLUMN1}": "grade",
          "{TABLE0}": "high schooler"
        }
      },
      {
        "template": "what are the {COLUMN0} of all high schoolers in {COLUMN1} {VALUE0} ?",
        "question": "What are the names of all high schoolers in grade 10 ?",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM Highschooler WHERE grade  =  10",
        "name dict": {
          "{COLUMN0}": "name",
          "{OP0}": "=",
          "{VALUE0}": "10",
          "{COLUMN1}": "grade",
          "{TABLE0}": "high schooler"
        }
      },
      {
        "template": "show the {COLUMN0} of the high schooler {COLUMN1} {VALUE0} .",
        "question": "Show the ID of the high schooler named Kyle .",
        "concise pattern": "WHERE",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "id",
          "{COLUMN1}": "name",
          "{TABLE0}": "high schooler",
          "{OP0}": "=",
          "{VALUE0}": "\"Kyle\""
        }
      },
      {
        "template": "show the {COLUMN0} of all of the high schooler {VALUE0} 's {TABLE0} .",
        "question": "Show the names of all of the high schooler Kyle 's friends .",
        "concise pattern": "WHERE",
        "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "\"Kyle\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "2",
          "{VALUE1}": "3",
          "{VALUE10}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "1",
          "{COLUMN3}": "friend_id",
          "{OP0}": "=",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "how many {TABLE0} does the high school {COLUMN0} {VALUE0} have ?",
        "question": "How many friends does the high school student Kyle have ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Kyle\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "student_id",
          "{COLUMN1}": "id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "return the number of {TABLE0} that the high schooler {COLUMN2} {VALUE0} has .",
        "question": "Return the number of likes that the high schooler named Kyle has .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Kyle\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "student_id",
          "{COLUMN1}": "id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what is the {COLUMN1} type name of {COLUMN1} {VALUE0} ?",
        "question": "What is the feature type name of feature AirCon ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
        "name dict": {
          "{TABLE1}": "reference feature types",
          "{COLUMN2}": "feature_name",
          "{VALUE4}": "1",
          "{VALUE0}": "\"AirCon\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "feature_type_name",
          "{COLUMN1}": "feature_type_code",
          "{TABLE0}": "other available features",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the average , minimum , and maximum {COLUMN0} for all french {TABLE0} ?",
        "question": "What is the average , minimum , and maximum age for all French singers ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "name dict": {
          "{AGG1}": "MIN",
          "{AGG0}": "AVG",
          "{TABLE0}": "singer",
          "{VALUE0}": "'France'",
          "{VALUE1}": "0",
          "{COLUMN0}": "age",
          "{COLUMN1}": "country",
          "{OP0}": "=",
          "{AGG2}": "MAX"
        }
      },
      {
        "template": "find number of pets owned by {TABLE0} who are older than {VALUE5} .",
        "question": "Find number of pets owned by students who are older than 20 .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{TABLE1}": "has pet",
          "{VALUE5}": "20",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "stuid",
          "{COLUMN1}": "age",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": ">",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "find the id of {TABLE0} who do not have a {VALUE0} pet .",
        "question": "Find the id of students who do not have a cat pet .",
        "concise pattern": "WHERE",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "name dict": {
          "{TABLE1}": "has pet",
          "{COLUMN2}": "pettype",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'cat'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "3",
          "{VALUE1}": "1",
          "{VALUE10}": "0",
          "{COLUMN0}": "stuid",
          "{COLUMN1}": "petid",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "3",
          "{TABLE2}": "pets",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what are the ids of the {TABLE0} who do not own cats as {TABLE2} ?",
        "question": "What are the ids of the students who do not own cats as pets ?",
        "concise pattern": "WHERE",
        "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "name dict": {
          "{TABLE1}": "has pet",
          "{COLUMN2}": "pettype",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'cat'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "3",
          "{VALUE1}": "1",
          "{VALUE10}": "0",
          "{COLUMN0}": "stuid",
          "{COLUMN1}": "petid",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "3",
          "{TABLE2}": "pets",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "find the id of the pet owned by {TABLE0} whose last name is \u2018{VALUE0}\u2019 .",
        "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019 .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "name dict": {
          "{TABLE1}": "has pet",
          "{COLUMN2}": "lname",
          "{VALUE4}": "1",
          "{VALUE0}": "'Smith'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "petid",
          "{COLUMN1}": "stuid",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the id of the pet owned by the {TABLE0} whose last name is '{VALUE0} ' ?",
        "question": "What is the id of the pet owned by the student whose last name is 'Smith ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "name dict": {
          "{TABLE1}": "has pet",
          "{COLUMN2}": "lname",
          "{VALUE4}": "1",
          "{VALUE0}": "'Smith'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "petid",
          "{COLUMN1}": "stuid",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the name of the different car {COLUMN0} who produced a car in {VALUE0} ?",
        "question": "What is the name of the different car makers who produced a car in 1970 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "name dict": {
          "{COLUMN2}": "model",
          "{TABLE1}": "model list",
          "{VALUE13}": "0",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "id",
          "{VALUE12}": "4",
          "{COLUMN4}": "year",
          "{OP0}": "=",
          "{TABLE2}": "car names",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "car makers",
          "{TABLE3}": "cars data",
          "{VALUE5}": "2",
          "{VALUE0}": "'1970'",
          "{VALUE9}": "4",
          "{COLUMN0}": "maker",
          "{VALUE2}": "1",
          "{COLUMN3}": "makeid",
          "{VALUE11}": "4",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which distinct car {COLUMN0} are the produced after {VALUE9} ?",
        "question": "Which distinct car models are the produced after 1980 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{VALUE0}": "1",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE9}": "1980",
          "{VALUE1}": "1",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "model list",
          "{VALUE2}": "2",
          "{COLUMN3}": "year",
          "{OP0}": ">",
          "{VALUE6}": "2",
          "{TABLE2}": "cars data",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what are the different {COLUMN0} for the cards produced after {VALUE9} ?",
        "question": "What are the different models for the cards produced after 1980 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{VALUE0}": "1",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE9}": "1980",
          "{VALUE1}": "1",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "model list",
          "{VALUE2}": "2",
          "{COLUMN3}": "year",
          "{OP0}": ">",
          "{VALUE6}": "2",
          "{TABLE2}": "cars data",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the {COLUMN0} of the car {COLUMN3} amc hornet sportabout ( sw ) ?",
        "question": "What is the accelerate of the car make amc hornet sportabout ( sw ) ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "makeid",
          "{VALUE4}": "1",
          "{VALUE0}": "'amc hornet sportabout  ( sw ) '",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "accelerate",
          "{COLUMN1}": "id",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "make",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how much does the car {COLUMN0} that {COLUMN3} amc hornet sportabout ( sw ) ?",
        "question": "How much does the car accelerate that makes amc hornet sportabout ( sw ) ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "makeid",
          "{VALUE4}": "1",
          "{VALUE0}": "'amc hornet sportabout  ( sw ) '",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "accelerate",
          "{COLUMN1}": "id",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "make",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the average miles per gallon of all the cards with {VALUE0} {COLUMN1} ?",
        "question": "What is the average miles per gallon of all the cards with 4 cylinders ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "name dict": {
          "{COLUMN0}": "mpg",
          "{AGG0}": "AVG",
          "{COLUMN1}": "cylinders",
          "{TABLE0}": "cars data",
          "{OP0}": "=",
          "{VALUE0}": "4"
        }
      },
      {
        "template": "what is the number of the cars with {COLUMN0} more than {VALUE0} ?",
        "question": "What is the number of the cars with horsepower more than 150 ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "name dict": {
          "{COLUMN0}": "horsepower",
          "{OP0}": ">",
          "{VALUE0}": "150",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "what is the number of cars with a {COLUMN0} greater than {VALUE0} ?",
        "question": "What is the number of cars with a horsepower greater than 150 ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "name dict": {
          "{COLUMN0}": "horsepower",
          "{OP0}": ">",
          "{VALUE0}": "150",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "what is the average {COLUMN0} of the cars before {VALUE0} ?",
        "question": "What is the average horsepower of the cars before 1980 ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "name dict": {
          "{COLUMN0}": "horsepower",
          "{AGG0}": "AVG",
          "{COLUMN1}": "year",
          "{TABLE0}": "cars data",
          "{OP0}": "<",
          "{VALUE0}": "1980"
        }
      },
      {
        "template": "what is the average {COLUMN0} for all cards produced before {VALUE0} ?",
        "question": "What is the average horsepower for all cards produced before 1980 ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "name dict": {
          "{COLUMN0}": "horsepower",
          "{AGG0}": "AVG",
          "{COLUMN1}": "year",
          "{TABLE0}": "cars data",
          "{OP0}": "<",
          "{VALUE0}": "1980"
        }
      },
      {
        "template": "how many cars have more than {VALUE0} {COLUMN0} ?",
        "question": "How many cars have more than 4 cylinders ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "name dict": {
          "{COLUMN0}": "cylinders",
          "{OP0}": ">",
          "{VALUE0}": "4",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "what is the number of cars with more than {VALUE0} {COLUMN0} ?",
        "question": "What is the number of cars with more than 4 cylinders ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "name dict": {
          "{COLUMN0}": "cylinders",
          "{OP0}": ">",
          "{VALUE0}": "4",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "how many car models were produced by the {COLUMN1} with full name {VALUE0} ?",
        "question": "How many car models were produced by the maker with full name American Motor Company ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "name dict": {
          "{TABLE1}": "model list",
          "{COLUMN2}": "fullname",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "'American Motor Company'",
          "{VALUE1}": "1",
          "{COLUMN0}": "id",
          "{COLUMN1}": "maker",
          "{TABLE0}": "car makers",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what is the number of car models created by the car {COLUMN1} {VALUE0} ?",
        "question": "What is the number of car models created by the car maker American Motor Company ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "name dict": {
          "{TABLE1}": "model list",
          "{COLUMN2}": "fullname",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "'American Motor Company'",
          "{VALUE1}": "1",
          "{COLUMN0}": "id",
          "{COLUMN1}": "maker",
          "{TABLE0}": "car makers",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "how many cars has over {VALUE0} {COLUMN0} ?",
        "question": "How many cars has over 6 cylinders ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "name dict": {
          "{COLUMN0}": "cylinders",
          "{OP0}": ">",
          "{VALUE0}": "6",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "what is the number of carsw ith over {VALUE0} {COLUMN0} ?",
        "question": "What is the number of carsw ith over 6 cylinders ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "name dict": {
          "{COLUMN0}": "cylinders",
          "{OP0}": ">",
          "{VALUE0}": "6",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "which country does {COLUMN1} `` {VALUE0} '' belong to ?",
        "question": "Which country does Airline `` JetBlue Airways '' belong to ?",
        "concise pattern": "WHERE",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "country",
          "{COLUMN1}": "airline",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"JetBlue Airways\""
        }
      },
      {
        "template": "which {COLUMN0} corresponds to {VALUE0} ?",
        "question": "Which abbreviation corresponds to Jetblue Airways ?",
        "concise pattern": "WHERE",
        "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "abbreviation",
          "{COLUMN1}": "airline",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"JetBlue Airways\""
        }
      },
      {
        "template": "how many {TABLE0} are from {VALUE0} ?",
        "question": "How many airlines are from USA ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "country",
          "{AGG0}": "COUNT",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"USA\""
        }
      },
      {
        "template": "return the number of {TABLE0} in the {VALUE0} .",
        "question": "Return the number of airlines in the USA .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "country",
          "{AGG0}": "COUNT",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"USA\""
        }
      },
      {
        "template": "what are the names of {TABLE0} in {VALUE0} ?",
        "question": "What are the names of airports in Aberdeen ?",
        "concise pattern": "WHERE",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "airportname",
          "{COLUMN1}": "city",
          "{TABLE0}": "airports",
          "{OP0}": "=",
          "{VALUE0}": "\"Aberdeen\""
        }
      },
      {
        "template": "how many {TABLE0} depart from '{VALUE0} ' ?",
        "question": "How many flights depart from 'APG ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "sourceairport",
          "{AGG0}": "COUNT",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"APG\""
        }
      },
      {
        "template": "count the number of {TABLE0} departing from '{VALUE0} ' .",
        "question": "Count the number of flights departing from 'APG ' .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "sourceairport",
          "{AGG0}": "COUNT",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"APG\""
        }
      },
      {
        "template": "how many {TABLE0} have destination {VALUE0} ?",
        "question": "How many flights have destination ATO ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "destairport",
          "{AGG0}": "COUNT",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"ATO\""
        }
      },
      {
        "template": "count the number of {TABLE0} into {VALUE0} .",
        "question": "Count the number of flights into ATO .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "destairport",
          "{AGG0}": "COUNT",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"ATO\""
        }
      },
      {
        "template": "how many {TABLE0} depart from city {VALUE0} ?",
        "question": "How many flights depart from City Aberdeen ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "city",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "sourceairport",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "flights",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "return the number of {TABLE0} departing from {VALUE0} .",
        "question": "Return the number of flights departing from Aberdeen .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "city",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "sourceairport",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "flights",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "how many {TABLE0} arriving in {VALUE0} city ?",
        "question": "How many flights arriving in Aberdeen city ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "city",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "destairport",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "flights",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "return the number of {TABLE0} arriving in {VALUE0} .",
        "question": "Return the number of flights arriving in Aberdeen .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "city",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "destairport",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "flights",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "give the number of {VALUE0} {TABLE0} .",
        "question": "Give the number of Jetblue Airways flights .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "airlines",
          "{VALUE5}": "2",
          "{VALUE0}": "\"JetBlue Airways\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "flights",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are {COLUMN0} that have some flight departing from airport '{VALUE0} ' ?",
        "question": "What are airlines that have some flight departing from airport 'AHD ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{VALUE4}": "1",
          "{VALUE0}": "\"AHD\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "which {COLUMN0} have a flight with source airport {VALUE0} ?",
        "question": "Which airlines have a flight with source airport AHD ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{VALUE4}": "1",
          "{VALUE0}": "\"AHD\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "which {COLUMN0} have a flight with destination airport {VALUE0} ?",
        "question": "Which airlines have a flight with destination airport AHD ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "destairport",
          "{VALUE4}": "1",
          "{VALUE0}": "\"AHD\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are flight numbers of {COLUMN2} `` {VALUE0} '' ?",
        "question": "What are flight numbers of Airline `` United Airlines '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "name dict": {
          "{TABLE1}": "airlines",
          "{COLUMN2}": "airline",
          "{VALUE4}": "2",
          "{VALUE0}": "\"United Airlines\"",
          "{VALUE5}": "1",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "uid",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "which flight numbers correspond to {VALUE0} {TABLE0} ?",
        "question": "Which flight numbers correspond to United Airlines flights ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "name dict": {
          "{TABLE1}": "airlines",
          "{COLUMN2}": "airline",
          "{VALUE4}": "2",
          "{VALUE0}": "\"United Airlines\"",
          "{VALUE5}": "1",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "uid",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are flight numbers of {TABLE0} departing from airport `` {VALUE0} '' ?",
        "question": "What are flight numbers of flights departing from Airport `` APG '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "sourceairport",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"APG\""
        }
      },
      {
        "template": "give the flight numbers of {TABLE0} leaving from {VALUE0} .",
        "question": "Give the flight numbers of flights leaving from APG .",
        "concise pattern": "WHERE",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "sourceairport",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"APG\""
        }
      },
      {
        "template": "what are flight numbers of {TABLE0} arriving at airport `` {VALUE0} '' ?",
        "question": "What are flight numbers of flights arriving at Airport `` APG '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"APG\""
        }
      },
      {
        "template": "give the flight numbers of {TABLE0} landing at {VALUE0} .",
        "question": "Give the flight numbers of flights landing at APG .",
        "concise pattern": "WHERE",
        "query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "flights",
          "{OP0}": "=",
          "{VALUE0}": "\"APG\""
        }
      },
      {
        "template": "what are flight numbers of {TABLE0} departing from city `` {VALUE0} `` ?",
        "question": "What are flight numbers of flights departing from City `` Aberdeen `` ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "airportcode",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "sourceairport",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{COLUMN3}": "city",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "give the flight numbers of {TABLE0} leaving from {VALUE0} .",
        "question": "Give the flight numbers of flights leaving from Aberdeen .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "airportcode",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "sourceairport",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{COLUMN3}": "city",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are flight numbers of {TABLE0} arriving at city `` {VALUE0} '' ?",
        "question": "What are flight numbers of flights arriving at City `` Aberdeen '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "airportcode",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{COLUMN3}": "city",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "give the flight numbers of {TABLE0} arriving in {VALUE0} .",
        "question": "Give the flight numbers of flights arriving in Aberdeen .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "airportcode",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "flightno",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{COLUMN3}": "city",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "return the names and {COLUMN1} ids for {TABLE0} that contain the letter w in their description .",
        "question": "Return the names and template ids for documents that contain the letter w in their description .",
        "concise pattern": "WHERE",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "document_description",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "documents",
          "{COLUMN0}": "document_name",
          "{OP0}": "LIKE",
          "{VALUE0}": "\"%w%\""
        }
      },
      {
        "template": "count the number of {TABLE0} of the type {VALUE0} .",
        "question": "Count the number of templates of the type CV .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "template_type_code",
          "{AGG0}": "COUNT",
          "{TABLE0}": "templates",
          "{OP0}": "=",
          "{VALUE0}": "\"CV\""
        }
      },
      {
        "template": "return the type code of the {COLUMN1} type with the description `` {VALUE0} '' .",
        "question": "Return the type code of the template type with the description `` Book '' .",
        "concise pattern": "WHERE",
        "query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_type_description",
          "{TABLE0}": "reference template types",
          "{OP0}": "=",
          "{VALUE0}": "\"Book\""
        }
      },
      {
        "template": "return the ids corresponding to {TABLE1} with the description '{VALUE0} ' .",
        "question": "Return the ids corresponding to templates with the description 'Presentation ' .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "name dict": {
          "{TABLE1}": "templates",
          "{COLUMN2}": "template_type_description",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Presentation\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "template_id",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "reference template types",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the details for the {COLUMN1} that includes the text '{VALUE0} ' ?",
        "question": "What are the details for the paragraph that includes the text 'Korea ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "other_details",
          "{COLUMN1}": "paragraph_text",
          "{TABLE0}": "paragraphs",
          "{OP0}": "=",
          "{VALUE0}": "'Korea'"
        }
      },
      {
        "template": "how many visitors below {COLUMN0} {VALUE0} are there ?",
        "question": "How many visitors below age 30 are there ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM visitor WHERE age  <  30",
        "name dict": {
          "{COLUMN0}": "age",
          "{OP0}": "<",
          "{VALUE0}": "30",
          "{AGG0}": "COUNT",
          "{TABLE0}": "customer"
        }
      },
      {
        "template": "how many {TABLE0} ended up being '{VALUE0} ' ?",
        "question": "How many ships ended up being 'Captured ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "disposition_of_ship",
          "{AGG0}": "COUNT",
          "{TABLE0}": "ship",
          "{OP0}": "=",
          "{VALUE0}": "'Captured'"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} events which has substring 'east ' ?",
        "question": "What are the notes of the death events which has substring 'East ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT note FROM death WHERE note LIKE '%East%'",
        "name dict": {
          "{VALUE1}": "0",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%East%'",
          "{COLUMN0}": "note",
          "{TABLE0}": "death"
        }
      },
      {
        "template": "how is the {VALUE0} {COLUMN1} described ?",
        "question": "How is the math course described ?",
        "concise pattern": "WHERE",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "course_description",
          "{COLUMN1}": "course_name",
          "{TABLE0}": "courses",
          "{OP0}": "=",
          "{VALUE0}": "'math'"
        }
      },
      {
        "template": "what are the descriptions for all the {VALUE0} {TABLE0} ?",
        "question": "What are the descriptions for all the math courses ?",
        "concise pattern": "WHERE",
        "query": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "course_description",
          "{COLUMN1}": "course_name",
          "{TABLE0}": "courses",
          "{OP0}": "=",
          "{VALUE0}": "'math'"
        }
      },
      {
        "template": "what is the {COLUMN0} code of the address in the city {VALUE0} ?",
        "question": "What is the zip code of the address in the city Port Chelsea ?",
        "concise pattern": "WHERE",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "zip_postcode",
          "{COLUMN1}": "city",
          "{TABLE0}": "addresses",
          "{OP0}": "=",
          "{VALUE0}": "'Port Chelsea'"
        }
      },
      {
        "template": "what is the {COLUMN0} code for {VALUE0} ?",
        "question": "What is the zip code for Port Chelsea ?",
        "concise pattern": "WHERE",
        "query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "zip_postcode",
          "{COLUMN1}": "city",
          "{TABLE0}": "addresses",
          "{OP0}": "=",
          "{VALUE0}": "'Port Chelsea'"
        }
      },
      {
        "template": "describe the {COLUMN1} {VALUE0} .",
        "question": "Describe the section h .",
        "concise pattern": "WHERE",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "section_description",
          "{COLUMN1}": "section_name",
          "{TABLE0}": "sections",
          "{OP0}": "=",
          "{VALUE0}": "'h'"
        }
      },
      {
        "template": "what is the description for the {COLUMN1} named {VALUE0} ?",
        "question": "What is the description for the section named h ?",
        "concise pattern": "WHERE",
        "query": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "section_description",
          "{COLUMN1}": "section_name",
          "{TABLE0}": "sections",
          "{OP0}": "=",
          "{VALUE0}": "'h'"
        }
      },
      {
        "template": "what is the {COLUMN0} of tv channel with serial name `` {VALUE0} '' ?",
        "question": "What is the content of TV Channel with serial name `` Sky Radio '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "content",
          "{COLUMN1}": "series_name",
          "{TABLE0}": "tv channel",
          "{OP0}": "=",
          "{VALUE0}": "\"Sky Radio\""
        }
      },
      {
        "template": "what is the {COLUMN0} option of tv channel with serial name `` {VALUE0} '' ?",
        "question": "What is the Package Option of TV Channel with serial name `` Sky Radio '' ?",
        "concise pattern": "WHERE",
        "query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "package_option",
          "{COLUMN1}": "series_name",
          "{TABLE0}": "tv channel",
          "{OP0}": "=",
          "{VALUE0}": "\"Sky Radio\""
        }
      },
      {
        "template": "how many tv channel using {COLUMN0} {VALUE0} ?",
        "question": "How many TV Channel using language English ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT",
          "{TABLE0}": "tv channel",
          "{OP0}": "=",
          "{VALUE0}": "\"English\""
        }
      },
      {
        "template": "how many tv channels use the {VALUE0} {COLUMN0} ?",
        "question": "How many TV Channels use the English language ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT",
          "{TABLE0}": "tv channel",
          "{OP0}": "=",
          "{VALUE0}": "\"English\""
        }
      },
      {
        "template": "find the {COLUMN0} choice and {COLUMN1} name of the tv channel that has high definition tv .",
        "question": "Find the package choice and series name of the TV channel that has high definition TV .",
        "concise pattern": "WHERE",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "hight_definition_tv",
          "{COLUMN1}": "series_name",
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "package_option",
          "{OP0}": "=",
          "{VALUE0}": "\"yes\""
        }
      },
      {
        "template": "what are the {COLUMN0} options and the name of the {COLUMN1} for the tv channel that supports high definition tv ?",
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV ?",
        "concise pattern": "WHERE",
        "query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "hight_definition_tv",
          "{COLUMN1}": "series_name",
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "package_option",
          "{OP0}": "=",
          "{VALUE0}": "\"yes\""
        }
      },
      {
        "template": "find the {COLUMN0} aspect ratio and nation of the tv channels that do not use {VALUE0} .",
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English .",
        "concise pattern": "WHERE",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "language",
          "{COLUMN1}": "country",
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "pixel_aspect_ratio_par",
          "{OP0}": "!=",
          "{VALUE0}": "'English'"
        }
      },
      {
        "template": "what is the {COLUMN0} aspect ratio and country of origin for all tv channels that do not use {VALUE0} ?",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English ?",
        "concise pattern": "WHERE",
        "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "language",
          "{COLUMN1}": "country",
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "pixel_aspect_ratio_par",
          "{OP0}": "!=",
          "{VALUE0}": "'English'"
        }
      },
      {
        "template": "give average {COLUMN0} of poker players who are taller than {VALUE6} .",
        "question": "Give average earnings of poker players who are taller than 200 .",
        "concise pattern": "WHERE",
        "query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "height",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "earnings",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "200"
        }
      },
      {
        "template": "what are the names of the {TABLE0} whose names are not '{VALUE0} '",
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway '",
        "concise pattern": "WHERE",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
        "name dict": {
          "{VALUE1}": "0",
          "{OP0}": "!=",
          "{VALUE0}": "'Jessie Alloway'",
          "{COLUMN0}": "contestant_name",
          "{TABLE0}": "contestants"
        }
      },
      {
        "template": "what are the {COLUMN0} of all the countries that became independent after {VALUE0} ?",
        "question": "What are the names of all the countries that became independent after 1950 ?",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "name dict": {
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "1950",
          "{COLUMN1}": "indepyear",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "give the {COLUMN0} of the nations that were founded after {VALUE0} .",
        "question": "Give the names of the nations that were founded after 1950 .",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM country WHERE IndepYear  >  1950",
        "name dict": {
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "1950",
          "{COLUMN1}": "indepyear",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "what is the total surface area of the countries in the {VALUE0} {COLUMN1} ?",
        "question": "What is the total surface area of the countries in the Caribbean region ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "surfacearea",
          "{AGG0}": "SUM",
          "{COLUMN1}": "region",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Caribbean\""
        }
      },
      {
        "template": "which {COLUMN0} is {VALUE0} in ?",
        "question": "Which continent is Anguilla in ?",
        "concise pattern": "WHERE",
        "query": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "name",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Anguilla\""
        }
      },
      {
        "template": "what {COLUMN0} is {VALUE0} in ?",
        "question": "What region is Kabul in ?",
        "concise pattern": "WHERE",
        "query": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "name dict": {
          "{TABLE1}": "city",
          "{COLUMN2}": "countrycode",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Kabul\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "region",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{COLUMN3}": "name",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} and life expectancies in {VALUE0} ?",
        "question": "What are the population and life expectancies in Brazil ?",
        "concise pattern": "WHERE",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "name",
          "{COLUMN1}": "lifeexpectancy",
          "{TABLE0}": "country",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"Brazil\""
        }
      },
      {
        "template": "give me {VALUE0}\u2019s {COLUMN0} and life expectancies .",
        "question": "Give me Brazil\u2019s population and life expectancies .",
        "concise pattern": "WHERE",
        "query": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "name",
          "{COLUMN1}": "lifeexpectancy",
          "{TABLE0}": "country",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"Brazil\""
        }
      },
      {
        "template": "what is the average expected life expectancy for countries in the {COLUMN1} of {VALUE0} ?",
        "question": "What is the average expected life expectancy for countries in the region of Central Africa ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "lifeexpectancy",
          "{AGG0}": "AVG",
          "{COLUMN1}": "region",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Central Africa\""
        }
      },
      {
        "template": "how many people live in {VALUE0} , and what is the largest {COLUMN1} among them ?",
        "question": "How many people live in Asia , and what is the largest GNP among them ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "MAX",
          "{COLUMN2}": "continent",
          "{AGG0}": "SUM",
          "{COLUMN1}": "gnp",
          "{TABLE0}": "country",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "how many people live in {VALUE0} {COLUMN1} ?",
        "question": "How many people live in Gelderland district ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "population",
          "{AGG0}": "SUM",
          "{COLUMN1}": "district",
          "{TABLE0}": "city",
          "{OP0}": "=",
          "{VALUE0}": "\"Gelderland\""
        }
      },
      {
        "template": "what is the total number of {COLUMN0} used in {VALUE0} ?",
        "question": "What is the total number of languages used in Aruba ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Aruba\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "name",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many {COLUMN0} are spoken in {VALUE0} ?",
        "question": "How many languages are spoken in Aruba ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "\"Aruba\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "name",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the number of distinct {COLUMN0} where {VALUE0} is spoken ?",
        "question": "What is the number of distinct continents where Chinese is spoken ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Chinese\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{COLUMN3}": "language",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "how many {COLUMN0} speak {VALUE0} ?",
        "question": "How many continents speak Chinese ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Chinese\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{COLUMN3}": "language",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what are the country codes of countries where people use {COLUMN1} other than {VALUE0} ?",
        "question": "What are the country codes of countries where people use languages other than English ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "countrycode",
          "{COLUMN1}": "language",
          "{TABLE0}": "countrylanguage",
          "{OP0}": "!=",
          "{VALUE0}": "\"English\""
        }
      },
      {
        "template": "what {COLUMN0} is {VALUE0} in ?",
        "question": "What grade is Kyle in ?",
        "concise pattern": "WHERE",
        "query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "grade",
          "{COLUMN1}": "name",
          "{TABLE0}": "high schooler",
          "{OP0}": "=",
          "{VALUE0}": "\"Kyle\""
        }
      },
      {
        "template": "what is {VALUE0} 's {COLUMN0} ?",
        "question": "What is Kyle 's id ?",
        "concise pattern": "WHERE",
        "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "id",
          "{COLUMN1}": "name",
          "{TABLE0}": "high schooler",
          "{OP0}": "=",
          "{VALUE0}": "\"Kyle\""
        }
      },
      {
        "template": "count the number of {TABLE0} {VALUE0} has .",
        "question": "Count the number of friends Kyle has .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Kyle\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "student_id",
          "{COLUMN1}": "id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "how many {TABLE0} does {VALUE0} have ?",
        "question": "How many likes does Kyle have ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Kyle\"",
          "{VALUE1}": "1",
          "{COLUMN0}": "student_id",
          "{COLUMN1}": "id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} who are not french citizens ?",
        "question": "What are the names of the singers who are not French citizens ?",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "name",
          "{COLUMN1}": "citizenship",
          "{TABLE0}": "singer",
          "{OP0}": "!=",
          "{VALUE0}": "\"France\""
        }
      },
      {
        "template": "how many car makers are there in {VALUE0} ?",
        "question": "How many car makers are there in france ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "name dict": {
          "{TABLE1}": "countries",
          "{COLUMN2}": "countryname",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "'france'",
          "{VALUE1}": "1",
          "{COLUMN0}": "country",
          "{COLUMN1}": "countryid",
          "{TABLE0}": "car makers",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "what is the number of makers of care in {VALUE0} ?",
        "question": "What is the number of makers of care in France ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "name dict": {
          "{TABLE1}": "countries",
          "{COLUMN2}": "countryname",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "'france'",
          "{VALUE1}": "1",
          "{COLUMN0}": "country",
          "{COLUMN1}": "countryid",
          "{TABLE0}": "car makers",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0"
        }
      },
      {
        "template": "how many car models are produced in the {VALUE0} ?",
        "question": "How many car models are produced in the usa ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "country",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{VALUE0}": "'usa'",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE9}": "0",
          "{VALUE1}": "1",
          "{OP0}": "=",
          "{COLUMN0}": "maker",
          "{COLUMN1}": "id",
          "{TABLE0}": "model list",
          "{VALUE2}": "2",
          "{COLUMN3}": "countryid",
          "{COLUMN4}": "countryname",
          "{VALUE6}": "2",
          "{TABLE2}": "countries",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the average {COLUMN0} for all volvos ?",
        "question": "What is the average edispl for all volvos ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{AGG0}": "AVG",
          "{VALUE4}": "1",
          "{VALUE0}": "'volvo'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "edispl",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "1",
          "{COLUMN3}": "model",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many cars were produced in {VALUE0} ?",
        "question": "how many cars were produced in 1980 ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "name dict": {
          "{COLUMN0}": "year",
          "{OP0}": "=",
          "{VALUE0}": "1980",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "in {VALUE0} , how many cars were made ?",
        "question": "In 1980 , how many cars were made ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "name dict": {
          "{COLUMN0}": "year",
          "{OP0}": "=",
          "{VALUE0}": "1980",
          "{AGG0}": "COUNT",
          "{TABLE0}": "cars data"
        }
      },
      {
        "template": "what country is {VALUE0} affiliated with ?",
        "question": "What country is Jetblue Airways affiliated with ?",
        "concise pattern": "WHERE",
        "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "country",
          "{COLUMN1}": "airline",
          "{TABLE0}": "airlines",
          "{OP0}": "=",
          "{VALUE0}": "\"JetBlue Airways\""
        }
      },
      {
        "template": "list the airport code and name in the city of {VALUE0} .",
        "question": "List the airport code and name in the city of Anthony .",
        "concise pattern": "WHERE",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "city",
          "{COLUMN1}": "airportname",
          "{TABLE0}": "airports",
          "{COLUMN0}": "airportcode",
          "{OP0}": "=",
          "{VALUE0}": "\"Anthony\""
        }
      },
      {
        "template": "give the airport code and airport name corresonding to the city {VALUE0} .",
        "question": "Give the airport code and airport name corresonding to the city Anthony .",
        "concise pattern": "WHERE",
        "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "city",
          "{COLUMN1}": "airportname",
          "{TABLE0}": "airports",
          "{COLUMN0}": "airportcode",
          "{OP0}": "=",
          "{VALUE0}": "\"Anthony\""
        }
      },
      {
        "template": "which city and country is the {VALUE0} airport at ?",
        "question": "Which city and country is the Alton airport at ?",
        "concise pattern": "WHERE",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "airportname",
          "{COLUMN1}": "country",
          "{TABLE0}": "airports",
          "{COLUMN0}": "city",
          "{OP0}": "=",
          "{VALUE0}": "\"Alton\""
        }
      },
      {
        "template": "give the city and country for the {VALUE0} airport .",
        "question": "Give the city and country for the Alton airport .",
        "concise pattern": "WHERE",
        "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "airportname",
          "{COLUMN1}": "country",
          "{TABLE0}": "airports",
          "{COLUMN0}": "city",
          "{OP0}": "=",
          "{VALUE0}": "\"Alton\""
        }
      },
      {
        "template": "what is the airport name for airport '{VALUE0} ' ?",
        "question": "What is the airport name for airport 'AKO ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "airportname",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "airports",
          "{OP0}": "=",
          "{VALUE0}": "\"AKO\""
        }
      },
      {
        "template": "return the name of the airport with code '{VALUE0} ' .",
        "question": "Return the name of the airport with code 'AKO ' .",
        "concise pattern": "WHERE",
        "query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "airportname",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "airports",
          "{OP0}": "=",
          "{VALUE0}": "\"AKO\""
        }
      },
      {
        "template": "what are airport names at city '{VALUE0} ' ?",
        "question": "What are airport names at City 'Aberdeen ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "airportname",
          "{COLUMN1}": "city",
          "{TABLE0}": "airports",
          "{OP0}": "=",
          "{VALUE0}": "\"Aberdeen\""
        }
      },
      {
        "template": "how many degrees does the engineering {COLUMN1} offer ?",
        "question": "How many degrees does the engineering department offer ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "degree programs",
          "{VALUE5}": "1",
          "{VALUE0}": "'engineer'",
          "{VALUE1}": "1",
          "{COLUMN0}": "department_id",
          "{COLUMN1}": "department_name",
          "{TABLE0}": "departments",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "how many degrees does the engineering {COLUMN1} have ?",
        "question": "How many degrees does the engineering department have ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "degree programs",
          "{VALUE5}": "1",
          "{VALUE0}": "'engineer'",
          "{VALUE1}": "1",
          "{COLUMN0}": "department_id",
          "{COLUMN1}": "department_name",
          "{TABLE0}": "departments",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE6}": "0",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the description of the {COLUMN1} whose name has the substring the computer ?",
        "question": "What is the description of the department whose name has the substring the computer ?",
        "concise pattern": "WHERE",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "department_description",
          "{COLUMN1}": "department_name",
          "{TABLE0}": "departments",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%computer%'"
        }
      },
      {
        "template": "what is the {COLUMN1} description for the one whose name has the word computer ?",
        "question": "What is the department description for the one whose name has the word computer ?",
        "concise pattern": "WHERE",
        "query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "department_description",
          "{COLUMN1}": "department_name",
          "{TABLE0}": "departments",
          "{OP0}": "LIKE",
          "{VALUE0}": "'%computer%'"
        }
      },
      {
        "template": "return the names the {TABLE0} whose names contain the substring 'al ' .",
        "question": "Return the names the contestants whose names contain the substring 'Al ' .",
        "concise pattern": "WHERE",
        "query": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"",
        "name dict": {
          "{VALUE1}": "0",
          "{OP0}": "LIKE",
          "{VALUE0}": "\"%Al%\"",
          "{COLUMN0}": "contestant_name",
          "{TABLE0}": "contestants"
        }
      },
      {
        "template": "how many countries have a {VALUE0} as their form of government ?",
        "question": "How many countries have a republic as their form of government ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "governmentform",
          "{AGG0}": "COUNT",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Republic\""
        }
      },
      {
        "template": "how long is the people\u2019s average life expectancy in {VALUE0} ?",
        "question": "How long is the people\u2019s average life expectancy in Central Africa ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "lifeexpectancy",
          "{AGG0}": "AVG",
          "{COLUMN1}": "region",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Central Africa\""
        }
      },
      {
        "template": "how many type of governments are in {VALUE0} ?",
        "question": "How many type of governments are in Africa ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "governmentform",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Africa\""
        }
      },
      {
        "template": "how many different forms of governments are there in {VALUE0} ?",
        "question": "How many different forms of governments are there in Africa ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "governmentform",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Africa\""
        }
      },
      {
        "template": "what are the country codes for countries that do not speak {VALUE0} ?",
        "question": "What are the country codes for countries that do not speak English ?",
        "concise pattern": "WHERE",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "countrycode",
          "{COLUMN1}": "language",
          "{TABLE0}": "countrylanguage",
          "{OP0}": "=",
          "{VALUE0}": "\"English\""
        }
      },
      {
        "template": "return the country codes for countries that do not speak {VALUE0} .",
        "question": "Return the country codes for countries that do not speak English .",
        "concise pattern": "WHERE",
        "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "countrycode",
          "{COLUMN1}": "language",
          "{TABLE0}": "countrylanguage",
          "{OP0}": "=",
          "{VALUE0}": "\"English\""
        }
      },
      {
        "template": "give the country codes for countries in which people speak langauges that are not {VALUE0} .",
        "question": "Give the country codes for countries in which people speak langauges that are not English .",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "countrycode",
          "{COLUMN1}": "language",
          "{TABLE0}": "countrylanguage",
          "{OP0}": "!=",
          "{VALUE0}": "\"English\""
        }
      },
      {
        "template": "how many countries are in {VALUE0} ?",
        "question": "how many countries are in Asia ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "continent",
          "{AGG0}": "COUNT",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "count the number of countries in {VALUE0} .",
        "question": "Count the number of countries in Asia .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "continent",
          "{AGG0}": "COUNT",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "what is the count of the car models produced in the united states ?",
        "question": "What is the count of the car models produced in the United States ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "country",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{VALUE0}": "'usa'",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE9}": "0",
          "{VALUE1}": "1",
          "{OP0}": "=",
          "{COLUMN0}": "maker",
          "{COLUMN1}": "id",
          "{TABLE0}": "model list",
          "{VALUE2}": "2",
          "{COLUMN3}": "countryid",
          "{COLUMN4}": "countryname",
          "{VALUE6}": "2",
          "{TABLE2}": "countries",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "how many countries have governments that are republics ?",
        "question": "How many countries have governments that are republics ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "governmentform",
          "{AGG0}": "COUNT",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Republic\""
        }
      },
      {
        "template": "how much surface area do the countires in the carribean cover together ?",
        "question": "How much surface area do the countires in the Carribean cover together ?",
        "concise pattern": "WHERE",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN0}": "surfacearea",
          "{AGG0}": "SUM",
          "{COLUMN1}": "region",
          "{TABLE0}": "country",
          "{OP0}": "=",
          "{VALUE0}": "\"Caribbean\""
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM}",
    [
      {
        "template": "what are all the {TABLE0} including {COLUMN1} {VALUE0} and {COLUMN1} {VALUE1} ?",
        "question": "what are all the addresses including line 1 and line 2 ?",
        "concise pattern": "",
        "query": "SELECT line_1 ,  line_2 FROM addresses",
        "name dict": {
          "{VALUE1}": "2",
          "{VALUE0}": "1",
          "{COLUMN0}": "line_1",
          "{COLUMN1}": "line_2",
          "{TABLE0}": "addresses"
        }
      },
      {
        "template": "which {COLUMN0} {COLUMN1} are used for {TABLE0} or {TABLE1} but are not used as dog {COLUMN1} ?",
        "question": "Which first names are used for professionals or owners but are not used as dog names ?",
        "concise pattern": "",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "name dict": {
          "{TABLE0}": "professionals",
          "{COLUMN0}": "first_name",
          "{TABLE2}": "dogs",
          "{COLUMN1}": "name",
          "{TABLE1}": "owners"
        }
      },
      {
        "template": "find the {COLUMN0} {COLUMN1} that are used for {TABLE0} or {TABLE1} but are not used as dog {COLUMN1} .",
        "question": "Find the first names that are used for professionals or owners but are not used as dog names .",
        "concise pattern": "",
        "query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "name dict": {
          "{TABLE0}": "professionals",
          "{COLUMN0}": "first_name",
          "{TABLE2}": "dogs",
          "{COLUMN1}": "name",
          "{TABLE1}": "owners"
        }
      },
      {
        "template": "list pairs of the {COLUMN2} 's {COLUMN0} {COLUMN1} and the {TABLE1} 's {COLUMN1} .",
        "question": "List pairs of the owner 's first name and the dogs 's name .",
        "concise pattern": "",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "dogs",
          "{COLUMN2}": "owner_id",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "name",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "owners"
        }
      },
      {
        "template": "what are each {COLUMN2} 's {COLUMN0} {COLUMN1} and their {TABLE1} 's {COLUMN1} ?",
        "question": "What are each owner 's first name and their dogs 's name ?",
        "concise pattern": "",
        "query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "dogs",
          "{COLUMN2}": "owner_id",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "name",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "owners"
        }
      },
      {
        "template": "list {COLUMN1} ids , {COLUMN1} names , and {COLUMN1} descriptions for all {TABLE0} .",
        "question": "List document IDs , document names , and document descriptions for all documents .",
        "concise pattern": "",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "name dict": {
          "{COLUMN0}": "document_id",
          "{COLUMN2}": "document_description",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "documents"
        }
      },
      {
        "template": "show {COLUMN0} ids , {COLUMN1} numbers , and {COLUMN0} type codes for all {TABLE0} .",
        "question": "Show template ids , version numbers , and template type codes for all templates .",
        "concise pattern": "",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "name dict": {
          "{COLUMN0}": "template_id",
          "{COLUMN2}": "template_type_code",
          "{COLUMN1}": "version_number",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "list the {COLUMN0} ids , {COLUMN1} numbers and {COLUMN2} of all {TABLE0} .",
        "question": "List the vote ids , phone numbers and states of all votes .",
        "concise pattern": "",
        "query": "SELECT vote_id ,  phone_number ,  state FROM votes",
        "name dict": {
          "{COLUMN0}": "vote_id",
          "{COLUMN2}": "state",
          "{COLUMN1}": "phone_number",
          "{TABLE0}": "votes"
        }
      },
      {
        "template": "which {COLUMN0} did not operate any treatment on dogs ? list the {COLUMN0} 's id , {COLUMN1} and {COLUMN2} .",
        "question": "Which professional did not operate any treatment on dogs ? List the professional 's id , role and email .",
        "concise pattern": "",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "email_address",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "role_code",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "list each {COLUMN3} 's {COLUMN0} name , {COLUMN1} name , and the {COLUMN2} of his for her dog .",
        "question": "List each owner 's first name , last name , and the size of his for her dog .",
        "concise pattern": "",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "size_code",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "owners",
          "{VALUE2}": "2",
          "{COLUMN3}": "owner_id",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "what are each {COLUMN3} 's {COLUMN0} name , {COLUMN1} name , and the {COLUMN2} of their dog ?",
        "question": "What are each owner 's first name , last name , and the size of their dog ?",
        "concise pattern": "",
        "query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "size_code",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "owners",
          "{VALUE2}": "2",
          "{COLUMN3}": "owner_id",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "list the {COLUMN0} , {COLUMN1} phone and {COLUMN2} phone of all the {TABLE0} .",
        "question": "List the email , cell phone and home phone of all the professionals .",
        "concise pattern": "",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "name dict": {
          "{COLUMN0}": "email_address",
          "{COLUMN2}": "home_phone",
          "{COLUMN1}": "cell_number",
          "{TABLE0}": "professionals"
        }
      },
      {
        "template": "show {COLUMN0} of {TABLE1} and {COLUMN1} of {TABLE0} .",
        "question": "Show titles of songs and names of singers .",
        "concise pattern": "",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "song",
          "{COLUMN2}": "singer_id",
          "{COLUMN0}": "title",
          "{COLUMN1}": "name",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "what are the {TABLE1} {COLUMN0} and {COLUMN2} {COLUMN1} ?",
        "question": "What are the song titles and singer names ?",
        "concise pattern": "",
        "query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "song",
          "{COLUMN2}": "singer_id",
          "{COLUMN0}": "title",
          "{COLUMN1}": "name",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} of {TABLE0} ?",
        "question": "What are the age and hometown of teachers ?",
        "concise pattern": "",
        "query": "SELECT Age ,  Hometown FROM teacher",
        "name dict": {
          "{TABLE0}": "teacher",
          "{COLUMN0}": "age",
          "{COLUMN1}": "hometown"
        }
      },
      {
        "template": "what is the {COLUMN0} and {COLUMN1} of every {TABLE0} ?",
        "question": "What is the age and hometown of every teacher ?",
        "concise pattern": "",
        "query": "SELECT Age ,  Hometown FROM teacher",
        "name dict": {
          "{TABLE0}": "teacher",
          "{COLUMN0}": "age",
          "{COLUMN1}": "hometown"
        }
      },
      {
        "template": "show {COLUMN0} of {TABLE1} and the {COLUMN1} they are arranged to teach .",
        "question": "Show names of teachers and the courses they are arranged to teach .",
        "concise pattern": "",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "name dict": {
          "{TABLE1}": "teacher",
          "{COLUMN2}": "course_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "3",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "name",
          "{COLUMN1}": "course",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "1",
          "{COLUMN3}": "teacher_id",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of each {COLUMN3} and what {COLUMN1} they teach ?",
        "question": "What is the name of each teacher and what course they teach ?",
        "concise pattern": "",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "name dict": {
          "{TABLE1}": "teacher",
          "{COLUMN2}": "course_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "3",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "name",
          "{COLUMN1}": "course",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "1",
          "{COLUMN3}": "teacher_id",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "list the {COLUMN0} , {COLUMN1} and result of each {TABLE0} .",
        "question": "List the name , date and result of each battle .",
        "concise pattern": "",
        "query": "SELECT name ,  date FROM battle",
        "name dict": {
          "{TABLE0}": "battle",
          "{COLUMN0}": "name",
          "{COLUMN1}": "date"
        }
      },
      {
        "template": "what are the distinct {COLUMN0} and {COLUMN1} time of all {TABLE0} ?",
        "question": "What are the distinct states and create time of all votes ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT state ,  created FROM votes",
        "name dict": {
          "{TABLE0}": "votes",
          "{COLUMN0}": "state",
          "{COLUMN1}": "created"
        }
      },
      {
        "template": "show the {COLUMN0} of {TABLE0} and the {COLUMN1} they have conducted .",
        "question": "Show the names of conductors and the orchestras they have conducted .",
        "concise pattern": "",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "name dict": {
          "{VALUE1}": "2",
          "{COLUMN2}": "conductor_id",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "conductor"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} as well as the corresonding {COLUMN1} that they have conducted ?",
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted ?",
        "concise pattern": "",
        "query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "name dict": {
          "{VALUE1}": "2",
          "{COLUMN2}": "conductor_id",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "conductor"
        }
      },
      {
        "template": "show {COLUMN0} of all students who have some {TABLE0} and also are {COLUMN3} by someone else .",
        "question": "Show name of all students who have some friends and also are liked by someone else .",
        "concise pattern": "",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{COLUMN3}": "liked_id",
          "{VALUE6}": "1",
          "{TABLE2}": "likes",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of high schoolers who both have {TABLE0} and are {COLUMN3} ?",
        "question": "What are the names of high schoolers who both have friends and are liked ?",
        "concise pattern": "",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{COLUMN3}": "liked_id",
          "{VALUE6}": "1",
          "{TABLE2}": "likes",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN0} have both {TABLE0} and {TABLE1} living there ?",
        "question": "Which states have both owners and professionals living there ?",
        "concise pattern": "",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "name dict": {
          "{TABLE0}": "owners",
          "{COLUMN0}": "state",
          "{TABLE1}": "professionals"
        }
      },
      {
        "template": "find the {COLUMN0} where both {TABLE0} and {TABLE1} live .",
        "question": "Find the states where both owners and professionals live .",
        "concise pattern": "",
        "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "name dict": {
          "{TABLE0}": "owners",
          "{COLUMN0}": "state",
          "{TABLE1}": "professionals"
        }
      },
      {
        "template": "give me the id , {COLUMN1} and {COLUMN2} of the {TABLE0} who did not perform any treatment on dogs .",
        "question": "Give me the id , role and email of the professionals who did not perform any treatment on dogs .",
        "concise pattern": "",
        "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "email_address",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "role_code",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "list the {COLUMN0} of each treatment , together with the {COLUMN1} name of the {COLUMN2} who operated it .",
        "question": "List the date of each treatment , together with the first name of the professional who operated it .",
        "concise pattern": "",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "professionals",
          "{COLUMN2}": "professional_id",
          "{COLUMN0}": "date_of_treatment",
          "{COLUMN1}": "first_name",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "treatments"
        }
      },
      {
        "template": "what are the {COLUMN0} and the operating {COLUMN2} 's {COLUMN1} name of each treatment ?",
        "question": "What are the date and the operating professional 's first name of each treatment ?",
        "concise pattern": "",
        "query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "professionals",
          "{COLUMN2}": "professional_id",
          "{COLUMN0}": "date_of_treatment",
          "{COLUMN1}": "first_name",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "treatments"
        }
      },
      {
        "template": "list the {COLUMN0} of each {COLUMN1} and the corresponding {COLUMN1} type description .",
        "question": "List the cost of each treatment and the corresponding treatment type description .",
        "concise pattern": "",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "treatment types",
          "{COLUMN2}": "treatment_type_code",
          "{COLUMN0}": "cost_of_treatment",
          "{COLUMN1}": "treatment_type_description",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "treatments"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} type description of each {COLUMN1} ?",
        "question": "What are the cost and treatment type description of each treatment ?",
        "concise pattern": "",
        "query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "treatment types",
          "{COLUMN2}": "treatment_type_code",
          "{COLUMN0}": "cost_of_treatment",
          "{COLUMN1}": "treatment_type_description",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "treatments"
        }
      },
      {
        "template": "what are the arriving {COLUMN1} and the departing {COLUMN1} of the {TABLE0} who have gone through a treatment ?",
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "treatments",
          "{COLUMN2}": "dog_id",
          "{COLUMN0}": "date_arrived",
          "{COLUMN1}": "date_departed",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "dogs"
        }
      },
      {
        "template": "find the arriving {COLUMN1} and the departing {COLUMN1} of the {TABLE0} that received a treatment .",
        "question": "Find the arriving date and the departing date of the dogs that received a treatment .",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "treatments",
          "{COLUMN2}": "dog_id",
          "{COLUMN0}": "date_arrived",
          "{COLUMN1}": "date_departed",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "dogs"
        }
      },
      {
        "template": "what are the arriving {COLUMN1} and the departing {COLUMN1} of all the {TABLE0} ?",
        "question": "What are the arriving date and the departing date of all the dogs ?",
        "concise pattern": "",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "date_arrived",
          "{COLUMN1}": "date_departed"
        }
      },
      {
        "template": "list the arrival {COLUMN1} and the departure {COLUMN1} for all the {TABLE0} .",
        "question": "List the arrival date and the departure date for all the dogs .",
        "concise pattern": "",
        "query": "SELECT date_arrived ,  date_departed FROM Dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "date_arrived",
          "{COLUMN1}": "date_departed"
        }
      },
      {
        "template": "what are the {COLUMN0} , {COLUMN1} phone and {COLUMN2} phone of each professional ?",
        "question": "What are the email , cell phone and home phone of each professional ?",
        "concise pattern": "",
        "query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "name dict": {
          "{COLUMN0}": "email_address",
          "{COLUMN2}": "home_phone",
          "{COLUMN1}": "cell_number",
          "{TABLE0}": "professionals"
        }
      },
      {
        "template": "find the distinct {COLUMN0} type and {COLUMN1} type combinations for {TABLE0} .",
        "question": "Find the distinct breed type and size type combinations for dogs .",
        "concise pattern": "",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "breed_code",
          "{COLUMN1}": "size_code"
        }
      },
      {
        "template": "list the {COLUMN0} name of all the {TABLE0} along with the description of the {COLUMN3} they have done .",
        "question": "List the first name of all the professionals along with the description of the treatment they have done .",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "professional_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "3",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "treatment_type_description",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{COLUMN3}": "treatment_type_code",
          "{VALUE6}": "3",
          "{TABLE2}": "treatment types",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are each {COLUMN2} 's {COLUMN0} name and description of the {COLUMN3} they have performed ?",
        "question": "What are each professional 's first name and description of the treatment they have performed ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "professional_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "3",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "treatment_type_description",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{COLUMN3}": "treatment_type_code",
          "{VALUE6}": "3",
          "{TABLE2}": "treatment types",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} year and {COLUMN1} of {TABLE0} ?",
        "question": "What are the birth year and citizenship of singers ?",
        "concise pattern": "",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "birth_year",
          "{COLUMN1}": "citizenship"
        }
      },
      {
        "template": "what are the {COLUMN0} years and {COLUMN1} of the {TABLE0} ?",
        "question": "What are the birth years and citizenships of the singers ?",
        "concise pattern": "",
        "query": "SELECT Birth_Year ,  Citizenship FROM singer",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "birth_year",
          "{COLUMN1}": "citizenship"
        }
      },
      {
        "template": "what is the average and the maximum {COLUMN0} of all {TABLE0} ?",
        "question": "What is the average and the maximum capacity of all stadiums ?",
        "concise pattern": "",
        "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium",
        "name dict": {
          "{TABLE0}": "stadium",
          "{AGG1}": "MAX",
          "{COLUMN0}": "capacity",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "find the first name and {COLUMN1} of {TABLE0} who have a pet .",
        "question": "Find the first name and age of students who have a pet .",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "has pet",
          "{COLUMN2}": "stuid",
          "{COLUMN0}": "fname",
          "{COLUMN1}": "age",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "student"
        }
      },
      {
        "template": "what are the different first names and {COLUMN1} of the {TABLE0} who do have pets ?",
        "question": "What are the different first names and ages of the students who do have pets ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "has pet",
          "{COLUMN2}": "stuid",
          "{COLUMN0}": "fname",
          "{COLUMN1}": "age",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{TABLE0}": "student"
        }
      },
      {
        "template": "what are all the {COLUMN0} and {COLUMN1} ?",
        "question": "What are all the makers and models ?",
        "concise pattern": "",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "name dict": {
          "{TABLE0}": "model list",
          "{COLUMN0}": "maker",
          "{COLUMN1}": "model"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} ?",
        "question": "What are the makers and models ?",
        "concise pattern": "",
        "query": "SELECT Maker ,  Model FROM MODEL_LIST;",
        "name dict": {
          "{TABLE0}": "model list",
          "{COLUMN0}": "maker",
          "{COLUMN1}": "model"
        }
      },
      {
        "template": "what are the minimum and maximum {COLUMN0} of products across all the {TABLE0} ?",
        "question": "What are the minimum and maximum number of products across all the shops ?",
        "concise pattern": "",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "name dict": {
          "{TABLE0}": "shop",
          "{AGG1}": "MAX",
          "{COLUMN0}": "number_products",
          "{AGG0}": "MIN"
        }
      },
      {
        "template": "what is total {COLUMN0} given in all {TABLE0} ?",
        "question": "What is total bonus given in all evaluations ?",
        "concise pattern": "",
        "query": "SELECT sum(bonus) FROM evaluation",
        "name dict": {
          "{TABLE0}": "evaluation",
          "{COLUMN0}": "bonus",
          "{AGG0}": "SUM"
        }
      },
      {
        "template": "find the total amount of {COLUMN0} given in all the {TABLE0} .",
        "question": "Find the total amount of bonus given in all the evaluations .",
        "concise pattern": "",
        "query": "SELECT sum(bonus) FROM evaluation",
        "name dict": {
          "{TABLE0}": "evaluation",
          "{COLUMN0}": "bonus",
          "{AGG0}": "SUM"
        }
      },
      {
        "template": "what are the ids for {TABLE0} that are not used in any {TABLE1} ?",
        "question": "What are the ids for templates that are not used in any documents ?",
        "concise pattern": "",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "template_id",
          "{TABLE1}": "documents"
        }
      },
      {
        "template": "what are the ids , {COLUMN1} numbers , and type codes for each {COLUMN0} ?",
        "question": "What are the ids , version numbers , and type codes for each template ?",
        "concise pattern": "",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "name dict": {
          "{COLUMN0}": "template_id",
          "{COLUMN2}": "template_type_code",
          "{COLUMN1}": "version_number",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "show all distinct {COLUMN0} type codes for all {TABLE0} .",
        "question": "Show all distinct template type codes for all templates .",
        "concise pattern": "",
        "query": "SELECT DISTINCT template_type_code FROM Templates",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "template_type_code"
        }
      },
      {
        "template": "what the smallest {COLUMN0} number and its {COLUMN1} type code ?",
        "question": "What the smallest version number and its template type code ?",
        "concise pattern": "",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "version_number",
          "{AGG0}": "MIN",
          "{COLUMN1}": "template_type_code"
        }
      },
      {
        "template": "return the lowest {COLUMN0} number , along with its corresponding {COLUMN1} type code .",
        "question": "Return the lowest version number , along with its corresponding template type code .",
        "concise pattern": "",
        "query": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "version_number",
          "{AGG0}": "MIN",
          "{COLUMN1}": "template_type_code"
        }
      },
      {
        "template": "what are the distinct {COLUMN1} type descriptions for the {TABLE1} ever used by any document ?",
        "question": "What are the distinct template type descriptions for the templates ever used by any document ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "name dict": {
          "{TABLE1}": "templates",
          "{COLUMN2}": "template_id",
          "{VALUE4}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "template_type_description",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "reference template types",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{TABLE2}": "documents",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "find the number of distinct {COLUMN0} codes of all {TABLE0} .",
        "question": "find the number of distinct country codes of all players .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT country_code) FROM players",
        "name dict": {
          "{TABLE0}": "players",
          "{COLUMN0}": "country_code",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different {COLUMN0} are there for the {TABLE0} ?",
        "question": "How many different results are there for the battles ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT RESULT) FROM battle",
        "name dict": {
          "{TABLE0}": "battle",
          "{COLUMN0}": "result",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the first and second {COLUMN1} for all {TABLE0} ?",
        "question": "What is the first and second line for all addresses ?",
        "concise pattern": "",
        "query": "SELECT line_1 ,  line_2 FROM addresses",
        "name dict": {
          "{VALUE1}": "2",
          "{VALUE0}": "1",
          "{COLUMN0}": "line_1",
          "{COLUMN1}": "line_2",
          "{TABLE0}": "addresses"
        }
      },
      {
        "template": "what are all the {COLUMN1} names of the {TABLE0} which ever have students enrolled in ?",
        "question": "What are all the course names of the courses which ever have students enrolled in ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "student enrolment courses",
          "{COLUMN0}": "course_name",
          "{COLUMN1}": "course_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{TABLE0}": "courses"
        }
      },
      {
        "template": "list the number of different {COLUMN0} names and {COLUMN1} in the tv channel table .",
        "question": "List the number of different series names and contents in the TV Channel table .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "name dict": {
          "{TABLE0}": "tv channel",
          "{AGG1}": "COUNT",
          "{COLUMN0}": "series_name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "content"
        }
      },
      {
        "template": "how many different {COLUMN0} and {COLUMN1} are listed in the tv channel table ?",
        "question": "How many different series and contents are listed in the TV Channel table ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "name dict": {
          "{TABLE0}": "tv channel",
          "{AGG1}": "COUNT",
          "{COLUMN0}": "series_name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "content"
        }
      },
      {
        "template": "list the {COLUMN0} tables made and the {COLUMN1} finishes of poker players .",
        "question": "List the final tables made and the best finishes of poker players .",
        "concise pattern": "",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "name dict": {
          "{TABLE0}": "poker player",
          "{COLUMN0}": "final_table_made",
          "{COLUMN1}": "best_finish"
        }
      },
      {
        "template": "what are the {COLUMN0} tables made and {COLUMN1} finishes for all poker players ?",
        "question": "What are the final tables made and best finishes for all poker players ?",
        "concise pattern": "",
        "query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "name dict": {
          "{TABLE0}": "poker player",
          "{COLUMN0}": "final_table_made",
          "{COLUMN1}": "best_finish"
        }
      },
      {
        "template": "what is the average {COLUMN0} of {TABLE0} ?",
        "question": "What is the average attendance of shows ?",
        "concise pattern": "",
        "query": "SELECT avg(Attendance) FROM SHOW",
        "name dict": {
          "{TABLE0}": "show",
          "{COLUMN0}": "attendance",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "return the average {COLUMN0} across all {TABLE0} .",
        "question": "Return the average attendance across all shows .",
        "concise pattern": "",
        "query": "SELECT avg(Attendance) FROM SHOW",
        "name dict": {
          "{TABLE0}": "show",
          "{COLUMN0}": "attendance",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "how many different {COLUMN0} do {TABLE0} have ?",
        "question": "How many different nationalities do conductors have ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor",
        "name dict": {
          "{TABLE0}": "conductor",
          "{COLUMN0}": "nationality",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of different {COLUMN0} of {TABLE0} .",
        "question": "Count the number of different nationalities of conductors .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT Nationality) FROM conductor",
        "name dict": {
          "{TABLE0}": "conductor",
          "{COLUMN0}": "nationality",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show the {COLUMN0} and {COLUMN1} of each high schooler .",
        "question": "Show the names and grades of each high schooler .",
        "concise pattern": "",
        "query": "SELECT name ,  grade FROM Highschooler",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "name",
          "{COLUMN1}": "grade"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} for each high schooler ?",
        "question": "What are the names and grades for each high schooler ?",
        "concise pattern": "",
        "query": "SELECT name ,  grade FROM Highschooler",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "name",
          "{COLUMN1}": "grade"
        }
      },
      {
        "template": "show {COLUMN0} of all students who do not have any {TABLE1} .",
        "question": "Show ids of all students who do not have any friends .",
        "concise pattern": "",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "id",
          "{COLUMN1}": "student_id",
          "{TABLE1}": "friend"
        }
      },
      {
        "template": "what are the {COLUMN0} of high school students who do not have {TABLE1} ?",
        "question": "What are the ids of high school students who do not have friends ?",
        "concise pattern": "",
        "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "id",
          "{COLUMN1}": "student_id",
          "{TABLE1}": "friend"
        }
      },
      {
        "template": "show {COLUMN0} of all high school students who do not have any {TABLE1} .",
        "question": "Show names of all high school students who do not have any friends .",
        "concise pattern": "",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "name dict": {
          "{TABLE1}": "friend",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "high schooler",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of students who have no {TABLE1} ?",
        "question": "What are the names of students who have no friends ?",
        "concise pattern": "",
        "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "name dict": {
          "{TABLE1}": "friend",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "high schooler",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "show the ids of high schoolers who have {TABLE0} and are also {COLUMN1} by someone else .",
        "question": "Show the ids of high schoolers who have friends and are also liked by someone else .",
        "concise pattern": "",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "name dict": {
          "{TABLE0}": "friend",
          "{COLUMN0}": "student_id",
          "{COLUMN1}": "liked_id",
          "{TABLE1}": "likes"
        }
      },
      {
        "template": "what are the ids of students who both have {TABLE0} and are {COLUMN1} ?",
        "question": "What are the ids of students who both have friends and are liked ?",
        "concise pattern": "",
        "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "name dict": {
          "{TABLE0}": "friend",
          "{COLUMN0}": "student_id",
          "{COLUMN1}": "liked_id",
          "{TABLE1}": "likes"
        }
      },
      {
        "template": "what is the average {COLUMN0} of all the {TABLE0} ?",
        "question": "What is the average age of all the dogs ?",
        "concise pattern": "",
        "query": "SELECT avg(age) FROM Dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "age",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "compute the average {COLUMN0} of all the {TABLE0} .",
        "question": "Compute the average age of all the dogs .",
        "concise pattern": "",
        "query": "SELECT avg(age) FROM Dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "age",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "how much does each {COLUMN1} type costs ? list both {COLUMN1} type and amount .",
        "question": "How much does each charge type costs ? List both charge type and amount .",
        "concise pattern": "",
        "query": "SELECT charge_type ,  charge_amount FROM Charges",
        "name dict": {
          "{TABLE0}": "charges",
          "{COLUMN0}": "charge_type",
          "{COLUMN1}": "charge_amount"
        }
      },
      {
        "template": "what is the {COLUMN0} amount of the most expensive {COLUMN0} type ?",
        "question": "What is the charge amount of the most expensive charge type ?",
        "concise pattern": "",
        "query": "SELECT max(charge_amount) FROM Charges",
        "name dict": {
          "{TABLE0}": "charges",
          "{COLUMN0}": "charge_amount",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "what are all the possible {COLUMN0} type and {COLUMN1} type combinations ?",
        "question": "What are all the possible breed type and size type combinations ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "breed_code",
          "{COLUMN1}": "size_code"
        }
      },
      {
        "template": "how many {TABLE0} do we have ?",
        "question": "How many singers do we have ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM singer",
        "name dict": {
          "{TABLE0}": "singer",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the total number of {TABLE0} ?",
        "question": "What is the total number of singers ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM singer",
        "name dict": {
          "{TABLE0}": "singer",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the average and maximum {COLUMN0} for all stations ?",
        "question": "What is the average and maximum capacities for all stations ?",
        "concise pattern": "",
        "query": "SELECT avg(capacity) ,  max(capacity) FROM stadium",
        "name dict": {
          "{TABLE0}": "stadium",
          "{AGG1}": "MAX",
          "{COLUMN0}": "capacity",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "find the number of distinct type of {TABLE0} .",
        "question": "Find the number of distinct type of pets .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT pettype) FROM pets",
        "name dict": {
          "{TABLE0}": "pets",
          "{COLUMN0}": "pettype",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many continents are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM CONTINENTS;",
        "name dict": {
          "{TABLE0}": "continents",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the number of {TABLE0} ?",
        "question": "What is the number of continents ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM CONTINENTS;",
        "name dict": {
          "{TABLE0}": "continents",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are listed ?",
        "question": "How many countries are listed ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM COUNTRIES;",
        "name dict": {
          "{TABLE0}": "countries",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} exist ?",
        "question": "How many countries exist ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM COUNTRIES;",
        "name dict": {
          "{TABLE0}": "countries",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the name of the {COLUMN2} where there is not a single car maker ?",
        "question": "What are the name of the countries where there is not a single car maker ?",
        "concise pattern": "",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "country",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "countryname",
          "{COLUMN1}": "countryid",
          "{TABLE0}": "countries",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "what are the names of the {COLUMN2} with no car makers ?",
        "question": "What are the names of the countries with no car makers ?",
        "concise pattern": "",
        "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "country",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "countryname",
          "{COLUMN1}": "countryid",
          "{TABLE0}": "countries",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "how many {TABLE0} do we have ?",
        "question": "How many airlines do we have ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM AIRLINES",
        "name dict": {
          "{TABLE0}": "airlines",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the total number of {TABLE0} ?",
        "question": "What is the total number of airlines ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM AIRLINES",
        "name dict": {
          "{TABLE0}": "airlines",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} do we have ?",
        "question": "How many airports do we have ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM AIRPORTS",
        "name dict": {
          "{TABLE0}": "airports",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "return the number of {TABLE0} .",
        "question": "Return the number of airports .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM AIRPORTS",
        "name dict": {
          "{TABLE0}": "airports",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} do we have ?",
        "question": "How many flights do we have ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM FLIGHTS",
        "name dict": {
          "{TABLE0}": "flights",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "return the number of {TABLE0} .",
        "question": "Return the number of flights .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM FLIGHTS",
        "name dict": {
          "{TABLE0}": "flights",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many employees are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM employee",
        "name dict": {
          "{TABLE0}": "employee",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0}",
        "question": "Count the number of employees",
        "concise pattern": "",
        "query": "SELECT count(*) FROM employee",
        "name dict": {
          "{TABLE0}": "employee",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the minimum and maximum {COLUMN0} of products of all stores .",
        "question": "find the minimum and maximum number of products of all stores .",
        "concise pattern": "",
        "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "name dict": {
          "{TABLE0}": "shop",
          "{AGG1}": "MAX",
          "{COLUMN0}": "number_products",
          "{AGG0}": "MIN"
        }
      },
      {
        "template": "give me all the information about {TABLE0} .",
        "question": "Give me all the information about hiring .",
        "concise pattern": "",
        "query": "SELECT * FROM hiring",
        "name dict": {
          "{TABLE0}": "hiring"
        }
      },
      {
        "template": "what is all the information about {TABLE0} ?",
        "question": "What is all the information about hiring ?",
        "concise pattern": "",
        "query": "SELECT * FROM hiring",
        "name dict": {
          "{TABLE0}": "hiring"
        }
      },
      {
        "template": "how many different store {COLUMN0} are there ?",
        "question": "How many different store locations are there ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop",
        "name dict": {
          "{TABLE0}": "shop",
          "{COLUMN0}": "location",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of distinct store {COLUMN0} .",
        "question": "Count the number of distinct store locations .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT LOCATION) FROM shop",
        "name dict": {
          "{TABLE0}": "shop",
          "{COLUMN0}": "location",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} do we have ?",
        "question": "How many documents do we have ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Documents",
        "name dict": {
          "{TABLE0}": "documents",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} .",
        "question": "Count the number of documents .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Documents",
        "name dict": {
          "{TABLE0}": "documents",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the ids , names , and descriptions for all {TABLE0} ?",
        "question": "What are the ids , names , and descriptions for all documents ?",
        "concise pattern": "",
        "query": "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "name dict": {
          "{COLUMN0}": "document_id",
          "{COLUMN2}": "document_description",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "documents"
        }
      },
      {
        "template": "count the number of different templates used for {TABLE0} .",
        "question": "Count the number of different templates used for documents .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT template_id) FROM Documents",
        "name dict": {
          "{TABLE0}": "documents",
          "{COLUMN0}": "template_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show ids for all {TABLE0} not used by any document .",
        "question": "Show ids for all templates not used by any document .",
        "concise pattern": "",
        "query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "template_id",
          "{TABLE1}": "documents"
        }
      },
      {
        "template": "how many {TABLE0} do we have ?",
        "question": "How many templates do we have ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Templates",
        "name dict": {
          "{TABLE0}": "templates",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} .",
        "question": "Count the number of templates .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Templates",
        "name dict": {
          "{TABLE0}": "templates",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the different {COLUMN0} type codes ?",
        "question": "What are the different template type codes ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT template_type_code FROM Templates",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "template_type_code"
        }
      },
      {
        "template": "show all {COLUMN1} type codes that are not used by any document .",
        "question": "Show all template type codes that are not used by any document .",
        "concise pattern": "",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "documents",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "1",
          "{VALUE3}": "2",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what are the codes of {COLUMN1} types that are not used for any document ?",
        "question": "What are the codes of template types that are not used for any document ?",
        "concise pattern": "",
        "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "name dict": {
          "{VALUE1}": "2",
          "{TABLE1}": "documents",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "1",
          "{VALUE3}": "2",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "show all {COLUMN1} type codes and descriptions .",
        "question": "Show all template type codes and descriptions .",
        "concise pattern": "",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "name dict": {
          "{TABLE0}": "reference template types",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_type_description"
        }
      },
      {
        "template": "what are the type codes and descriptions for all {COLUMN1} types ?",
        "question": "What are the type codes and descriptions for all template types ?",
        "concise pattern": "",
        "query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "name dict": {
          "{TABLE0}": "reference template types",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_type_description"
        }
      },
      {
        "template": "return the different descriptions for {TABLE1} that have been used in a document .",
        "question": "Return the different descriptions for templates that have been used in a document .",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "name dict": {
          "{TABLE1}": "templates",
          "{COLUMN2}": "template_id",
          "{VALUE4}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "template_type_description",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "reference template types",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{TABLE2}": "documents",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "how many {TABLE0} in total ?",
        "question": "How many paragraphs in total ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Paragraphs",
        "name dict": {
          "{TABLE0}": "paragraphs",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} .",
        "question": "Count the number of paragraphs .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Paragraphs",
        "name dict": {
          "{TABLE0}": "paragraphs",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many teachers are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM teacher",
        "name dict": {
          "{TABLE0}": "teacher",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the total count of {TABLE0} ?",
        "question": "What is the total count of teachers ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM teacher",
        "name dict": {
          "{TABLE0}": "teacher",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the average and maximum number of tickets bought in all {TABLE0} ?",
        "question": "What are the average and maximum number of tickets bought in all visits ?",
        "concise pattern": "",
        "query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
        "name dict": {
          "{TABLE0}": "visit",
          "{AGG1}": "MAX",
          "{COLUMN0}": "num_of_ticket",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "find the total number of {TABLE0} .",
        "question": "Find the total number of players .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM players",
        "name dict": {
          "{TABLE0}": "players",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many players are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM players",
        "name dict": {
          "{TABLE0}": "players",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the total number of {TABLE0} .",
        "question": "Find the total number of matches .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} .",
        "question": "Count the number of matches .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the average age of losers and winners of all {TABLE0} .",
        "question": "Find the average age of losers and winners of all matches .",
        "concise pattern": "",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{AGG1}": "AVG",
          "{COLUMN0}": "loser_age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "winner_age"
        }
      },
      {
        "template": "what are the average ages of losers and winners across {TABLE0} ?",
        "question": "What are the average ages of losers and winners across matches ?",
        "concise pattern": "",
        "query": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{AGG1}": "AVG",
          "{COLUMN0}": "loser_age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "winner_age"
        }
      },
      {
        "template": "find the average rank of winners in all {TABLE0} .",
        "question": "Find the average rank of winners in all matches .",
        "concise pattern": "",
        "query": "SELECT avg(winner_rank) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "winner_rank",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "what is the average rank for winners in all {TABLE0} ?",
        "question": "What is the average rank for winners in all matches ?",
        "concise pattern": "",
        "query": "SELECT avg(winner_rank) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "winner_rank",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "find the highest rank of losers in all {TABLE0} .",
        "question": "Find the highest rank of losers in all matches .",
        "concise pattern": "",
        "query": "SELECT min(loser_rank) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "loser_rank",
          "{AGG0}": "MIN"
        }
      },
      {
        "template": "what is the best rank of losers across all {TABLE0} ?",
        "question": "What is the best rank of losers across all matches ?",
        "concise pattern": "",
        "query": "SELECT min(loser_rank) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "loser_rank",
          "{AGG0}": "MIN"
        }
      },
      {
        "template": "how many distinct countries do {TABLE0} come from ?",
        "question": "How many distinct countries do players come from ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT country_code) FROM players",
        "name dict": {
          "{TABLE0}": "players",
          "{COLUMN0}": "country_code",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different {COLUMN0} names are there ?",
        "question": "How many different loser names are there ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT loser_name) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "loser_name",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is maximum and minimum {TABLE0} toll caused each time ?",
        "question": "What is maximum and minimum death toll caused each time ?",
        "concise pattern": "",
        "query": "SELECT max(killed) ,  min(killed) FROM death",
        "name dict": {
          "{TABLE0}": "death",
          "{AGG1}": "MIN",
          "{COLUMN0}": "killed",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "how many {TABLE0} in total are listed ?",
        "question": "How many courses in total are listed ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Courses",
        "name dict": {
          "{TABLE0}": "courses",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many courses are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Courses",
        "name dict": {
          "{TABLE0}": "courses",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different {COLUMN0} names are offered ?",
        "question": "How many different degree names are offered ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "name dict": {
          "{TABLE0}": "degree programs",
          "{COLUMN0}": "degree_summary_name",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the names and descriptions of all the {TABLE0} ?",
        "question": "What are the names and descriptions of all the sections ?",
        "concise pattern": "",
        "query": "SELECT section_name ,  section_description FROM Sections",
        "name dict": {
          "{TABLE0}": "sections",
          "{COLUMN0}": "section_name",
          "{COLUMN1}": "section_description"
        }
      },
      {
        "template": "what are the names and descriptions for all the {TABLE0} ?",
        "question": "What are the names and descriptions for all the sections ?",
        "concise pattern": "",
        "query": "SELECT section_name ,  section_description FROM Sections",
        "name dict": {
          "{TABLE0}": "sections",
          "{COLUMN0}": "section_name",
          "{COLUMN1}": "section_description"
        }
      },
      {
        "template": "what are the names of all {TABLE0} that have some students enrolled ?",
        "question": "What are the names of all courses that have some students enrolled ?",
        "concise pattern": "",
        "query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "student enrolment courses",
          "{COLUMN0}": "course_name",
          "{COLUMN1}": "course_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{TABLE0}": "courses"
        }
      },
      {
        "template": "on average , when were the {TABLE0} printed ?",
        "question": "On average , when were the transcripts printed ?",
        "concise pattern": "",
        "query": "SELECT avg(transcript_date) FROM Transcripts",
        "name dict": {
          "{TABLE0}": "transcripts",
          "{COLUMN0}": "transcript_date",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "what is the average {COLUMN0} date ?",
        "question": "What is the average transcript date ?",
        "concise pattern": "",
        "query": "SELECT avg(transcript_date) FROM Transcripts",
        "name dict": {
          "{TABLE0}": "transcripts",
          "{COLUMN0}": "transcript_date",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "how many {TABLE0} are released ?",
        "question": "How many transcripts are released ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Transcripts",
        "name dict": {
          "{TABLE0}": "transcripts",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are listed ?",
        "question": "How many transcripts are listed ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Transcripts",
        "name dict": {
          "{TABLE0}": "transcripts",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different addresses do the {TABLE0} currently live ?",
        "question": "How many different addresses do the students currently live ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students",
        "name dict": {
          "{TABLE0}": "students",
          "{COLUMN0}": "current_address_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the different addresses that have {TABLE0} living there ?",
        "question": "What are the different addresses that have students living there ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT current_address_id) FROM Students",
        "name dict": {
          "{TABLE0}": "students",
          "{COLUMN0}": "current_address_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is minimum and maximum {COLUMN0} of tv series ?",
        "question": "What is minimum and maximum share of TV series ?",
        "concise pattern": "",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "name dict": {
          "{TABLE0}": "tv series",
          "{AGG1}": "MIN",
          "{COLUMN0}": "share",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "what is the maximum and minimum {COLUMN0} for the tv series ?",
        "question": "What is the maximum and minimum share for the TV series ?",
        "concise pattern": "",
        "query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "name dict": {
          "{TABLE0}": "tv series",
          "{AGG1}": "MIN",
          "{COLUMN0}": "share",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "what is the average {COLUMN0} of poker players ?",
        "question": "What is the average earnings of poker players ?",
        "concise pattern": "",
        "query": "SELECT avg(Earnings) FROM poker_player",
        "name dict": {
          "{TABLE0}": "poker player",
          "{COLUMN0}": "earnings",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "return the average {COLUMN0} across all poker players .",
        "question": "Return the average earnings across all poker players .",
        "concise pattern": "",
        "query": "SELECT avg(Earnings) FROM poker_player",
        "name dict": {
          "{TABLE0}": "poker player",
          "{COLUMN0}": "earnings",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "what are the {COLUMN0} of poker players ?",
        "question": "What are the names of poker players ?",
        "concise pattern": "",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "poker player",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "return the {COLUMN0} of all the poker players .",
        "question": "Return the names of all the poker players .",
        "concise pattern": "",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "poker player",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "how many distinct {COLUMN0} are there ?",
        "question": "How many distinct nationalities are there ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT Nationality) FROM people",
        "name dict": {
          "{TABLE0}": "people",
          "{COLUMN0}": "nationality",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of different {COLUMN0} .",
        "question": "Count the number of different nationalities .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT Nationality) FROM people",
        "name dict": {
          "{TABLE0}": "people",
          "{COLUMN0}": "nationality",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the maximum and minimum values of {COLUMN0} codes ?",
        "question": "What are the maximum and minimum values of area codes ?",
        "concise pattern": "",
        "query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
        "name dict": {
          "{TABLE0}": "area code state",
          "{AGG1}": "MIN",
          "{COLUMN0}": "area_code",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "how many unique {COLUMN0} are spoken in the world ?",
        "question": "How many unique languages are spoken in the world ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "name dict": {
          "{TABLE0}": "countrylanguage",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the number of distinct {COLUMN0} used around the world ?",
        "question": "What is the number of distinct languages used around the world ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "name dict": {
          "{TABLE0}": "countrylanguage",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many conductors are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM conductor",
        "name dict": {
          "{TABLE0}": "conductor",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} .",
        "question": "Count the number of conductors .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM conductor",
        "name dict": {
          "{TABLE0}": "conductor",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show all the {COLUMN0} of the high schoolers .",
        "question": "Show all the grades of the high schoolers .",
        "concise pattern": "",
        "query": "SELECT grade FROM Highschooler",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "grade"
        }
      },
      {
        "template": "what is the {COLUMN0} of each high schooler ?",
        "question": "What is the grade of each high schooler ?",
        "concise pattern": "",
        "query": "SELECT grade FROM Highschooler",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "grade"
        }
      },
      {
        "template": "how many dogs went through any {TABLE0} ?",
        "question": "How many dogs went through any treatments ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "name dict": {
          "{TABLE0}": "treatments",
          "{COLUMN0}": "dog_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the {COLUMN0} of the oldest dog ?",
        "question": "What is the age of the oldest dog ?",
        "concise pattern": "",
        "query": "SELECT max(age) FROM Dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "age",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "tell me the {COLUMN0} of the oldest dog .",
        "question": "Tell me the age of the oldest dog .",
        "concise pattern": "",
        "query": "SELECT max(age) FROM Dogs",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "age",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "list each {COLUMN1} type and its amount .",
        "question": "List each charge type and its amount .",
        "concise pattern": "",
        "query": "SELECT charge_type ,  charge_amount FROM Charges",
        "name dict": {
          "{TABLE0}": "charges",
          "{COLUMN0}": "charge_type",
          "{COLUMN1}": "charge_amount"
        }
      },
      {
        "template": "how much does the most expensive {COLUMN0} type costs ?",
        "question": "How much does the most expensive charge type costs ?",
        "concise pattern": "",
        "query": "SELECT max(charge_amount) FROM Charges",
        "name dict": {
          "{TABLE0}": "charges",
          "{COLUMN0}": "charge_amount",
          "{AGG0}": "MAX"
        }
      },
      {
        "template": "how many {TABLE0} are there ?",
        "question": "How many singers are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM singer",
        "name dict": {
          "{TABLE0}": "singer",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the count of {TABLE0} ?",
        "question": "What is the count of singers ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM singer",
        "name dict": {
          "{TABLE0}": "singer",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different types of pet are there ?",
        "question": "How many different types of pet are there ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT pettype) FROM pets",
        "name dict": {
          "{TABLE0}": "pets",
          "{COLUMN0}": "pettype",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different templates do all document use ?",
        "question": "How many different templates do all document use ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT template_id) FROM Documents",
        "name dict": {
          "{TABLE0}": "documents",
          "{COLUMN0}": "template_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the number of distinct name of losers .",
        "question": "Find the number of distinct name of losers .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT loser_name) FROM matches",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "loser_name",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the average number of injuries caused each time ?",
        "question": "What is the average number of injuries caused each time ?",
        "concise pattern": "",
        "query": "SELECT avg(injured) FROM death",
        "name dict": {
          "{TABLE0}": "death",
          "{COLUMN0}": "injured",
          "{AGG0}": "AVG"
        }
      },
      {
        "template": "how many departments offer any degree ?",
        "question": "How many departments offer any degree ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "name dict": {
          "{TABLE0}": "degree programs",
          "{COLUMN0}": "department_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different departments offer degrees ?",
        "question": "How many different departments offer degrees ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "name dict": {
          "{TABLE0}": "degree programs",
          "{COLUMN0}": "department_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many different degrees are offered ?",
        "question": "How many different degrees are offered ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "name dict": {
          "{TABLE0}": "degree programs",
          "{COLUMN0}": "degree_summary_name",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many poker players are there ?",
        "question": "How many poker players are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM poker_player",
        "name dict": {
          "{TABLE0}": "poker player",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of poker players .",
        "question": "Count the number of poker players .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM poker_player",
        "name dict": {
          "{TABLE0}": "poker player",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many states are there ?",
        "question": "How many states are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM area_code_state",
        "name dict": {
          "{TABLE0}": "area code state",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many high schoolers are there ?",
        "question": "How many high schoolers are there ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Highschooler",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of high schoolers .",
        "question": "Count the number of high schoolers .",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Highschooler",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of dogs that went through a treatment .",
        "question": "Count the number of dogs that went through a treatment .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT dog_id) FROM Treatments",
        "name dict": {
          "{TABLE0}": "treatments",
          "{COLUMN0}": "dog_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many professionals have performed any treatment to dogs ?",
        "question": "How many professionals have performed any treatment to dogs ?",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "name dict": {
          "{TABLE0}": "treatments",
          "{COLUMN0}": "professional_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the number of professionals who have ever treated dogs .",
        "question": "Find the number of professionals who have ever treated dogs .",
        "concise pattern": "",
        "query": "SELECT count(DISTINCT professional_id) FROM Treatments",
        "name dict": {
          "{TABLE0}": "treatments",
          "{COLUMN0}": "professional_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many available features are there in total ?",
        "question": "How many available features are there in total ?",
        "concise pattern": "",
        "query": "SELECT count(*) FROM Other_Available_Features",
        "name dict": {
          "{TABLE0}": "other available features",
          "{AGG0}": "COUNT"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} ORDER BY {AGG0} ( * ) {SC0} LIMIT {VALUE0}",
    [
      {
        "template": "what is the id , {COLUMN1} {VALUE1} , and {COLUMN1} {VALUE4} of the {COLUMN0} with the most {TABLE1} ?",
        "question": "What is the id , line 1 , and line 2 of the address with the most students ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "students",
          "{COLUMN2}": "line_2",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "address_id",
          "{COLUMN1}": "line_1",
          "{TABLE0}": "addresses",
          "{VALUE2}": "1",
          "{COLUMN3}": "current_address_id",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} has enrolled for the most times in any program ? list the id , {COLUMN1} name , {COLUMN2} name , {COLUMN3} name , the number of enrollments and {COLUMN0} id .",
        "question": "Which student has enrolled for the most times in any program ? List the id , first name , middle name , last name , the number of enrollments and student id .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{COLUMN2}": "middle_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "student_id",
          "{AGG1}": "COUNT",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "students",
          "{VALUE2}": "1",
          "{COLUMN3}": "last_name",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} owns the most {TABLE0} ? list the {COLUMN0} id , {COLUMN1} name and {COLUMN2} name .",
        "question": "Which owner owns the most dogs ? List the owner id , first name and last name .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "owners",
          "{COLUMN2}": "last_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "owner_id",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "dogs",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "return the {COLUMN0} id , {COLUMN1} name and {COLUMN2} name of the {COLUMN0} who has the most {TABLE0} .",
        "question": "Return the owner id , first name and last name of the owner who has the most dogs .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "owners",
          "{COLUMN2}": "last_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "owner_id",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "dogs",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} has paid for the most {TABLE2} on his or her {TABLE1} ? list the {COLUMN0} id and {COLUMN1} name .",
        "question": "Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "dog_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "owner_id",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "owners",
          "{VALUE2}": "1",
          "{VALUE6}": "3",
          "{TABLE2}": "treatments",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "tell me the {COLUMN0} id and {COLUMN1} name of the {COLUMN0} who spent the most on {TABLE2} of his or her {TABLE1} .",
        "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "dog_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "owner_id",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "owners",
          "{VALUE2}": "1",
          "{VALUE6}": "3",
          "{TABLE2}": "treatments",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN1} received the most awards in {TABLE1} ? give me the {COLUMN1} {COLUMN0} .",
        "question": "Which employee received the most awards in evaluations ? Give me the employee name .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "evaluation",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "employee_id",
          "{TABLE0}": "employee",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the {TABLE1} {COLUMN0} and {COLUMN1} that {COLUMN2} most total injuries ?",
        "question": "What is the ship id and name that caused most total injuries ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "ship",
          "{COLUMN2}": "caused_by_ship_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "id",
          "{COLUMN1}": "name",
          "{TABLE0}": "death",
          "{VALUE2}": "1",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN1} , {COLUMN2} , and {COLUMN3} name , along with the id and number of enrollments , for the {COLUMN0} who enrolled the most in any program ?",
        "question": "What is the first , middle , and last name , along with the id and number of enrollments , for the student who enrolled the most in any program ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{COLUMN2}": "middle_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "student_id",
          "{AGG1}": "COUNT",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "students",
          "{VALUE2}": "1",
          "{COLUMN3}": "last_name",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "of all the {TABLE0} who got voted , what is the {COLUMN1} number and name of the {COLUMN1} who got least {TABLE1} ?",
        "question": "Of all the contestants who got voted , what is the contestant number and name of the contestant who got least votes ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "votes",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "contestant_number",
          "{COLUMN1}": "contestant_name",
          "{TABLE0}": "contestants",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "find the {COLUMN0} of {COLUMN1} who was awarded the most times in the {TABLE1} .",
        "question": "find the name of employee who was awarded the most times in the evaluation .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "evaluation",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "employee_id",
          "{TABLE0}": "employee",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {COLUMN1} that is {TABLE0} the largest number of employees ?",
        "question": "What is the name of the shop that is hiring the largest number of employees ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "shop",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "shop_id",
          "{TABLE0}": "hiring",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "which {COLUMN1} has the most employees ? give me the {COLUMN1} {COLUMN0} .",
        "question": "Which shop has the most employees ? Give me the shop name .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "shop",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "shop_id",
          "{TABLE0}": "hiring",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the id and {COLUMN1} of the {COLUMN0} {TABLE1} most times ?",
        "question": "What are the id and name of the museum visited most times ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "visit",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "museum_id",
          "{COLUMN1}": "name",
          "{TABLE0}": "museum",
          "{VALUE2}": "1",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} holds the most number of {TABLE1} currently ? list the {COLUMN0} id and all lines .",
        "question": "Which address holds the most number of students currently ? List the address id and all lines .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "students",
          "{COLUMN2}": "line_2",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "address_id",
          "{COLUMN1}": "line_1",
          "{TABLE0}": "addresses",
          "{VALUE2}": "1",
          "{COLUMN3}": "current_address_id",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "show the {COLUMN0} of the {COLUMN2} that has conducted the most number of {COLUMN1} .",
        "question": "Show the name of the conductor that has conducted the most number of orchestras .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN2}": "conductor_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{TABLE0}": "conductor",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {COLUMN2} who has conducted the most {COLUMN1} ?",
        "question": "What is the name of the conductor who has conducted the most orchestras ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN2}": "conductor_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{TABLE0}": "conductor",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "return the {COLUMN0} of the high school {COLUMN1} with the most {TABLE0} .",
        "question": "Return the name of the high school student with the most friends .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "give the {COLUMN0} of the {COLUMN1} with the most {TABLE0} .",
        "question": "Give the name of the student with the most likes .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which {COLUMN1} do the most {TABLE1} have ? give me the {COLUMN1} name .",
        "question": "Which breed do the most dogs have ? Give me the breed name .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "dogs",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "breed_name",
          "{COLUMN1}": "breed_code",
          "{TABLE0}": "breeds",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "which {COLUMN0} has most number of {TABLE0} ?",
        "question": "Which year has most number of concerts ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "year",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "concert"
        }
      },
      {
        "template": "what is the {COLUMN0} that had the most {TABLE0} ?",
        "question": "What is the year that had the most concerts ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "year",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "concert"
        }
      },
      {
        "template": "which {COLUMN0} has most number of {TABLE1} ?",
        "question": "Which airline has most number of flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "flights",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what {COLUMN0} serves the most {TABLE1} ?",
        "question": "What airline serves the most flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "flights",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the id and type code for the {COLUMN1} used by the most {TABLE0} ?",
        "question": "What is the id and type code for the template used by the most documents ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "templates",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "template_id",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "documents",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "return the id and type code of the {COLUMN1} that is used for the greatest number of {TABLE0} .",
        "question": "Return the id and type code of the template that is used for the greatest number of documents .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "templates",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "template_id",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "documents",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} type code has most number of {TABLE0} ?",
        "question": "Which template type code has most number of templates ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "template_type_code",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "return the type code of the {COLUMN0} type that the most {TABLE0} belong to .",
        "question": "Return the type code of the template type that the most templates belong to .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "template_type_code",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "which {COLUMN1} type code is used by most number of {TABLE1} ?",
        "question": "Which template type code is used by most number of documents ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "documents",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "return the code of the {COLUMN1} type that is most commonly used in {TABLE1} .",
        "question": "Return the code of the template type that is most commonly used in documents .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "documents",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "template_type_code",
          "{COLUMN1}": "template_id",
          "{TABLE0}": "templates",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the {COLUMN1} id and name with greatest number of {TABLE0} ?",
        "question": "What is the document id and name with greatest number of paragraphs ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "documents",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "document_id",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "return the id and name of the {COLUMN1} with the most {TABLE0} .",
        "question": "Return the id and name of the document with the most paragraphs .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "documents",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "document_id",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} id with least number of {TABLE0} ?",
        "question": "What is the document id with least number of paragraphs ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "document_id",
          "{SC0}": "ASC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "paragraphs"
        }
      },
      {
        "template": "return the id of the {COLUMN0} with the fewest {TABLE0} .",
        "question": "Return the id of the document with the fewest paragraphs .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "document_id",
          "{SC0}": "ASC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "paragraphs"
        }
      },
      {
        "template": "list the most common {COLUMN0} of {TABLE0} .",
        "question": "List the most common hometown of teachers .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "hometown",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "teacher"
        }
      },
      {
        "template": "what is the most commmon {COLUMN0} for {TABLE0} ?",
        "question": "What is the most commmon hometowns for teachers ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "hometown",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "teacher"
        }
      },
      {
        "template": "find the {COLUMN0} that has the most number of {TABLE0} .",
        "question": "Find the year that has the most number of matches .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "year",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "matches"
        }
      },
      {
        "template": "which {COLUMN0} had the most {TABLE0} ?",
        "question": "Which year had the most matches ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "year",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "matches"
        }
      },
      {
        "template": "what is the name of the {COLUMN1} who has won the most {TABLE0} , and how many rank points does this player have ?",
        "question": "What is the name of the winner who has won the most matches , and how many rank points does this player have ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "winner_name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "winner_rank_points",
          "{TABLE0}": "matches",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "find the code of the {COLUMN0} where has the greatest number of {TABLE0} .",
        "question": "find the code of the country where has the greatest number of players .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "country_code",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "what is the code of the {COLUMN0} with the most {TABLE0} ?",
        "question": "What is the code of the country with the most players ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "country_code",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "which {COLUMN1} offers the most number of degrees ? list {COLUMN1} name and id .",
        "question": "Which department offers the most number of degrees ? List department name and id .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "departments",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "department_name",
          "{COLUMN1}": "department_id",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "for each {COLUMN1} id , what is the name of the {COLUMN1} with the most number of degrees ?",
        "question": "For each department id , what is the name of the department with the most number of degrees ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "departments",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "department_name",
          "{COLUMN1}": "department_id",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "list the {COLUMN0} used least number of tv channel . list {COLUMN0} and number of tv channel .",
        "question": "List the language used least number of TV Channel . List language and number of TV Channel .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "name dict": {
          "{AGG1}": "COUNT",
          "{SC0}": "ASC",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT",
          "{TABLE0}": "tv channel",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the most common {COLUMN0} of {TABLE0} ?",
        "question": "What is the most common nationality of people ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "nationality",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "give the {COLUMN0} that is most common across all {TABLE0} .",
        "question": "Give the nationality that is most common across all people .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "nationality",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "what is {COLUMN0} of the {TABLE0} that speaks the largest number of languages ?",
        "question": "What is name of the country that speaks the largest number of languages ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "list the {COLUMN0} company shared by the most number of {COLUMN1} .",
        "question": "List the record company shared by the most number of orchestras .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "record_company",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "what is the {COLUMN0} company used by the greatest number of {COLUMN1} ?",
        "question": "What is the record company used by the greatest number of orchestras ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "record_company",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "what is the {COLUMN0} of the high schooler who has the greatest number of {TABLE0} ?",
        "question": "What is the name of the high schooler who has the greatest number of friends ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the high schooler who has the greatest number of {TABLE0} ?",
        "question": "What is the name of the high schooler who has the greatest number of likes ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the name of the {COLUMN1} with the most {TABLE1} ?",
        "question": "What is the name of the breed with the most dogs ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "dogs",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "breed_name",
          "{COLUMN1}": "breed_code",
          "{TABLE0}": "breeds",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "please show the most common {COLUMN0} of {TABLE0} .",
        "question": "Please show the most common citizenship of singers .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "citizenship",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "what is the msot common {TABLE0} {COLUMN0} ?",
        "question": "What is the msot common singer citizenship ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "citizenship",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "which of the {COLUMN1} has the most car makers ? list the country name .",
        "question": "Which of the countries has the most car makers ? List the country name .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "countries",
          "{COLUMN2}": "countryid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "countryname",
          "{COLUMN1}": "country",
          "{TABLE0}": "car makers",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which {COLUMN0} has the most version ( make ) of cars ?",
        "question": "Which model has the most version ( make ) of cars ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "name dict": {
          "{COLUMN0}": "model",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "car names"
        }
      },
      {
        "template": "what {COLUMN0} has the most different versions ?",
        "question": "What model has the most different versions ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "name dict": {
          "{COLUMN0}": "model",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "car names"
        }
      },
      {
        "template": "which city has most number of arriving {TABLE1} ?",
        "question": "Which city has most number of arriving flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "destairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "city",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which city has most number of departing {TABLE1} ?",
        "question": "Which city has most number of departing flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "city",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the code of airport that has the highest number of {TABLE1} ?",
        "question": "What is the code of airport that has the highest number of flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "airportcode",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the airport code of the airport with the most {TABLE1} ?",
        "question": "What is the airport code of the airport with the most flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "airportcode",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "find the name and rank points of the {COLUMN1} who won the most times .",
        "question": "Find the name and rank points of the winner who won the most times .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "winner_name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "winner_rank_points",
          "{TABLE0}": "matches",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the {COLUMN1} which most student registered in ? show both the name and the id .",
        "question": "What is the semester which most student registered in ? Show both the name and the id .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "semester_name",
          "{COLUMN1}": "semester_id",
          "{TABLE0}": "semesters",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "for each {COLUMN1} , what is the name and id of the one with the most students registered ?",
        "question": "For each semester , what is the name and id of the one with the most students registered ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "semester_name",
          "{COLUMN1}": "semester_id",
          "{TABLE0}": "semesters",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN1} summary name that has the most number of students enrolled ?",
        "question": "What is the degree summary name that has the most number of students enrolled ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "student enrolment",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "degree_summary_name",
          "{COLUMN1}": "degree_program_id",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the program id and the summary of the {COLUMN1} that has the most students enrolled ?",
        "question": "What is the program id and the summary of the degree that has the most students enrolled ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "degree_program_id",
          "{COLUMN1}": "degree_summary_name",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what 's the name of the {COLUMN1} with most number of enrollments ?",
        "question": "What 's the name of the course with most number of enrollments ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "student enrolment courses",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "course_name",
          "{COLUMN1}": "course_id",
          "{TABLE0}": "courses",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the name of the {COLUMN1} with the most students enrolled ?",
        "question": "What is the name of the course with the most students enrolled ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "student enrolment courses",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "course_name",
          "{COLUMN1}": "course_id",
          "{TABLE0}": "courses",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "show the date of the {COLUMN1} which shows the least number of results , also list the id .",
        "question": "Show the date of the transcript which shows the least number of results , also list the id .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "transcripts",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "transcript_date",
          "{COLUMN1}": "transcript_id",
          "{TABLE0}": "transcript contents",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the date and id of the {COLUMN1} with the least number of results ?",
        "question": "What is the date and id of the transcript with the least number of results ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "transcripts",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "transcript_date",
          "{COLUMN1}": "transcript_id",
          "{TABLE0}": "transcript contents",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} used by the least number of tv channels and how many channels use it ?",
        "question": "What are the languages used by the least number of TV Channels and how many channels use it ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "name dict": {
          "{AGG1}": "COUNT",
          "{SC0}": "ASC",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT",
          "{TABLE0}": "tv channel",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} code in which the most voters voted ?",
        "question": "What is the area code in which the most voters voted ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "votes",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "area_code",
          "{COLUMN1}": "state",
          "{TABLE0}": "area code state",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "give the {COLUMN0} of the nation that uses the greatest amount of languages .",
        "question": "Give the name of the nation that uses the greatest amount of languages .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which {COLUMN0} has the most diverse languages ?",
        "question": "Which continent has the most diverse languages ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which {COLUMN0} speaks the most languages ?",
        "question": "Which continent speaks the most languages ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which {COLUMN0} is spoken by the largest number of countries ?",
        "question": "Which language is spoken by the largest number of countries ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "language",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "countrylanguage"
        }
      },
      {
        "template": "give the {COLUMN0} that is spoken in the most countries .",
        "question": "Give the language that is spoken in the most countries .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "language",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "countrylanguage"
        }
      },
      {
        "template": "which {COLUMN0} has the most high schoolers ?",
        "question": "Which grade has the most high schoolers ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "grade",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "high schooler"
        }
      },
      {
        "template": "return the {COLUMN0} that has the greatest number of high schoolers .",
        "question": "Return the grade that has the greatest number of high schoolers .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "grade",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "high schooler"
        }
      },
      {
        "template": "what is the name of the country with the most car makers ?",
        "question": "What is the name of the country with the most car makers ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "countries",
          "{COLUMN2}": "countryid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "countryname",
          "{COLUMN1}": "country",
          "{TABLE0}": "car makers",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which city has the most frequent destination airport ?",
        "question": "Which city has the most frequent destination airport ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "destairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "city",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "which city is the most frequent source airport ?",
        "question": "Which city is the most frequent source airport ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "city",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "find the kind of program which most number of students are enrolled in ?",
        "question": "Find the kind of program which most number of students are enrolled in ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "student enrolment",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "degree_summary_name",
          "{COLUMN1}": "degree_program_id",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "2",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "find the program which most number of students are enrolled in . list both the id and the summary .",
        "question": "Find the program which most number of students are enrolled in . List both the id and the summary .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "degree_program_id",
          "{COLUMN1}": "degree_summary_name",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "how many times at most can a course enrollment result show in different transcripts ? also show the course enrollment id .",
        "question": "How many times at most can a course enrollment result show in different transcripts ? Also show the course enrollment id .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG1}": "COUNT",
          "{SC0}": "DESC",
          "{COLUMN0}": "student_course_id",
          "{AGG0}": "COUNT",
          "{TABLE0}": "transcript contents",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the maximum number of times that a course shows up in different transcripts and what is that course 's enrollment id ?",
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course 's enrollment id ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{AGG1}": "COUNT",
          "{SC0}": "DESC",
          "{COLUMN0}": "student_course_id",
          "{AGG0}": "COUNT",
          "{TABLE0}": "transcript contents",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "which country has the most of tv channels ? list the country and number of tv channels it has .",
        "question": "Which country has the most of TV Channels ? List the country and number of TV Channels it has .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "name dict": {
          "{AGG1}": "COUNT",
          "{SC0}": "DESC",
          "{COLUMN0}": "country",
          "{AGG0}": "COUNT",
          "{TABLE0}": "tv channel",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the country with the most number of tv channels and how many does it have ?",
        "question": "What is the country with the most number of TV Channels and how many does it have ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "name dict": {
          "{AGG1}": "COUNT",
          "{SC0}": "DESC",
          "{COLUMN0}": "country",
          "{AGG0}": "COUNT",
          "{TABLE0}": "tv channel",
          "{VALUE0}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0}",
    [
      {
        "template": "how many {TABLE1} does each {COLUMN1} have ? list the {COLUMN1} id , {COLUMN1} name and the number of {TABLE1} .",
        "question": "How many countries does each continent have ? List the continent id , continent name and the number of countries .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{TABLE1}": "countries",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "contid",
          "{COLUMN1}": "continent",
          "{TABLE0}": "continents",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "show the {COLUMN1} {COLUMN0} and the number of {TABLE0} in each {COLUMN1} .",
        "question": "Show the stadium name and the number of concerts in each stadium .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "stadium",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "stadium_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "concert"
        }
      },
      {
        "template": "show different {COLUMN0} of {TABLE0} and the number of {TABLE0} from each {COLUMN0} .",
        "question": "Show different hometown of teachers and the number of teachers from each hometown .",
        "concise pattern": "GROUP BY",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "name dict": {
          "{TABLE0}": "teacher",
          "{COLUMN0}": "hometown",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are different {COLUMN0} of {TABLE0} and the corresponding number of {TABLE0} from each {COLUMN0} ?",
        "question": "What are different nationalities of people and the corresponding number of people from each nation ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "name dict": {
          "{TABLE0}": "people",
          "{COLUMN0}": "nationality",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show different {COLUMN0} of {TABLE0} and the number of {TABLE0} of each {COLUMN0} .",
        "question": "Show different citizenship of singers and the number of singers of each citizenship .",
        "concise pattern": "GROUP BY",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "citizenship",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show different {COLUMN0} and the maximum {COLUMN1} worth of {TABLE0} of each {COLUMN0} .",
        "question": "Show different citizenships and the maximum net worth of singers of each citizenship .",
        "concise pattern": "GROUP BY",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "citizenship",
          "{AGG0}": "MAX",
          "{COLUMN1}": "net_worth_millions"
        }
      },
      {
        "template": "show the {COLUMN0} of {TABLE0} and the total {COLUMN1} of their {TABLE1} .",
        "question": "Show the names of singers and the total sales of their songs .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "name dict": {
          "{TABLE1}": "song",
          "{COLUMN2}": "singer_id",
          "{AGG0}": "SUM",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "name",
          "{COLUMN1}": "sales",
          "{TABLE0}": "singer",
          "{VALUE2}": "1",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "for each {COLUMN2} {COLUMN0} , what is the total {COLUMN1} for their {TABLE1} ?",
        "question": "For each singer name , what is the total sales for their songs ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "name dict": {
          "{TABLE1}": "song",
          "{COLUMN2}": "singer_id",
          "{AGG0}": "SUM",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "name",
          "{COLUMN1}": "sales",
          "{TABLE0}": "singer",
          "{VALUE2}": "1",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "show the name and {COLUMN1} for all {TABLE1} and the number of singers in each {COLUMN0} .",
        "question": "Show the name and theme for all concerts and the number of singers in each concert .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "name dict": {
          "{TABLE1}": "concert",
          "{COLUMN2}": "concert_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "concert_name",
          "{COLUMN1}": "theme",
          "{TABLE0}": "singer in concert",
          "{VALUE2}": "1",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "list {COLUMN1} {COLUMN0} and number of concerts for each {COLUMN1} .",
        "question": "List singer names and number of concerts for each singer .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "singer",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "singer_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "singer in concert"
        }
      },
      {
        "template": "how many models does each car {COLUMN2} produce ? list {COLUMN2} full name , {COLUMN1} and the number .",
        "question": "How many models does each car maker produce ? List maker full name , id and the number .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "name dict": {
          "{TABLE1}": "model list",
          "{COLUMN2}": "maker",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "fullname",
          "{COLUMN1}": "id",
          "{TABLE0}": "car makers",
          "{VALUE2}": "1",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the number of car models that are produced by each {COLUMN2} and what is the {COLUMN1} and full name of each {COLUMN2} ?",
        "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "maker",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "fullname",
          "{COLUMN1}": "id",
          "{TABLE0}": "model list",
          "{VALUE2}": "1",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "what is the average {COLUMN0} and {COLUMN1} for each {COLUMN1} ?",
        "question": "What is the average weight and year for each year ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "name dict": {
          "{TABLE0}": "cars data",
          "{COLUMN0}": "weight",
          "{AGG0}": "AVG",
          "{COLUMN1}": "year"
        }
      },
      {
        "template": "find the number of employees hired in each {COLUMN1} ; show the {COLUMN1} {COLUMN0} as well .",
        "question": "Find the number of employees hired in each shop ; show the shop name as well .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "shop",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "shop_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "hiring"
        }
      },
      {
        "template": "for each {COLUMN1} , return the number of employees working there and the {COLUMN0} of the {COLUMN1} .",
        "question": "For each shop , return the number of employees working there and the name of the shop .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "shop",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "shop_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "hiring"
        }
      },
      {
        "template": "show all {COLUMN0} ids and number of {TABLE0} using each {COLUMN0} .",
        "question": "Show all template ids and number of documents using each template .",
        "concise pattern": "GROUP BY",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "name dict": {
          "{TABLE0}": "documents",
          "{COLUMN0}": "template_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show all {COLUMN1} ids , names and the number of {TABLE0} in each {COLUMN1} .",
        "question": "Show all document ids , names and the number of paragraphs in each document .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{TABLE1}": "documents",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "document_id",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "find the average {COLUMN0} for each {COLUMN2} and their {COLUMN1} name .",
        "question": "Find the average ranking for each player and their first name .",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "name dict": {
          "{COLUMN2}": "player_id",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{TABLE1}": "rankings",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "ranking",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "players",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the {COLUMN1} names of all {TABLE0} , and their average {COLUMN0} ?",
        "question": "What are the first names of all players , and their average rankings ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "name dict": {
          "{COLUMN2}": "player_id",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{TABLE1}": "rankings",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "ranking",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "players",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "find the total {COLUMN0} points for each {COLUMN2} and their {COLUMN1} name .",
        "question": "Find the total ranking points for each player and their first name .",
        "concise pattern": "GROUP BY",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "name dict": {
          "{COLUMN2}": "player_id",
          "{AGG0}": "SUM",
          "{VALUE4}": "2",
          "{TABLE1}": "rankings",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "ranking_points",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "players",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the {COLUMN1} names of all {TABLE0} , and their total {COLUMN0} points ?",
        "question": "What are the first names of all players , and their total ranking points ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "name dict": {
          "{COLUMN2}": "player_id",
          "{AGG0}": "SUM",
          "{VALUE4}": "2",
          "{TABLE1}": "rankings",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "ranking_points",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "players",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "show the {COLUMN0} of high schoolers who have {TABLE0} , and numbers of {TABLE0} for each .",
        "question": "Show the names of high schoolers who have likes , and numbers of likes for each .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "name dict": {
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "high schooler",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of high schoolers who have {TABLE0} , and how many {TABLE0} does each have ?",
        "question": "What are the names of high schoolers who have likes , and how many likes does each have ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "name dict": {
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "high schooler",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "show all {COLUMN0} and the number of {TABLE0} in each country .",
        "question": "Show all countries and the number of singers in each country .",
        "concise pattern": "GROUP BY",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "country",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "for each {COLUMN1} , how many {TABLE0} play there ?",
        "question": "For each stadium , how many concerts play there ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "stadium",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "stadium_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "concert"
        }
      },
      {
        "template": "what are the names , {COLUMN1} , and number of singers for each and every {COLUMN0} ?",
        "question": "What are the names , themes , and number of singers for each and every concert ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "name dict": {
          "{TABLE1}": "concert",
          "{COLUMN2}": "concert_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "concert_name",
          "{COLUMN1}": "theme",
          "{TABLE0}": "singer in concert",
          "{VALUE2}": "1",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE1} and number of concerts for each person ?",
        "question": "What are the names of the singers and number of concerts for each person ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "singer",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "singer_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "singer in concert"
        }
      },
      {
        "template": "find the maximum {COLUMN0} for each type of pet . list the maximum {COLUMN0} and pet type .",
        "question": "Find the maximum weight for each type of pet . List the maximum weight and pet type .",
        "concise pattern": "GROUP BY",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "name dict": {
          "{TABLE0}": "pets",
          "{COLUMN0}": "weight",
          "{AGG0}": "MAX",
          "{COLUMN1}": "pettype"
        }
      },
      {
        "template": "find the number of pets for each {TABLE0} who has any pet and {TABLE0} id .",
        "question": "Find the number of pets for each student who has any pet and student id .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "has pet",
          "{COLUMN0}": "stuid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "student"
        }
      },
      {
        "template": "for {TABLE0} who have pets , how many pets does each {TABLE0} have ?",
        "question": "For students who have pets , how many pets does each student have ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "has pet",
          "{COLUMN0}": "stuid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "student"
        }
      },
      {
        "template": "for each {COLUMN1} , list its id , name , and how many {TABLE1} it has ?",
        "question": "For each continent , list its id , name , and how many countries it has ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{TABLE1}": "countries",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "contid",
          "{COLUMN1}": "continent",
          "{TABLE0}": "continents",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "what is the full name of each car {COLUMN2} , along with its {COLUMN1} and how many models it produces ?",
        "question": "What is the full name of each car maker , along with its id and how many models it produces ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "name dict": {
          "{TABLE1}": "model list",
          "{COLUMN2}": "maker",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "fullname",
          "{COLUMN1}": "id",
          "{TABLE0}": "car makers",
          "{VALUE2}": "1",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "how many car makers are there in each {COLUMN0} ? list the {COLUMN0} name and the count .",
        "question": "How many car makers are there in each continents ? List the continent name and the count .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "name dict": {
          "{TABLE1}": "countries",
          "{COLUMN2}": "countryid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "contid",
          "{TABLE0}": "continents",
          "{VALUE2}": "2",
          "{COLUMN3}": "country",
          "{VALUE6}": "2",
          "{TABLE2}": "car makers",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "how many car models are produced by each {COLUMN2} ? list the count and the {COLUMN2} full name .",
        "question": "How many car models are produced by each maker ? List the count and the maker full name .",
        "concise pattern": "GROUP BY",
        "query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "maker",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "fullname",
          "{COLUMN1}": "id",
          "{TABLE0}": "model list",
          "{VALUE2}": "1",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "what is the average {COLUMN0} of cars each {COLUMN1} ?",
        "question": "What is the average weight of cars each year ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "name dict": {
          "{TABLE0}": "cars data",
          "{COLUMN0}": "weight",
          "{AGG0}": "AVG",
          "{COLUMN1}": "year"
        }
      },
      {
        "template": "what is the maximum {COLUMN0} for different number of {COLUMN1} ?",
        "question": "What is the maximum accelerate for different number of cylinders ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "name dict": {
          "{TABLE0}": "cars data",
          "{COLUMN0}": "accelerate",
          "{AGG0}": "MAX",
          "{COLUMN1}": "cylinders"
        }
      },
      {
        "template": "what is the maximum {COLUMN0} for all the different {COLUMN1} ?",
        "question": "What is the maximum accelerate for all the different cylinders ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "name dict": {
          "{TABLE0}": "cars data",
          "{COLUMN0}": "accelerate",
          "{AGG0}": "MAX",
          "{COLUMN1}": "cylinders"
        }
      },
      {
        "template": "find the number of {TABLE0} in each {COLUMN0} .",
        "question": "Find the number of shops in each location .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "name dict": {
          "{TABLE0}": "shop",
          "{COLUMN0}": "location",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there in each {COLUMN0} ?",
        "question": "How many shops are there in each location ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "name dict": {
          "{TABLE0}": "shop",
          "{COLUMN0}": "location",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are all different {COLUMN0} ids used for {TABLE0} , and how many times were each of them used ?",
        "question": "What are all different template ids used for documents , and how many times were each of them used ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "name dict": {
          "{TABLE0}": "documents",
          "{COLUMN0}": "template_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show all {COLUMN0} type codes and number of {TABLE0} for each .",
        "question": "Show all template type codes and number of templates for each .",
        "concise pattern": "GROUP BY",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "template_type_code",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what are the different {COLUMN0} type codes , and how many {TABLE0} correspond to each ?",
        "question": "What are the different template type codes , and how many templates correspond to each ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "name dict": {
          "{TABLE0}": "templates",
          "{COLUMN0}": "template_type_code",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show all {COLUMN1} type codes and the number of {TABLE1} using each type .",
        "question": "Show all template type codes and the number of documents using each type .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "documents",
          "{COLUMN0}": "template_type_code",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "template_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "what are the different {COLUMN1} type codes , and how many {TABLE1} use each type ?",
        "question": "What are the different template type codes , and how many documents use each type ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "documents",
          "{COLUMN0}": "template_type_code",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "template_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "what are the ids and names of each {COLUMN1} , as well as the number of {TABLE0} in each ?",
        "question": "What are the ids and names of each document , as well as the number of paragraphs in each ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{TABLE1}": "documents",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "document_id",
          "{COLUMN1}": "document_name",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "1",
          "{VALUE6}": "1",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "for each {COLUMN0} , how many {TABLE0} are there ?",
        "question": "For each hometown , how many teachers are there ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "name dict": {
          "{TABLE0}": "teacher",
          "{COLUMN0}": "hometown",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show {COLUMN0} of {TABLE1} and the number of courses they teach .",
        "question": "Show names of teachers and the number of courses they teach .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "teacher",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "teacher_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "course arrange"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE1} and how many courses do they teach ?",
        "question": "What are the names of the teachers and how many courses do they teach ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "teacher",
          "{COLUMN0}": "name",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "teacher_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "course arrange"
        }
      },
      {
        "template": "find the number of {TABLE0} for each {COLUMN0} .",
        "question": "find the number of players for each country .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "name dict": {
          "{TABLE0}": "players",
          "{COLUMN0}": "country_code",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are from each {COLUMN0} ?",
        "question": "How many players are from each country ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "name dict": {
          "{TABLE0}": "players",
          "{COLUMN0}": "country_code",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the total number of {COLUMN0} for each {COLUMN1} date .",
        "question": "Find the total number of tours for each ranking date .",
        "concise pattern": "GROUP BY",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "name dict": {
          "{TABLE0}": "rankings",
          "{COLUMN0}": "tours",
          "{AGG0}": "SUM",
          "{COLUMN1}": "ranking_date"
        }
      },
      {
        "template": "how many total {COLUMN0} were there for each {COLUMN1} date ?",
        "question": "How many total tours were there for each ranking date ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "name dict": {
          "{TABLE0}": "rankings",
          "{COLUMN0}": "tours",
          "{AGG0}": "SUM",
          "{COLUMN1}": "ranking_date"
        }
      },
      {
        "template": "find the number of {TABLE0} happened in each {COLUMN0} .",
        "question": "Find the number of matches happened in each year .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "year",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} were played in each {COLUMN0} ?",
        "question": "How many matches were played in each year ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "name dict": {
          "{TABLE0}": "matches",
          "{COLUMN0}": "year",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the number of {TABLE0} for each {COLUMN0} type .",
        "question": "Find the number of players for each hand type .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "name dict": {
          "{TABLE0}": "players",
          "{COLUMN0}": "hand",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there for each {COLUMN0} type ?",
        "question": "How many players are there for each hand type ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "name dict": {
          "{TABLE0}": "players",
          "{COLUMN0}": "hand",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "find the number of {TABLE0} {COLUMN0} by each of the listed directors .",
        "question": "Find the number of cartoons directed by each of the listed directors .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "name dict": {
          "{TABLE0}": "cartoon",
          "{COLUMN0}": "directed_by",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} are there of each {COLUMN0} ?",
        "question": "How many people are there of each nationality ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "name dict": {
          "{TABLE0}": "people",
          "{COLUMN0}": "nationality",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "what is the {COLUMN0} spoken by the largest {COLUMN2} of people in each country ?",
        "question": "What is the language spoken by the largest percentage of people in each country ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "name dict": {
          "{COLUMN0}": "language",
          "{COLUMN2}": "percentage",
          "{AGG0}": "MAX",
          "{COLUMN1}": "countrycode",
          "{TABLE0}": "countrylanguage"
        }
      },
      {
        "template": "what are the country codes of the different countries , and what are the {COLUMN0} spoken by the greatest {COLUMN2} of people for each ?",
        "question": "What are the country codes of the different countries , and what are the languages spoken by the greatest percentage of people for each ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "name dict": {
          "{COLUMN0}": "language",
          "{COLUMN2}": "percentage",
          "{AGG0}": "MAX",
          "{COLUMN1}": "countrycode",
          "{TABLE0}": "countrylanguage"
        }
      },
      {
        "template": "please show the different {COLUMN0} companies and the corresponding number of {COLUMN1} .",
        "question": "Please show the different record companies and the corresponding number of orchestras .",
        "concise pattern": "GROUP BY",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "name dict": {
          "{COLUMN0}": "record_company",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "how many {COLUMN1} does each {COLUMN0} company manage ?",
        "question": "How many orchestras does each record company manage ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "name dict": {
          "{COLUMN0}": "record_company",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "show the {COLUMN0} ids and numbers of {TABLE0} corresponding to each .",
        "question": "Show the student IDs and numbers of friends corresponding to each .",
        "concise pattern": "GROUP BY",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "name dict": {
          "{TABLE0}": "friend",
          "{COLUMN0}": "student_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} does each {COLUMN0} have ?",
        "question": "How many friends does each student have ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "name dict": {
          "{TABLE0}": "friend",
          "{COLUMN0}": "student_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show the {COLUMN0} of high school students and their corresponding number of {TABLE0} .",
        "question": "Show the names of high school students and their corresponding number of friends .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "name dict": {
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "high schooler",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of the high schoolers and how many {TABLE0} does each have ?",
        "question": "What are the names of the high schoolers and how many friends does each have ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "name dict": {
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "high schooler",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "count the number of {TABLE0} for each {COLUMN0} id .",
        "question": "Count the number of likes for each student id .",
        "concise pattern": "GROUP BY",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "name dict": {
          "{TABLE0}": "likes",
          "{COLUMN0}": "student_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} correspond to each {COLUMN0} id ?",
        "question": "How many likes correspond to each student id ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "name dict": {
          "{TABLE0}": "likes",
          "{COLUMN0}": "student_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "for each {COLUMN0} , how many {TABLE0} are from that country ?",
        "question": "For each citizenship , how many singers are from that country ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "citizenship",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "for each {COLUMN0} , what is the maximum {COLUMN1} worth ?",
        "question": "For each citizenship , what is the maximum net worth ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "citizenship",
          "{AGG0}": "MAX",
          "{COLUMN1}": "net_worth_millions"
        }
      },
      {
        "template": "show the {COLUMN1} type descriptions of {TABLE0} belonging to that code .",
        "question": "Show the property type descriptions of properties belonging to that code .",
        "concise pattern": "GROUP BY",
        "query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "reference property types",
          "{COLUMN0}": "property_type_description",
          "{COLUMN1}": "property_type_code",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE0}": "properties"
        }
      },
      {
        "template": "how many {TABLE0} are from each country ?",
        "question": "How many singers are from each country ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "country",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "list the maximum {COLUMN0} and type for each type of pet .",
        "question": "List the maximum weight and type for each type of pet .",
        "concise pattern": "GROUP BY",
        "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "name dict": {
          "{TABLE0}": "pets",
          "{COLUMN0}": "weight",
          "{AGG0}": "MAX",
          "{COLUMN1}": "pettype"
        }
      },
      {
        "template": "find the average and maximum age for each type of {COLUMN0} .",
        "question": "Find the average and maximum age for each type of pet .",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "name dict": {
          "{TABLE0}": "pets",
          "{AGG1}": "MAX",
          "{COLUMN0}": "pet_age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "pettype"
        }
      },
      {
        "template": "what is the average and maximum age for each {COLUMN0} type ?",
        "question": "What is the average and maximum age for each pet type ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "name dict": {
          "{TABLE0}": "pets",
          "{AGG1}": "MAX",
          "{COLUMN0}": "pet_age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "pettype"
        }
      },
      {
        "template": "find the average {COLUMN0} for each pet type .",
        "question": "Find the average weight for each pet type .",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "name dict": {
          "{TABLE0}": "pets",
          "{COLUMN0}": "weight",
          "{AGG0}": "AVG",
          "{COLUMN1}": "pettype"
        }
      },
      {
        "template": "what is the average {COLUMN0} for each type of pet ?",
        "question": "What is the average weight for each type of pet ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "name dict": {
          "{TABLE0}": "pets",
          "{COLUMN0}": "weight",
          "{AGG0}": "AVG",
          "{COLUMN1}": "pettype"
        }
      },
      {
        "template": "what is the name of each {COLUMN0} and how many car makers are there in each one ?",
        "question": "What is the name of each continent and how many car makers are there in each one ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "name dict": {
          "{TABLE1}": "countries",
          "{COLUMN2}": "countryid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "3",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "continent",
          "{COLUMN1}": "contid",
          "{TABLE0}": "continents",
          "{VALUE2}": "2",
          "{COLUMN3}": "country",
          "{VALUE6}": "2",
          "{TABLE2}": "car makers",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the number of {TABLE0} from each city ?",
        "question": "What is the number of employees from each city ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "name dict": {
          "{TABLE0}": "employee",
          "{COLUMN0}": "city",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} for each city .",
        "question": "Count the number of employees for each city .",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
        "name dict": {
          "{TABLE0}": "employee",
          "{COLUMN0}": "city",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "list each {COLUMN0} and the number of tv channels using it .",
        "question": "List each language and the number of TV Channels using it .",
        "concise pattern": "GROUP BY",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "name dict": {
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "for each {COLUMN0} , list the number of tv channels that use it .",
        "question": "For each language , list the number of TV Channels that use it .",
        "concise pattern": "GROUP BY",
        "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "name dict": {
          "{TABLE0}": "tv channel",
          "{COLUMN0}": "language",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many {TABLE0} did each director create ?",
        "question": "How many cartoons did each director create ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "name dict": {
          "{TABLE0}": "cartoon",
          "{COLUMN0}": "directed_by",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "show the number of high schoolers for each {COLUMN0} .",
        "question": "Show the number of high schoolers for each grade .",
        "concise pattern": "GROUP BY",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "grade",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "how many high schoolers are in each {COLUMN0} ?",
        "question": "How many high schoolers are in each grade ?",
        "concise pattern": "GROUP BY",
        "query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "name dict": {
          "{TABLE0}": "high schooler",
          "{COLUMN0}": "grade",
          "{AGG0}": "COUNT"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} ORDER BY {COLUMN0} {SC0} LIMIT {VALUE0}",
    [
      {
        "template": "what is the {COLUMN0} name , {COLUMN1} code , and {COLUMN2} date of the {COLUMN3} with the most {COLUMN4} rank points across all {TABLE1} ?",
        "question": "What is the first name , country code , and birth date of the player with the most winner rank points across all matches ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "name dict": {
          "{COLUMN5}": "winner_rank_points",
          "{COLUMN2}": "birth_date",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE1}": "matches",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "country_code",
          "{TABLE0}": "players",
          "{VALUE2}": "1",
          "{COLUMN3}": "player_id",
          "{COLUMN4}": "winner_id",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} name , {COLUMN1} code and {COLUMN2} date of the {COLUMN4} who has the highest rank points in all {TABLE1} .",
        "question": "Find the first name , country code and birth date of the winner who has the highest rank points in all matches .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "name dict": {
          "{COLUMN5}": "winner_rank_points",
          "{COLUMN2}": "birth_date",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{TABLE1}": "matches",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "country_code",
          "{TABLE0}": "players",
          "{VALUE2}": "1",
          "{COLUMN3}": "player_id",
          "{COLUMN4}": "winner_id",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what is the {COLUMN0} and {COLUMN1} for the {TABLE0} with highest {COLUMN2} attendance ?",
        "question": "What is the name and capacity for the stadium with highest average attendance ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "average",
          "{COLUMN1}": "capacity",
          "{TABLE0}": "stadium",
          "{COLUMN0}": "name",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} and {COLUMN1} for the {TABLE0} with the highest {COLUMN2} attendance ?",
        "question": "What is the name and capacity for the stadium with the highest average attendance ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "average",
          "{COLUMN1}": "capacity",
          "{TABLE0}": "stadium",
          "{COLUMN0}": "name",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "find the {COLUMN0} name and {COLUMN1} of the {TABLE0} whose {COLUMN2} of products is the largest .",
        "question": "Find the manager name and district of the shop whose number of products is the largest .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "number_products",
          "{COLUMN1}": "district",
          "{TABLE0}": "shop",
          "{COLUMN0}": "manager_name",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} name and {COLUMN1} of the {TABLE0} that sells the largest {COLUMN2} of products ?",
        "question": "What are the manager name and district of the shop that sells the largest number of products ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "number_products",
          "{COLUMN1}": "district",
          "{TABLE0}": "shop",
          "{COLUMN0}": "manager_name",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "which {COLUMN1} received the biggest {COLUMN2} ? give me the {COLUMN1} {COLUMN0} .",
        "question": "Which employee received the biggest bonus ? Give me the employee name .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "evaluation",
          "{COLUMN2}": "bonus",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "employee_id",
          "{TABLE0}": "employee",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "find the {COLUMN1} name and {COLUMN0} code of the {COLUMN2} who did the most number of {COLUMN3} .",
        "question": "Find the first name and country code of the player who did the most number of tours .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "rankings",
          "{COLUMN2}": "player_id",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "country_code",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "players",
          "{VALUE2}": "1",
          "{COLUMN3}": "tours",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN1} name and {COLUMN0} code of the {COLUMN2} with the most {COLUMN3} ?",
        "question": "What is the first name and country code of the player with the most tours ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "rankings",
          "{COLUMN2}": "player_id",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "country_code",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "players",
          "{VALUE2}": "1",
          "{COLUMN3}": "tours",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "who is the {COLUMN0} student to register ? list the {COLUMN0} name , {COLUMN1} name and {COLUMN2} name .",
        "question": "Who is the first student to register ? List the first name , middle name and last name .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "name dict": {
          "{SC0}": "ASC",
          "{COLUMN2}": "last_name",
          "{COLUMN1}": "middle_name",
          "{COLUMN3}": "date_first_registered",
          "{COLUMN0}": "first_name",
          "{VALUE0}": "1",
          "{TABLE0}": "students"
        }
      },
      {
        "template": "what is the {COLUMN0} , {COLUMN1} , and {COLUMN2} name of the {COLUMN0} student to register ?",
        "question": "What is the first , middle , and last name of the first student to register ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "name dict": {
          "{SC0}": "ASC",
          "{COLUMN2}": "last_name",
          "{COLUMN1}": "middle_name",
          "{COLUMN3}": "date_first_registered",
          "{COLUMN0}": "first_name",
          "{VALUE0}": "1",
          "{TABLE0}": "students"
        }
      },
      {
        "template": "find the number of {TABLE0} happened in the {COLUMN0} with the highest {COLUMN1} .",
        "question": "Find the number of concerts happened in the stadium with the highest capacity .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "stadium",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "stadium_id",
          "{COLUMN1}": "capacity",
          "{TABLE0}": "concert",
          "{VALUE2}": "1",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "what are the number of {TABLE0} that occurred in the {COLUMN0} with the largest {COLUMN1} ?",
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "stadium",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "stadium_id",
          "{COLUMN1}": "capacity",
          "{TABLE0}": "concert",
          "{VALUE2}": "1",
          "{VALUE3}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} of the {COLUMN1} who got the highest one time {COLUMN2} .",
        "question": "Find the name of the employee who got the highest one time bonus .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "evaluation",
          "{COLUMN2}": "bonus",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "employee_id",
          "{TABLE0}": "employee",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "find the {COLUMN0} and {COLUMN1} of the {COLUMN3} who bought the most tickets at once .",
        "question": "Find the name and age of the visitor who bought the most tickets at once .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "visit",
          "{COLUMN2}": "id",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age",
          "{TABLE0}": "customer",
          "{VALUE2}": "1",
          "{COLUMN3}": "visitor_id",
          "{COLUMN4}": "num_of_ticket",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "find the names of {COLUMN1} and {COLUMN0} who played in the match with greatest number of {COLUMN2} .",
        "question": "find the names of loser and winner who played in the match with greatest number of minutes .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "minutes",
          "{COLUMN1}": "loser_name",
          "{TABLE0}": "matches",
          "{COLUMN0}": "winner_name",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "who is the earliest graduate of the school ? list the {COLUMN0} name , {COLUMN1} name and {COLUMN2} name .",
        "question": "Who is the earliest graduate of the school ? List the first name , middle name and last name .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "name dict": {
          "{SC0}": "ASC",
          "{COLUMN2}": "last_name",
          "{COLUMN1}": "middle_name",
          "{COLUMN3}": "date_left",
          "{COLUMN0}": "first_name",
          "{VALUE0}": "1",
          "{TABLE0}": "students"
        }
      },
      {
        "template": "what is the {COLUMN0} , {COLUMN1} , and {COLUMN2} name of the earliest school graduate ?",
        "question": "What is the first , middle , and last name of the earliest school graduate ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "name dict": {
          "{SC0}": "ASC",
          "{COLUMN2}": "last_name",
          "{COLUMN1}": "middle_name",
          "{COLUMN3}": "date_left",
          "{COLUMN0}": "first_name",
          "{VALUE0}": "1",
          "{TABLE0}": "students"
        }
      },
      {
        "template": "what are {VALUE0} most highly {COLUMN1} {COLUMN0} in the tv series table and what were those ratings ?",
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "name dict": {
          "{COLUMN0}": "episode",
          "{SC0}": "DESC",
          "{VALUE0}": "3",
          "{COLUMN1}": "rating",
          "{TABLE0}": "tv series"
        }
      },
      {
        "template": "what are the {COLUMN1} , {COLUMN0} and leader of the {TABLE0} with the largest area ?",
        "question": "What are the population , name and leader of the country with the largest area ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "headofstate",
          "{COLUMN1}": "population",
          "{COLUMN3}": "surfacearea",
          "{COLUMN0}": "name",
          "{VALUE0}": "1",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "give the {COLUMN0} , {COLUMN1} , and head of state for the {TABLE0} that has the largest area .",
        "question": "Give the name , population , and head of state for the country that has the largest area .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "headofstate",
          "{COLUMN1}": "population",
          "{COLUMN3}": "surfacearea",
          "{COLUMN0}": "name",
          "{VALUE0}": "1",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "what are {COLUMN0} of countries with the top {VALUE0} largest {COLUMN1} ?",
        "question": "What are names of countries with the top 3 largest population ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "3",
          "{COLUMN1}": "population",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "return the {COLUMN0} of the {VALUE0} most {COLUMN1} countries .",
        "question": "Return the names of the 3 most populated countries .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "3",
          "{COLUMN1}": "population",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "what are the {COLUMN0} of the nations with the {VALUE0} lowest {COLUMN1} ?",
        "question": "What are the names of the nations with the 3 lowest populations ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "ASC",
          "{VALUE0}": "3",
          "{COLUMN1}": "population",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {TABLE0} with the largest {COLUMN1} worth ?",
        "question": "What is the name of the singer with the largest net worth ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "net_worth_millions",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "which {COLUMN0} of the car has the minimum {COLUMN3} ?",
        "question": "Which model of the car has the minimum horsepower ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "horsepower",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the car with the smallest amount of {COLUMN3} ?",
        "question": "What is the model of the car with the smallest amount of horsepower ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "horsepower",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the car with the largest {COLUMN1} ?",
        "question": "What is the horsepower of the car with the largest accelerate ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "name dict": {
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "horsepower",
          "{COLUMN1}": "accelerate",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{VALUE3}": "1",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the car with the greatest {COLUMN1} ?",
        "question": "What is the horsepower of the car with the greatest accelerate ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "name dict": {
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "horsepower",
          "{COLUMN1}": "accelerate",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{VALUE3}": "1",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the youngest {TABLE0} ?",
        "question": "What is the hometown of the youngest teacher ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "hometown",
          "{SC0}": "ASC",
          "{VALUE0}": "1",
          "{COLUMN1}": "age",
          "{TABLE0}": "teacher"
        }
      },
      {
        "template": "find the id and {COLUMN1} of the {COLUMN0} that has the most staff members ?",
        "question": "Find the id and name of the museum that has the most staff members ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "num_of_staff",
          "{COLUMN1}": "name",
          "{TABLE0}": "museum",
          "{COLUMN0}": "museum_id",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what are the names of the {COLUMN0} and {COLUMN1} who played in the longest match ?",
        "question": "What are the names of the winner and loser who played in the longest match ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "minutes",
          "{COLUMN1}": "loser_name",
          "{TABLE0}": "matches",
          "{COLUMN0}": "winner_name",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "list top {VALUE0} highest rating tv series . list the tv series 's {COLUMN0} and rating .",
        "question": "List top 3 highest Rating TV series . List the TV series 's Episode and Rating .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "name dict": {
          "{COLUMN0}": "episode",
          "{SC0}": "DESC",
          "{VALUE0}": "3",
          "{COLUMN1}": "rating",
          "{TABLE0}": "tv series"
        }
      },
      {
        "template": "what is the {COLUMN0} rank of the poker player with the highest {COLUMN1} ?",
        "question": "What is the money rank of the poker player with the highest earnings ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "money_rank",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "earnings",
          "{TABLE0}": "poker player"
        }
      },
      {
        "template": "return the {COLUMN0} rank of the player with the greatest {COLUMN1} .",
        "question": "Return the money rank of the player with the greatest earnings .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "money_rank",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "earnings",
          "{TABLE0}": "poker player"
        }
      },
      {
        "template": "what is the {COLUMN0} date of the poker player with the lowest {COLUMN2} ?",
        "question": "What is the birth date of the poker player with the lowest earnings ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "earnings",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "birth_date",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "return the {COLUMN0} date of the poker player with the lowest {COLUMN2} .",
        "question": "Return the birth date of the poker player with the lowest earnings .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "earnings",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "birth_date",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "return the {COLUMN0} rank of the poker player with the greatest {COLUMN2} .",
        "question": "Return the money rank of the poker player with the greatest height .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "height",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "money_rank",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} and areas of countries with the top {VALUE0} largest area ?",
        "question": "What are the names and areas of countries with the top 5 largest area ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "5",
          "{COLUMN1}": "surfacearea",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "return the {COLUMN0} and surface areas of the {VALUE0} largest countries .",
        "question": "Return the names and surface areas of the 5 largest countries .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "5",
          "{COLUMN1}": "surfacearea",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "return the {COLUMN0} of the {VALUE0} countries with the fewest people .",
        "question": "Return the names of the 3 countries with the fewest people .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "ASC",
          "{VALUE0}": "3",
          "{COLUMN1}": "population",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "list the {COLUMN0} of the {TABLE0} with the most years of work .",
        "question": "List the name of the conductor with the most years of work .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "year_of_work",
          "{TABLE0}": "conductor"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {TABLE0} who has worked the greatest number of years ?",
        "question": "What is the name of the conductor who has worked the greatest number of years ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "year_of_work",
          "{TABLE0}": "conductor"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {TABLE0} who is worth the most ?",
        "question": "What is the name of the singer who is worth the most ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "net_worth_millions",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "which {COLUMN0} saves the most gasoline ? that is to say , have the maximum miles per gallon .",
        "question": "Which model saves the most gasoline ? That is to say , have the maximum miles per gallon .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "mpg",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the car wmodel with the highest {COLUMN3} ?",
        "question": "What is the car wmodel with the highest mpg ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "mpg",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "where is the youngest {TABLE0} from ?",
        "question": "Where is the youngest teacher from ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "hometown",
          "{SC0}": "ASC",
          "{VALUE0}": "1",
          "{COLUMN1}": "age",
          "{TABLE0}": "teacher"
        }
      },
      {
        "template": "when is the first {COLUMN0} released ? list the date and details .",
        "question": "When is the first transcript released ? List the date and details .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "transcript_date",
          "{SC0}": "ASC",
          "{VALUE0}": "1",
          "{COLUMN1}": "other_details",
          "{TABLE0}": "transcripts"
        }
      },
      {
        "template": "what is the earliest date of a {COLUMN0} release , and what details can you tell me ?",
        "question": "What is the earliest date of a transcript release , and what details can you tell me ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "transcript_date",
          "{SC0}": "ASC",
          "{VALUE0}": "1",
          "{COLUMN1}": "other_details",
          "{TABLE0}": "transcripts"
        }
      },
      {
        "template": "what is the last {COLUMN0} release date ?",
        "question": "What is the last transcript release date ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "transcript_date",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{TABLE0}": "transcripts"
        }
      },
      {
        "template": "when was the last {COLUMN0} released ?",
        "question": "When was the last transcript released ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "transcript_date",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{TABLE0}": "transcripts"
        }
      },
      {
        "template": "what is the {COLUMN0} rank of the tallest poker player ?",
        "question": "What is the money rank of the tallest poker player ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "poker player",
          "{COLUMN2}": "height",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "money_rank",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "how much does the most recent treatment {COLUMN0} ?",
        "question": "How much does the most recent treatment cost ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "cost_of_treatment",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "date_of_treatment",
          "{TABLE0}": "treatments"
        }
      },
      {
        "template": "show me the {COLUMN0} of the most recently performed treatment .",
        "question": "Show me the cost of the most recently performed treatment .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "name dict": {
          "{COLUMN0}": "cost_of_treatment",
          "{SC0}": "DESC",
          "{VALUE0}": "1",
          "{COLUMN1}": "date_of_treatment",
          "{TABLE0}": "treatments"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} HAVING {AGG0} ( * ) {OP0} {VALUE0}",
    [
      {
        "template": "find the {COLUMN0} , {COLUMN1} and {COLUMN2} for {TABLE1} who {TABLE1} some museums more than once .",
        "question": "find the id , name and age for visitors who visited some museums more than once .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
        "name dict": {
          "{TABLE1}": "visit",
          "{COLUMN2}": "age",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "id",
          "{COLUMN1}": "name",
          "{TABLE0}": "customer",
          "{VALUE2}": "1",
          "{COLUMN3}": "visitor_id",
          "{OP0}": ">",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} , {COLUMN1} , and {COLUMN2} names , along with the ids , of all {TABLE0} who enrolled in {VALUE5} degree programs in one semester ?",
        "question": "What are the first , middle , and last names , along with the ids , of all students who enrolled in 2 degree programs in one semester ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{COLUMN2}": "last_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "middle_name",
          "{TABLE0}": "students",
          "{VALUE2}": "1",
          "{COLUMN3}": "student_id",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "return the {TABLE0} {COLUMN1} and the numbers of {COLUMN0} spoken for each {TABLE0} that speaks at least 3 {COLUMN0} .",
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "code",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{AGG1}": "COUNT",
          "{VALUE1}": "1",
          "{COLUMN0}": "language",
          "{COLUMN1}": "name",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "countrycode",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {TABLE0} have done at least two {TABLE1} ? list the {COLUMN0} 's id , {COLUMN1} , and {COLUMN2} name .",
        "question": "Which professionals have done at least two treatments ? List the professional 's id , role , and first name .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "first_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "role_code",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "who are enrolled in {VALUE5} degree programs in one semester ? list the {COLUMN0} name , {COLUMN1} name and {COLUMN2} name and the id .",
        "question": "Who are enrolled in 2 degree programs in one semester ? List the first name , middle name and last name and the id .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{COLUMN2}": "last_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "middle_name",
          "{TABLE0}": "students",
          "{VALUE2}": "1",
          "{COLUMN3}": "student_id",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN1} of countries that speak more than {VALUE0} {COLUMN0} , as well as how many {COLUMN0} they speak ?",
        "question": "What are the names of countries that speak more than 2 languages , as well as how many languages they speak ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "code",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{AGG1}": "COUNT",
          "{VALUE1}": "1",
          "{COLUMN0}": "language",
          "{COLUMN1}": "name",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "countrycode",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the id , {COLUMN1} , and {COLUMN2} name of the {TABLE0} who have performed two or more {TABLE1} ?",
        "question": "What are the id , role , and first name of the professionals who have performed two or more treatments ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "first_name",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "role_code",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {TABLE0} have done at least two types of {TABLE1} ? list the {COLUMN0} id and {COLUMN1} phone .",
        "question": "Which professionals have done at least two types of treatments ? List the professional id and cell phone .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "treatments",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "cell_number",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN2} designed more than {VALUE7} car models ? list full name and the {COLUMN1} .",
        "question": "Which makers designed more than 3 car models ? List full name and the id .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "name dict": {
          "{TABLE1}": "model list",
          "{COLUMN2}": "maker",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "fullname",
          "{COLUMN1}": "id",
          "{TABLE0}": "car makers",
          "{VALUE2}": "1",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what are the names and {COLUMN1} of all {COLUMN2} with more than {VALUE7} models ?",
        "question": "What are the names and ids of all makers with more than 3 models ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "name dict": {
          "{TABLE1}": "model list",
          "{COLUMN2}": "maker",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "fullname",
          "{COLUMN1}": "id",
          "{TABLE0}": "car makers",
          "{VALUE2}": "1",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "find all {COLUMN0} that have at least {VALUE6} {TABLE1} .",
        "question": "Find all airlines that have at least 10 flights .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "flights",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "10",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "which {COLUMN0} have at least {VALUE6} {TABLE1} ?",
        "question": "Which airlines have at least 10 flights ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "flights",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "10",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "find all {COLUMN0} that have fewer than {VALUE6} {TABLE1} .",
        "question": "Find all airlines that have fewer than 200 flights .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "flights",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "2",
          "{OP0}": "<",
          "{VALUE6}": "200",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "which {COLUMN0} have less than {VALUE6} {TABLE1} ?",
        "question": "Which airlines have less than 200 flights ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "flights",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "2",
          "{OP0}": "<",
          "{VALUE6}": "200",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the codes of {COLUMN0} types that have fewer than {VALUE0} {TABLE0} ?",
        "question": "What are the codes of template types that have fewer than 3 templates ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "name dict": {
          "{COLUMN0}": "template_type_code",
          "{OP0}": "<",
          "{VALUE0}": "3",
          "{AGG0}": "COUNT",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "find the name of {COLUMN0} that has more than {VALUE0} {TABLE0} .",
        "question": "Find the name of tourney that has more than 10 matches .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "name dict": {
          "{COLUMN0}": "tourney_name",
          "{OP0}": ">",
          "{VALUE0}": "10",
          "{AGG0}": "COUNT",
          "{TABLE0}": "matches"
        }
      },
      {
        "template": "what are the names and id of {TABLE0} having at most {VALUE5} {TABLE1} ?",
        "question": "What are the names and id of courses having at most 2 sections ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "name dict": {
          "{TABLE1}": "sections",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "course_name",
          "{COLUMN1}": "course_id",
          "{TABLE0}": "courses",
          "{VALUE2}": "1",
          "{OP0}": "<=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the names and ids of every {COLUMN1} with less than {VALUE5} {TABLE1} ?",
        "question": "What are the names and ids of every course with less than 2 sections ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "name dict": {
          "{TABLE1}": "sections",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "course_name",
          "{COLUMN1}": "course_id",
          "{TABLE0}": "courses",
          "{VALUE2}": "1",
          "{OP0}": "<=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN1} numbers and names of the {TABLE0} who had at least two {TABLE1} ?",
        "question": "What are the contestant numbers and names of the contestants who had at least two votes ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "votes",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "contestant_number",
          "{COLUMN1}": "contestant_name",
          "{TABLE0}": "contestants",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "show the {COLUMN0} of {TABLE0} that have conducted more than one {COLUMN1} .",
        "question": "Show the names of conductors that have conducted more than one orchestras .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "name dict": {
          "{COLUMN2}": "conductor_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{TABLE0}": "conductor",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} who have conducted at more than one {COLUMN1} ?",
        "question": "What are the names of conductors who have conducted at more than one orchestra ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "name dict": {
          "{COLUMN2}": "conductor_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "orchestra",
          "{TABLE0}": "conductor",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "show the {COLUMN0} of high schoolers who have at least {VALUE6} {TABLE0} .",
        "question": "Show the names of high schoolers who have at least 3 friends .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{OP0}": ">=",
          "{VALUE6}": "3"
        }
      },
      {
        "template": "what are the {COLUMN0} of high schoolers who have {VALUE6} or more {TABLE0} ?",
        "question": "What are the names of high schoolers who have 3 or more friends ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{OP0}": ">=",
          "{VALUE6}": "3"
        }
      },
      {
        "template": "show the {COLUMN0} of students who have at least {VALUE4} {TABLE0} .",
        "question": "Show the names of students who have at least 2 likes .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{OP0}": ">=",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of students who have {VALUE4} or more {TABLE0} ?",
        "question": "What are the names of students who have 2 or more likes ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "likes",
          "{VALUE2}": "2",
          "{OP0}": ">=",
          "{VALUE6}": "2"
        }
      },
      {
        "template": "find the id and {COLUMN1} phone of the {TABLE0} who operate two or more types of {TABLE1} .",
        "question": "Find the id and cell phone of the professionals who operate two or more types of treatments .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "treatments",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "cell_number",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "show the {COLUMN0} of {TABLE0} that have more than one {TABLE1} .",
        "question": "Show the names of singers that have more than one song .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "song",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE0}": "singer",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} that have more than one {TABLE1} ?",
        "question": "What are the names of the singers that have more than one songs ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "song",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE0}": "singer",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "show all {COLUMN0} type codes with less than three {TABLE0} .",
        "question": "Show all template type codes with less than three templates .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "name dict": {
          "{COLUMN0}": "template_type_code",
          "{OP0}": "<",
          "{VALUE0}": "3",
          "{AGG0}": "COUNT",
          "{TABLE0}": "templates"
        }
      },
      {
        "template": "list all {COLUMN0} ids with at least two {TABLE0} .",
        "question": "List all document ids with at least two paragraphs .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "name dict": {
          "{COLUMN0}": "document_id",
          "{OP0}": ">=",
          "{VALUE0}": "2",
          "{AGG0}": "COUNT",
          "{TABLE0}": "paragraphs"
        }
      },
      {
        "template": "what are the ids of documents that have {VALUE0} or more {TABLE0} ?",
        "question": "What are the ids of documents that have 2 or more paragraphs ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "name dict": {
          "{COLUMN0}": "document_id",
          "{OP0}": ">=",
          "{VALUE0}": "2",
          "{AGG0}": "COUNT",
          "{TABLE0}": "paragraphs"
        }
      },
      {
        "template": "show the {COLUMN0} shared by at least two {TABLE0} .",
        "question": "Show the hometowns shared by at least two teachers .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "name dict": {
          "{COLUMN0}": "hometown",
          "{OP0}": ">=",
          "{VALUE0}": "2",
          "{AGG0}": "COUNT",
          "{TABLE0}": "teacher"
        }
      },
      {
        "template": "show {COLUMN0} of {TABLE1} that teach at least two courses .",
        "question": "Show names of teachers that teach at least two courses .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "teacher",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "teacher_id",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "2",
          "{OP0}": ">=",
          "{VALUE6}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE1} who teach at least two courses ?",
        "question": "What are the names of the teachers who teach at least two courses ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "name dict": {
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "teacher",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "teacher_id",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "2",
          "{OP0}": ">=",
          "{VALUE6}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what are the names of tournaments that have more than {VALUE0} {TABLE0} ?",
        "question": "What are the names of tournaments that have more than 10 matches ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "name dict": {
          "{COLUMN0}": "tourney_name",
          "{OP0}": ">",
          "{VALUE0}": "10",
          "{AGG0}": "COUNT",
          "{TABLE0}": "matches"
        }
      },
      {
        "template": "find the codes of countries that have more than {VALUE0} {TABLE0} .",
        "question": "Find the codes of countries that have more than 50 players .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "name dict": {
          "{COLUMN0}": "country_code",
          "{OP0}": ">",
          "{VALUE0}": "50",
          "{AGG0}": "COUNT",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "what are the codes of countries with more than {VALUE0} {TABLE0} ?",
        "question": "What are the codes of countries with more than 50 players ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "name dict": {
          "{COLUMN0}": "country_code",
          "{OP0}": ">",
          "{VALUE0}": "50",
          "{AGG0}": "COUNT",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "show the date and id of the {COLUMN1} with at least {VALUE0} course results .",
        "question": "Show the date and id of the transcript with at least 2 course results .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "transcripts",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "transcript_date",
          "{COLUMN1}": "transcript_id",
          "{TABLE0}": "transcript contents",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what is the date and id of the {COLUMN1} with at least {VALUE0} courses listed ?",
        "question": "What is the date and id of the transcript with at least 2 courses listed ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "transcripts",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "transcript_date",
          "{COLUMN1}": "transcript_id",
          "{TABLE0}": "transcript contents",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find {COLUMN0} of the tv channels that from the {COLUMN1} where have more than two tv channels .",
        "question": "find id of the tv channels that from the countries where have more than two tv channels .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "name dict": {
          "{COLUMN0}": "id",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "country",
          "{TABLE0}": "tv channel",
          "{OP0}": ">",
          "{VALUE0}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of all tv channels that have more than {VALUE0} tv channels ?",
        "question": "What are the ids of all tv channels that have more than 2 TV channels ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "name dict": {
          "{COLUMN0}": "id",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "country",
          "{TABLE0}": "tv channel",
          "{OP0}": ">",
          "{VALUE0}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} that are shared by at least two {TABLE0} ?",
        "question": "What are the nationalities that are shared by at least two people ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "name dict": {
          "{COLUMN0}": "nationality",
          "{OP0}": ">=",
          "{VALUE0}": "2",
          "{AGG0}": "COUNT",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "return the {COLUMN0} for which there are two or more {TABLE0} .",
        "question": "Return the nationalities for which there are two or more people .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "name dict": {
          "{COLUMN0}": "nationality",
          "{OP0}": ">=",
          "{VALUE0}": "2",
          "{AGG0}": "COUNT",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "show the years in which {COLUMN1} that have given more than one {TABLE0} are founded .",
        "question": "Show the years in which orchestras that have given more than one performance are founded .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "name dict": {
          "{COLUMN2}": "orchestra_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "2",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "year_of_founded",
          "{COLUMN1}": "orchestra",
          "{TABLE0}": "performance",
          "{VALUE2}": "1",
          "{OP0}": ">"
        }
      },
      {
        "template": "what are years of founding for {COLUMN1} that have had more than a single {TABLE0} ?",
        "question": "What are years of founding for orchestras that have had more than a single performance ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "name dict": {
          "{COLUMN2}": "orchestra_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "2",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "year_of_founded",
          "{COLUMN1}": "orchestra",
          "{TABLE0}": "performance",
          "{VALUE2}": "1",
          "{OP0}": ">"
        }
      },
      {
        "template": "show me all {COLUMN0} that have at least {VALUE0} students .",
        "question": "Show me all grades that have at least 4 students .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "name dict": {
          "{COLUMN0}": "grade",
          "{OP0}": ">=",
          "{VALUE0}": "4",
          "{AGG0}": "COUNT",
          "{TABLE0}": "high schooler"
        }
      },
      {
        "template": "which {COLUMN0} have {VALUE0} or more high schoolers ?",
        "question": "Which grades have 4 or more high schoolers ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "name dict": {
          "{COLUMN0}": "grade",
          "{OP0}": ">=",
          "{VALUE0}": "4",
          "{AGG0}": "COUNT",
          "{TABLE0}": "high schooler"
        }
      },
      {
        "template": "find the first name and gender of {TABLE0} who have more than one pet .",
        "question": "Find the first name and gender of student who have more than one pet .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "name dict": {
          "{TABLE1}": "has pet",
          "{COLUMN2}": "stuid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "fname",
          "{COLUMN1}": "sex",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the first name and gender of the all the {TABLE0} who have more than one pet ?",
        "question": "What is the first name and gender of the all the students who have more than one pet ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "name dict": {
          "{TABLE1}": "has pet",
          "{COLUMN2}": "stuid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "fname",
          "{COLUMN1}": "sex",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{OP0}": ">",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the {COLUMN2} having at least one car maker ? list name and id .",
        "question": "What are the countries having at least one car maker ? List name and id .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "country",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "countryname",
          "{COLUMN1}": "countryid",
          "{TABLE0}": "countries",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the names and ids of all {COLUMN2} with at least one car maker ?",
        "question": "What are the names and ids of all countries with at least one car maker ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "name dict": {
          "{TABLE1}": "car makers",
          "{COLUMN2}": "country",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "countryname",
          "{COLUMN1}": "countryid",
          "{TABLE0}": "countries",
          "{VALUE2}": "1",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} ids of any templates used in more than a single document ?",
        "question": "What are the template ids of any templates used in more than a single document ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "name dict": {
          "{COLUMN0}": "template_id",
          "{OP0}": ">",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "documents"
        }
      },
      {
        "template": "what are the towns from which at least two {TABLE0} come from ?",
        "question": "What are the towns from which at least two teachers come from ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "name dict": {
          "{COLUMN0}": "hometown",
          "{OP0}": ">=",
          "{VALUE0}": "2",
          "{AGG0}": "COUNT",
          "{TABLE0}": "teacher"
        }
      },
      {
        "template": "show ids for all templates that are used by more than one document .",
        "question": "Show ids for all templates that are used by more than one document .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "name dict": {
          "{COLUMN0}": "template_id",
          "{OP0}": ">",
          "{VALUE0}": "1",
          "{AGG0}": "COUNT",
          "{TABLE0}": "documents"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} {OP1} {VALUE1}",
    [
      {
        "template": "what are the distinct {TABLE0} {COLUMN0} which are between {COLUMN1} commander '{VALUE0} ' and {COLUMN2} commander '{VALUE1} ' ?",
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan ' and latin commander 'Baldwin I ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
        "name dict": {
          "{VALUE1}": "'Baldwin I'",
          "{COLUMN2}": "latin_commander",
          "{COLUMN0}": "name",
          "{COLUMN1}": "bulgarian_commander",
          "{TABLE0}": "battle",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Kaloyan'",
          "{OP1}": "="
        }
      },
      {
        "template": "find the number of {VALUE1} {TABLE2} that are raised by female {TABLE0} ( with {COLUMN2} {VALUE0} ) .",
        "question": "Find the number of dog pets that are raised by female students ( with sex F ) .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "name dict": {
          "{COLUMN2}": "sex",
          "{AGG0}": "COUNT",
          "{TABLE1}": "has pet",
          "{VALUE3}": "2",
          "{VALUE1}": "'dog'",
          "{VALUE10}": "0",
          "{COLUMN1}": "petid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "2",
          "{VALUE0}": "'F'",
          "{VALUE9}": "1",
          "{COLUMN0}": "stuid",
          "{VALUE2}": "1",
          "{COLUMN3}": "pettype",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of the countries that are in the {COLUMN1} of {VALUE0} and have a {COLUMN2} of {VALUE1} ?",
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "name dict": {
          "{VALUE1}": "\"80000\"",
          "{COLUMN2}": "population",
          "{COLUMN0}": "name",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Europe\"",
          "{OP1}": "="
        }
      },
      {
        "template": "what are the different {COLUMN0} in which there were cars produced that weighed less than {VALUE5} and also cars that {COLUMN1} more than {VALUE3} ?",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;",
        "name dict": {
          "{VALUE1}": "1",
          "{COLUMN0}": "year",
          "{OP1}": "<",
          "{COLUMN1}": "weight",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "4000",
          "{VALUE3}": "3000",
          "{TABLE0}": "cars data",
          "{OP0}": ">"
        }
      },
      {
        "template": "what is the phone number of the man with the {COLUMN1} name {VALUE0} and the {COLUMN2} name {VALUE1} ?",
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward ?",
        "concise pattern": "WHERE",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "name dict": {
          "{VALUE1}": "'Ward'",
          "{COLUMN2}": "last_name",
          "{COLUMN0}": "cell_mobile_number",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "students",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Timmothy'",
          "{OP1}": "="
        }
      },
      {
        "template": "give the {COLUMN0} of countries that are in {VALUE0} and have a {COLUMN2} equal to {VALUE1} .",
        "question": "Give the names of countries that are in Europe and have a population equal to 80000 .",
        "concise pattern": "WHERE",
        "query": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "name dict": {
          "{VALUE1}": "\"80000\"",
          "{COLUMN2}": "population",
          "{COLUMN0}": "name",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Europe\"",
          "{OP1}": "="
        }
      },
      {
        "template": "what is the total {COLUMN0} and average area of countries in the {COLUMN2} of {VALUE0} whose area is bigger than {VALUE2}\uff1f",
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000\uff1f",
        "concise pattern": "WHERE",
        "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "AVG",
          "{AGG0}": "SUM",
          "{COLUMN2}": "continent",
          "{OP1}": ">",
          "{COLUMN1}": "surfacearea",
          "{TABLE0}": "country",
          "{VALUE2}": "3000",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"North America\""
        }
      },
      {
        "template": "how many {VALUE1} {TABLE2} are raised by female {TABLE0} ?",
        "question": "How many dog pets are raised by female students ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "name dict": {
          "{COLUMN2}": "sex",
          "{AGG0}": "COUNT",
          "{TABLE1}": "has pet",
          "{VALUE3}": "2",
          "{VALUE1}": "'dog'",
          "{VALUE10}": "0",
          "{COLUMN1}": "petid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "2",
          "{VALUE0}": "'F'",
          "{VALUE9}": "1",
          "{COLUMN0}": "stuid",
          "{VALUE2}": "1",
          "{COLUMN3}": "pettype",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the last name of the {TABLE0} who has a {VALUE0} that is age {VALUE9} .",
        "question": "Find the last name of the student who has a cat that is age 3 .",
        "concise pattern": "WHERE",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "name dict": {
          "{COLUMN2}": "petid",
          "{TABLE1}": "has pet",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "stuid",
          "{VALUE12}": "0",
          "{COLUMN4}": "pettype",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "student",
          "{VALUE5}": "2",
          "{VALUE0}": "'cat'",
          "{VALUE9}": "3",
          "{COLUMN0}": "lname",
          "{VALUE2}": "1",
          "{COLUMN3}": "pet_age",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the last name of the {TABLE0} who has a {VALUE0} that is {VALUE9} years old ?",
        "question": "What is the last name of the student who has a cat that is 3 years old ?",
        "concise pattern": "WHERE",
        "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "name dict": {
          "{COLUMN2}": "petid",
          "{TABLE1}": "has pet",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "stuid",
          "{VALUE12}": "0",
          "{COLUMN4}": "pettype",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "student",
          "{VALUE5}": "2",
          "{VALUE0}": "'cat'",
          "{VALUE9}": "3",
          "{COLUMN0}": "lname",
          "{VALUE2}": "1",
          "{COLUMN3}": "pet_age",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "in which {COLUMN0} cars were produced weighing no less than {VALUE3} and no more than {VALUE5} ?",
        "question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;",
        "name dict": {
          "{VALUE1}": "1",
          "{COLUMN0}": "year",
          "{OP1}": "<",
          "{COLUMN1}": "weight",
          "{VALUE4}": "1",
          "{VALUE2}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "4000",
          "{VALUE3}": "3000",
          "{TABLE0}": "cars data",
          "{OP0}": ">"
        }
      },
      {
        "template": "which {COLUMN0} are lighter than {VALUE13} but not built by the '{VALUE0} ' ?",
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "name dict": {
          "{COLUMN5}": "fullname",
          "{COLUMN2}": "id",
          "{TABLE1}": "car names",
          "{VALUE15}": "0",
          "{VALUE13}": "3500",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{COLUMN1}": "makeid",
          "{VALUE12}": "3",
          "{COLUMN4}": "weight",
          "{OP0}": "<",
          "{TABLE2}": "cars data",
          "{OP1}": "!=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "model list",
          "{TABLE3}": "car makers",
          "{VALUE5}": "2",
          "{VALUE0}": "'Ford Motor Company'",
          "{VALUE9}": "4",
          "{COLUMN0}": "model",
          "{VALUE14}": "4",
          "{VALUE2}": "1",
          "{COLUMN3}": "maker",
          "{VALUE11}": "4",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the different {COLUMN0} wthat are lighter than {VALUE13} but were not built by the {VALUE0} ?",
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "name dict": {
          "{COLUMN5}": "fullname",
          "{COLUMN2}": "id",
          "{TABLE1}": "car names",
          "{VALUE15}": "0",
          "{VALUE13}": "3500",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{COLUMN1}": "makeid",
          "{VALUE12}": "3",
          "{COLUMN4}": "weight",
          "{OP0}": "<",
          "{TABLE2}": "cars data",
          "{OP1}": "!=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "model list",
          "{TABLE3}": "car makers",
          "{VALUE5}": "2",
          "{VALUE0}": "'Ford Motor Company'",
          "{VALUE9}": "4",
          "{COLUMN0}": "model",
          "{VALUE14}": "4",
          "{VALUE2}": "1",
          "{COLUMN3}": "maker",
          "{VALUE11}": "4",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "how many {TABLE0} depart from city '{VALUE1} ' and have destination city '{VALUE0} ' ?",
        "question": "How many flights depart from City 'Aberdeen ' and have destination City 'Ashley ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "name dict": {
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{TABLE1}": "airports",
          "{VALUE3}": "2",
          "{VALUE1}": "\"Aberdeen\"",
          "{VALUE10}": "0",
          "{COLUMN1}": "airportcode",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "flights",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Ashley\"",
          "{VALUE9}": "2",
          "{COLUMN0}": "destairport",
          "{VALUE2}": "1",
          "{COLUMN3}": "city",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "how many {TABLE0} fly from {VALUE1} to {VALUE0} ?",
        "question": "How many flights fly from Aberdeen to Ashley ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "name dict": {
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{TABLE1}": "airports",
          "{VALUE3}": "2",
          "{VALUE1}": "\"Aberdeen\"",
          "{VALUE10}": "0",
          "{COLUMN1}": "airportcode",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "flights",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Ashley\"",
          "{VALUE9}": "2",
          "{COLUMN0}": "destairport",
          "{VALUE2}": "1",
          "{COLUMN3}": "city",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "how many '{VALUE0} ' {TABLE1} go to airport '{VALUE1} ' ?",
        "question": "How many 'United Airlines ' flights go to Airport 'ASY ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "destairport",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "\"United Airlines\"",
          "{VALUE5}": "1",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "\"ASY\"",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "count the number of {VALUE0} {TABLE1} arriving in {VALUE1} airport .",
        "question": "Count the number of United Airlines flights arriving in ASY Airport .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "destairport",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "\"United Airlines\"",
          "{VALUE5}": "1",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "\"ASY\"",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many '{VALUE0} ' {TABLE1} depart from airport '{VALUE1} ' ?",
        "question": "How many 'United Airlines ' flights depart from Airport 'AHD ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "\"United Airlines\"",
          "{VALUE5}": "1",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "\"AHD\"",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "return the number of {VALUE0} {TABLE1} leaving from {VALUE1} airport .",
        "question": "Return the number of United Airlines flights leaving from AHD Airport .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "\"United Airlines\"",
          "{VALUE5}": "1",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "\"AHD\"",
          "{COLUMN0}": "airline",
          "{COLUMN1}": "uid",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many {VALUE1} {TABLE0} go to city '{VALUE0} ' ?",
        "question": "How many United Airlines flights go to City 'Aberdeen ' ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "name dict": {
          "{COLUMN2}": "uid",
          "{AGG0}": "COUNT",
          "{TABLE1}": "airports",
          "{VALUE3}": "2",
          "{VALUE1}": "\"United Airlines\"",
          "{VALUE10}": "0",
          "{COLUMN1}": "airportcode",
          "{VALUE12}": "1",
          "{COLUMN4}": "city",
          "{OP0}": "=",
          "{TABLE2}": "airlines",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{TABLE0}": "flights",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE9}": "2",
          "{COLUMN0}": "destairport",
          "{VALUE2}": "1",
          "{COLUMN3}": "airline",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "count the number of {VALUE1} {TABLE0} that arrive in {VALUE0} .",
        "question": "Count the number of United Airlines flights that arrive in Aberdeen .",
        "concise pattern": "WHERE",
        "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "name dict": {
          "{COLUMN2}": "uid",
          "{AGG0}": "COUNT",
          "{TABLE1}": "airports",
          "{VALUE3}": "2",
          "{VALUE1}": "\"United Airlines\"",
          "{VALUE10}": "0",
          "{COLUMN1}": "airportcode",
          "{VALUE12}": "1",
          "{COLUMN4}": "city",
          "{OP0}": "=",
          "{TABLE2}": "airlines",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{TABLE0}": "flights",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE9}": "2",
          "{COLUMN0}": "destairport",
          "{VALUE2}": "1",
          "{COLUMN3}": "airline",
          "{VALUE11}": "3",
          "{VALUE6}": "3",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the official {COLUMN0} spoken in the {TABLE0} whose head of state is {VALUE0} ?",
        "question": "What is the official language spoken in the country whose head of state is Beatrix ?",
        "concise pattern": "WHERE",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "\"Beatrix\"",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "\"T\"",
          "{VALUE10}": "1",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{COLUMN3}": "headofstate",
          "{COLUMN4}": "isofficial",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the official {COLUMN0} used in the {TABLE0} the name of whose head of state is {VALUE0} .",
        "question": "What is the official language used in the country the name of whose head of state is Beatrix .",
        "concise pattern": "WHERE",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "\"Beatrix\"",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "\"T\"",
          "{VALUE10}": "1",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "2",
          "{COLUMN3}": "headofstate",
          "{COLUMN4}": "isofficial",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the total number of unique official {COLUMN0} spoken in the countries that are founded before {VALUE6} ?",
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930 ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "0",
          "{VALUE0}": "\"T\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "indepyear",
          "{COLUMN4}": "isofficial",
          "{VALUE6}": "1930",
          "{OP0}": "<",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "for the countries founded before {VALUE6} , what is the total number of distinct official {COLUMN0} ?",
        "question": "For the countries founded before 1930 , what is the total number of distinct official languages ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "0",
          "{VALUE0}": "\"T\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "indepyear",
          "{COLUMN4}": "isofficial",
          "{VALUE6}": "1930",
          "{OP0}": "<",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "give the total {COLUMN0} and average surface area corresponding to countries in noth america that have a surface area greater than {VALUE2} .",
        "question": "Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000 .",
        "concise pattern": "WHERE",
        "query": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "AVG",
          "{AGG0}": "SUM",
          "{COLUMN2}": "continent",
          "{OP1}": ">",
          "{COLUMN1}": "surfacearea",
          "{TABLE0}": "country",
          "{VALUE2}": "3000",
          "{COLUMN0}": "population",
          "{OP0}": "=",
          "{VALUE0}": "\"North America\""
        }
      },
      {
        "template": "how many different winners both participated in the {VALUE0} and were left handed ?",
        "question": "How many different winners both participated in the WTA Championships and were left handed ?",
        "concise pattern": "WHERE",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "name dict": {
          "{VALUE1}": "'L'",
          "{AGG0}": "COUNT",
          "{COLUMN2}": "winner_hand",
          "{COLUMN0}": "winner_name",
          "{COLUMN1}": "tourney_name",
          "{TABLE0}": "matches",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'WTA Championships'",
          "{OP1}": "="
        }
      },
      {
        "template": "find the number of left handed winners who participated in the {VALUE0} .",
        "question": "Find the number of left handed winners who participated in the WTA Championships .",
        "concise pattern": "WHERE",
        "query": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "name dict": {
          "{VALUE1}": "'L'",
          "{AGG0}": "COUNT",
          "{COLUMN2}": "winner_hand",
          "{COLUMN0}": "winner_name",
          "{COLUMN1}": "tourney_name",
          "{TABLE0}": "matches",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'WTA Championships'",
          "{OP1}": "="
        }
      },
      {
        "template": "what is the mobile phone number of the student named timothy {VALUE1} ?",
        "question": "What is the mobile phone number of the student named Timothy Ward ?",
        "concise pattern": "WHERE",
        "query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "name dict": {
          "{VALUE1}": "'Ward'",
          "{COLUMN2}": "last_name",
          "{COLUMN0}": "cell_mobile_number",
          "{COLUMN1}": "first_name",
          "{TABLE0}": "students",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Timmothy'",
          "{OP1}": "="
        }
      },
      {
        "template": "give the average life expectancy for countries in {VALUE0} which are republics ?",
        "question": "Give the average life expectancy for countries in Africa which are republics ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "name dict": {
          "{VALUE1}": "\"Republic\"",
          "{AGG0}": "AVG",
          "{COLUMN2}": "governmentform",
          "{COLUMN0}": "lifeexpectancy",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Africa\"",
          "{OP1}": "="
        }
      },
      {
        "template": "how many official languages does {VALUE0} have ?",
        "question": "How many official languages does Afghanistan have ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "name",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "\"Afghanistan\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "\"T\"",
          "{COLUMN0}": "code",
          "{COLUMN1}": "countrycode",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "isofficial",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many official languages are spoken in {VALUE0} ?",
        "question": "How many official languages are spoken in Afghanistan ?",
        "concise pattern": "WHERE",
        "query": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "name",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "\"Afghanistan\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "\"T\"",
          "{COLUMN0}": "code",
          "{COLUMN1}": "countrycode",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "isofficial",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the average life expectancy in african countries that are republics ?",
        "question": "What is the average life expectancy in African countries that are republics ?",
        "concise pattern": "WHERE",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "name dict": {
          "{VALUE1}": "\"Republic\"",
          "{AGG0}": "AVG",
          "{COLUMN2}": "governmentform",
          "{COLUMN0}": "lifeexpectancy",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Africa\"",
          "{OP1}": "="
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} OR {COLUMN1} {OP1} {VALUE1}",
    [
      {
        "template": "show the {COLUMN0} of {TABLE0} {COLUMN1} either {VALUE0} or {VALUE1} ?",
        "question": "Show the name of teachers aged either 32 or 33 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "name dict": {
          "{VALUE1}": "33",
          "{COLUMN0}": "name",
          "{OP1}": "=",
          "{COLUMN1}": "age",
          "{TABLE0}": "teacher",
          "{OP0}": "=",
          "{VALUE0}": "32"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} who are {COLUMN1} either {VALUE0} or {VALUE1} ?",
        "question": "What are the names of the teachers who are aged either 32 or 33 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "name dict": {
          "{VALUE1}": "33",
          "{COLUMN0}": "name",
          "{OP1}": "=",
          "{COLUMN1}": "age",
          "{TABLE0}": "teacher",
          "{OP0}": "=",
          "{VALUE0}": "32"
        }
      },
      {
        "template": "list the {COLUMN0} of all {TABLE0} {COLUMN1} by `` {VALUE0} '' or `` {VALUE1} '' .",
        "question": "List the title of all cartoon directed by `` Ben Jones '' or `` Brandon Vietti '' .",
        "concise pattern": "WHERE OR",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "name dict": {
          "{VALUE1}": "\"Brandon Vietti\"",
          "{COLUMN0}": "title",
          "{OP1}": "=",
          "{COLUMN1}": "directed_by",
          "{TABLE0}": "cartoon",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Ben Jones\""
        }
      },
      {
        "template": "what are the {COLUMN0} of all {TABLE0} {COLUMN1} by {VALUE0} or {VALUE1} ?",
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "name dict": {
          "{VALUE1}": "\"Brandon Vietti\"",
          "{COLUMN0}": "title",
          "{OP1}": "=",
          "{COLUMN1}": "directed_by",
          "{TABLE0}": "cartoon",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Ben Jones\""
        }
      },
      {
        "template": "list the emails of the {TABLE0} who live in the {COLUMN1} of {VALUE0} or the {COLUMN1} of {VALUE1} .",
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin .",
        "concise pattern": "WHERE OR",
        "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "name dict": {
          "{VALUE1}": "'Wisconsin'",
          "{COLUMN0}": "email_address",
          "{OP1}": "=",
          "{COLUMN1}": "state",
          "{TABLE0}": "professionals",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Hawaii'"
        }
      },
      {
        "template": "what are the emails of the {TABLE0} living in either the {COLUMN1} of {VALUE0} or the {COLUMN1} of {VALUE1} ?",
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "name dict": {
          "{VALUE1}": "'Wisconsin'",
          "{COLUMN0}": "email_address",
          "{OP1}": "=",
          "{COLUMN1}": "state",
          "{TABLE0}": "professionals",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Hawaii'"
        }
      },
      {
        "template": "show the {COLUMN0} of {TABLE0} whose {COLUMN1} year is either {VALUE0} or {VALUE1} ?",
        "question": "Show the name of singers whose birth year is either 1948 or 1949 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "name dict": {
          "{VALUE1}": "1949",
          "{COLUMN0}": "name",
          "{OP1}": "=",
          "{COLUMN1}": "birth_year",
          "{TABLE0}": "singer",
          "{OP0}": "=",
          "{VALUE0}": "1948"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} whose {COLUMN1} years are either {VALUE0} or {VALUE1} ?",
        "question": "What are the names of the singers whose birth years are either 1948 or 1949 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "name dict": {
          "{VALUE1}": "1949",
          "{COLUMN0}": "name",
          "{OP1}": "=",
          "{COLUMN1}": "birth_year",
          "{TABLE0}": "singer",
          "{OP0}": "=",
          "{VALUE0}": "1948"
        }
      },
      {
        "template": "how many {TABLE0} are there in {COLUMN0} {VALUE0} or {VALUE1} ?",
        "question": "How many concerts are there in year 2014 or 2015 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "name dict": {
          "{VALUE1}": "2015",
          "{COLUMN0}": "year",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "concert",
          "{OP0}": "=",
          "{VALUE0}": "2014"
        }
      },
      {
        "template": "which distinctive {COLUMN0} are produced by {COLUMN1} with the full name {VALUE0} or weighing more than {VALUE15} ?",
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "name dict": {
          "{COLUMN5}": "weight",
          "{COLUMN2}": "id",
          "{TABLE1}": "model list",
          "{VALUE15}": "3500",
          "{VALUE13}": "0",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "maker",
          "{VALUE12}": "3",
          "{COLUMN4}": "fullname",
          "{OP0}": "=",
          "{TABLE2}": "car makers",
          "{OP1}": ">",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "car names",
          "{TABLE3}": "cars data",
          "{VALUE5}": "2",
          "{VALUE0}": "'General Motors'",
          "{VALUE9}": "4",
          "{COLUMN0}": "model",
          "{VALUE14}": "4",
          "{VALUE2}": "1",
          "{COLUMN3}": "makeid",
          "{VALUE11}": "4",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the different {COLUMN0} created by either the car {COLUMN1} {VALUE0} or weighed more than {VALUE15} ?",
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "name dict": {
          "{COLUMN5}": "weight",
          "{COLUMN2}": "id",
          "{TABLE1}": "model list",
          "{VALUE15}": "3500",
          "{VALUE13}": "0",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "maker",
          "{VALUE12}": "3",
          "{COLUMN4}": "fullname",
          "{OP0}": "=",
          "{TABLE2}": "car makers",
          "{OP1}": ">",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "car names",
          "{TABLE3}": "cars data",
          "{VALUE5}": "2",
          "{VALUE0}": "'General Motors'",
          "{VALUE9}": "4",
          "{COLUMN0}": "model",
          "{VALUE14}": "4",
          "{VALUE2}": "1",
          "{COLUMN3}": "makeid",
          "{VALUE11}": "4",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the ids of {TABLE0} with {COLUMN1} type code {VALUE0} or {VALUE1} ?",
        "question": "What are the ids of templates with template type code PP or PPT ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "name dict": {
          "{VALUE1}": "\"PPT\"",
          "{COLUMN0}": "template_id",
          "{OP1}": "=",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "templates",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"PP\""
        }
      },
      {
        "template": "list the number of all {TABLE0} who played in {COLUMN0} of {VALUE0} or {VALUE1} .",
        "question": "List the number of all matches who played in years of 2013 or 2016 .",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "name dict": {
          "{VALUE1}": "2016",
          "{COLUMN0}": "year",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "matches",
          "{OP0}": "=",
          "{VALUE0}": "2013"
        }
      },
      {
        "template": "what are the number of {TABLE0} from {COLUMN0} '{VALUE0} ' or '{VALUE1} ' ?",
        "question": "What are the number of votes from state 'NY ' or 'CA ' ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
        "name dict": {
          "{VALUE1}": "'CA'",
          "{COLUMN0}": "state",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "votes",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'NY'"
        }
      },
      {
        "template": "how many {TABLE0} occurred in {VALUE0} or {VALUE1} ?",
        "question": "How many concerts occurred in 2014 or 2015 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "name dict": {
          "{VALUE1}": "2015",
          "{COLUMN0}": "year",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "concert",
          "{OP0}": "=",
          "{VALUE0}": "2014"
        }
      },
      {
        "template": "find the first name of {TABLE0} who have {VALUE0} or {VALUE1} pet .",
        "question": "Find the first name of students who have cat or dog pet .",
        "concise pattern": "WHERE OR",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "name dict": {
          "{COLUMN2}": "petid",
          "{TABLE1}": "has pet",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "'dog'",
          "{VALUE10}": "3",
          "{COLUMN1}": "stuid",
          "{VALUE12}": "3",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "1",
          "{VALUE0}": "'cat'",
          "{VALUE9}": "2",
          "{COLUMN0}": "fname",
          "{VALUE2}": "1",
          "{COLUMN3}": "pettype",
          "{VALUE11}": "0",
          "{VALUE6}": "2",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what are the first names of every {TABLE0} who has a {VALUE0} or {VALUE1} as a pet ?",
        "question": "What are the first names of every student who has a cat or dog as a pet ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "name dict": {
          "{COLUMN2}": "petid",
          "{TABLE1}": "has pet",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "'dog'",
          "{VALUE10}": "3",
          "{COLUMN1}": "stuid",
          "{VALUE12}": "3",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "1",
          "{VALUE0}": "'cat'",
          "{VALUE9}": "2",
          "{COLUMN0}": "fname",
          "{VALUE2}": "1",
          "{COLUMN3}": "pettype",
          "{VALUE11}": "0",
          "{VALUE6}": "2",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "find the number of {TABLE0} landing in the city of {VALUE0} or {VALUE1} .",
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene .",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "city",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "\"Abilene\"",
          "{COLUMN0}": "destairport",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many {TABLE0} land in {VALUE0} or {VALUE1} ?",
        "question": "How many flights land in Aberdeen or Abilene ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "name dict": {
          "{TABLE1}": "airports",
          "{COLUMN2}": "city",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "\"Aberdeen\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "\"Abilene\"",
          "{COLUMN0}": "destairport",
          "{COLUMN1}": "airportcode",
          "{TABLE0}": "flights",
          "{VALUE2}": "1",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "return the ids of {TABLE0} that have the code {VALUE0} or {VALUE1} .",
        "question": "Return the ids of templates that have the code PP or PPT .",
        "concise pattern": "WHERE OR",
        "query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "name dict": {
          "{VALUE1}": "\"PPT\"",
          "{COLUMN0}": "template_id",
          "{OP1}": "=",
          "{COLUMN1}": "template_type_code",
          "{TABLE0}": "templates",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"PP\""
        }
      },
      {
        "template": "how many {TABLE0} were opened after {VALUE0} or before {VALUE1} ?",
        "question": "How many museums were opened after 2013 or before 2008 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
        "name dict": {
          "{VALUE1}": "2008",
          "{COLUMN0}": "open_year",
          "{OP1}": "<",
          "{AGG0}": "COUNT",
          "{TABLE0}": "museum",
          "{OP0}": ">",
          "{VALUE0}": "2013"
        }
      },
      {
        "template": "how many {TABLE0} were played in {VALUE0} or {VALUE1} ?",
        "question": "How many matches were played in 2013 or 2016 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "name dict": {
          "{VALUE1}": "2016",
          "{COLUMN0}": "year",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "matches",
          "{OP0}": "=",
          "{VALUE0}": "2013"
        }
      },
      {
        "template": "what is the total surface area of the {COLUMN1} {VALUE0} and {VALUE1} ?",
        "question": "What is the total surface area of the continents Asia and Europe ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "name dict": {
          "{VALUE1}": "\"Europe\"",
          "{AGG0}": "SUM",
          "{COLUMN0}": "surfacearea",
          "{OP1}": "=",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "what are the {COLUMN0} that use {VALUE0} or {VALUE1} ?",
        "question": "What are the regions that use English or Dutch ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "\"English\"",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "\"Dutch\"",
          "{VALUE10}": "1",
          "{COLUMN0}": "region",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN0} speak {VALUE1} or {VALUE0} ?",
        "question": "Which regions speak Dutch or English ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "\"English\"",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "2",
          "{VALUE1}": "\"Dutch\"",
          "{VALUE10}": "1",
          "{COLUMN0}": "region",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the number of {COLUMN0} whose record format is `` {VALUE0} '' or `` {VALUE1} '' .",
        "question": "Find the number of orchestras whose record format is `` CD '' or `` DVD '' .",
        "concise pattern": "WHERE OR",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "name dict": {
          "{VALUE1}": "\"DVD\"",
          "{AGG0}": "COUNT",
          "{COLUMN0}": "orchestra",
          "{OP1}": "=",
          "{COLUMN1}": "major_record_format",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"CD\""
        }
      },
      {
        "template": "count the number of {COLUMN0} that have {VALUE0} or {VALUE1} as their record format .",
        "question": "Count the number of orchestras that have CD or DVD as their record format .",
        "concise pattern": "WHERE OR",
        "query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "name dict": {
          "{VALUE1}": "\"DVD\"",
          "{AGG0}": "COUNT",
          "{COLUMN0}": "orchestra",
          "{OP1}": "=",
          "{COLUMN1}": "major_record_format",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"CD\""
        }
      },
      {
        "template": "how many high schoolers are there in {COLUMN0} {VALUE0} or {VALUE1} ?",
        "question": "How many high schoolers are there in grade 9 or 10 ?",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "name dict": {
          "{VALUE1}": "10",
          "{COLUMN0}": "grade",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "high schooler",
          "{OP0}": "=",
          "{VALUE0}": "9"
        }
      },
      {
        "template": "count the number of high schoolers in {COLUMN0} {VALUE0} or {VALUE1} .",
        "question": "Count the number of high schoolers in grades 9 or 10 .",
        "concise pattern": "WHERE OR",
        "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "name dict": {
          "{VALUE1}": "10",
          "{COLUMN0}": "grade",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{TABLE0}": "high schooler",
          "{OP0}": "=",
          "{VALUE0}": "9"
        }
      },
      {
        "template": "give the total surface area covered by countries in {VALUE0} or {VALUE1} .",
        "question": "Give the total surface area covered by countries in Asia or Europe .",
        "concise pattern": "WHERE OR",
        "query": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "name dict": {
          "{VALUE1}": "\"Europe\"",
          "{AGG0}": "SUM",
          "{COLUMN0}": "surfacearea",
          "{OP1}": "=",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} NOT IN ( {SELECT1} {FROM} )",
    [
      {
        "template": "show the {COLUMN1} {COLUMN0} without any {TABLE1} .",
        "question": "Show the stadium names without any concert .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "name dict": {
          "{TABLE0}": "stadium",
          "{COLUMN0}": "name",
          "{COLUMN1}": "stadium_id",
          "{TABLE1}": "concert"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} without any {TABLE1} ?",
        "question": "What are the names of the stadiums without any concerts ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "name dict": {
          "{TABLE0}": "stadium",
          "{COLUMN0}": "name",
          "{COLUMN1}": "stadium_id",
          "{TABLE1}": "concert"
        }
      },
      {
        "template": "find the {COLUMN0} of {TABLE0} who never won any award in the {TABLE1} .",
        "question": "Find the names of employees who never won any award in the evaluation .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "name dict": {
          "{TABLE0}": "employee",
          "{COLUMN0}": "name",
          "{COLUMN1}": "employee_id",
          "{TABLE1}": "evaluation"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} who never received any {TABLE1} ?",
        "question": "What are the names of the employees who never received any evaluation ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "name dict": {
          "{TABLE0}": "employee",
          "{COLUMN0}": "name",
          "{COLUMN1}": "employee_id",
          "{TABLE1}": "evaluation"
        }
      },
      {
        "template": "which {TABLE0} run with no employees ? find the {COLUMN1} {COLUMN0}",
        "question": "Which shops run with no employees ? Find the shop names",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "name dict": {
          "{TABLE0}": "shop",
          "{COLUMN0}": "name",
          "{COLUMN1}": "shop_id",
          "{TABLE1}": "hiring"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {COLUMN1} that had no {TABLE1} yet ?",
        "question": "What is the name of the museum that had no visitor yet ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
        "name dict": {
          "{TABLE0}": "museum",
          "{COLUMN0}": "name",
          "{COLUMN1}": "museum_id",
          "{TABLE1}": "visit"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} that do not have any {TABLE1} .",
        "question": "List the name of singers that do not have any song .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE1}": "song"
        }
      },
      {
        "template": "find the average {COLUMN0} of {TABLE0} who do not have any pet .",
        "question": "Find the average age of students who do not have any pet .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "has pet",
          "{COLUMN0}": "age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "stuid",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{TABLE0}": "student"
        }
      },
      {
        "template": "what is the average {COLUMN0} for all {TABLE0} who do not own any pets ?",
        "question": "What is the average age for all students who do not own any pets ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "has pet",
          "{COLUMN0}": "age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "stuid",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{TABLE0}": "student"
        }
      },
      {
        "template": "which {TABLE0} do not have departing or arriving {TABLE1} ?",
        "question": "Which airports do not have departing or arriving flights ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN0}": "airportname",
          "{COLUMN1}": "airportcode",
          "{COLUMN3}": "destairport",
          "{COLUMN2}": "sourceairport",
          "{TABLE0}": "airports"
        }
      },
      {
        "template": "find the {COLUMN0} of the {TABLE0} that do not hire any employee .",
        "question": "Find the name of the shops that do not hire any employee .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "name dict": {
          "{TABLE0}": "shop",
          "{COLUMN0}": "name",
          "{COLUMN1}": "shop_id",
          "{TABLE1}": "hiring"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} who have not been arranged to teach courses .",
        "question": "List the names of teachers who have not been arranged to teach courses .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "name dict": {
          "{TABLE0}": "teacher",
          "{COLUMN0}": "name",
          "{COLUMN1}": "teacher_id",
          "{TABLE1}": "course arrange"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} whose courses have not been arranged ?",
        "question": "What are the names of the teachers whose courses have not been arranged ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "name dict": {
          "{TABLE0}": "teacher",
          "{COLUMN0}": "name",
          "{COLUMN1}": "teacher_id",
          "{TABLE1}": "course arrange"
        }
      },
      {
        "template": "which {TABLE0} do not have any student enrolled ? list the {COLUMN1} name .",
        "question": "Which semesters do not have any student enrolled ? List the semester name .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "name dict": {
          "{TABLE0}": "semesters",
          "{COLUMN0}": "semester_name",
          "{COLUMN1}": "semester_id",
          "{TABLE1}": "student enrolment"
        }
      },
      {
        "template": "list the {COLUMN0} of {COLUMN1} that are not poker players .",
        "question": "List the names of people that are not poker players .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "name dict": {
          "{TABLE0}": "people",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{TABLE1}": "poker player"
        }
      },
      {
        "template": "what are the {COLUMN0} of {COLUMN1} who do not play poker ?",
        "question": "What are the names of people who do not play poker ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "name dict": {
          "{TABLE0}": "people",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{TABLE1}": "poker player"
        }
      },
      {
        "template": "list the names of {COLUMN0} that have no {TABLE0} .",
        "question": "List the names of orchestras that have no performance .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "name dict": {
          "{TABLE0}": "performance",
          "{COLUMN0}": "orchestra",
          "{COLUMN1}": "orchestra_id"
        }
      },
      {
        "template": "what are the {COLUMN0} that do not have any {TABLE0} ?",
        "question": "What are the orchestras that do not have any performances ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "name dict": {
          "{TABLE0}": "performance",
          "{COLUMN0}": "orchestra",
          "{COLUMN1}": "orchestra_id"
        }
      },
      {
        "template": "find the minimum {COLUMN0} of students who have no {TABLE1} .",
        "question": "Find the minimum grade of students who have no friends .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "name dict": {
          "{TABLE1}": "friend",
          "{COLUMN2}": "student_id",
          "{AGG0}": "MIN",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "grade",
          "{COLUMN1}": "id",
          "{TABLE0}": "high schooler",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "what is the lowest {COLUMN0} of students who do not have any {TABLE1} ?",
        "question": "What is the lowest grade of students who do not have any friends ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "name dict": {
          "{TABLE1}": "friend",
          "{COLUMN2}": "student_id",
          "{AGG0}": "MIN",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "grade",
          "{COLUMN1}": "id",
          "{TABLE0}": "high schooler",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "how many {TABLE0} temporarily do not have any {TABLE1} ?",
        "question": "How many owners temporarily do not have any dogs ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "name dict": {
          "{TABLE0}": "owners",
          "{COLUMN0}": "owner_id",
          "{AGG0}": "COUNT",
          "{TABLE1}": "dogs"
        }
      },
      {
        "template": "find the number of {TABLE0} who do not own any {TABLE1} at this moment .",
        "question": "Find the number of owners who do not own any dogs at this moment .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "name dict": {
          "{TABLE0}": "owners",
          "{COLUMN0}": "owner_id",
          "{AGG0}": "COUNT",
          "{TABLE1}": "dogs"
        }
      },
      {
        "template": "find the name of {TABLE0} which do not have any flight in and out .",
        "question": "Find the name of airports which do not have any flight in and out .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN0}": "airportname",
          "{COLUMN1}": "airportcode",
          "{COLUMN3}": "destairport",
          "{COLUMN2}": "sourceairport",
          "{TABLE0}": "airports"
        }
      },
      {
        "template": "what is the name of the {COLUMN1} with no students enrolled ?",
        "question": "What is the name of the semester with no students enrolled ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "name dict": {
          "{TABLE0}": "semesters",
          "{COLUMN0}": "semester_name",
          "{COLUMN1}": "semester_id",
          "{TABLE1}": "student enrolment"
        }
      },
      {
        "template": "how many {TABLE0} did not get voted ?",
        "question": "How many contestants did not get voted ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
        "name dict": {
          "{TABLE0}": "contestants",
          "{COLUMN0}": "contestant_number",
          "{AGG0}": "COUNT",
          "{TABLE1}": "votes"
        }
      },
      {
        "template": "how many {TABLE0} have not gone through any treatment ?",
        "question": "How many dogs have not gone through any treatment ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "dog_id",
          "{AGG0}": "COUNT",
          "{TABLE1}": "treatments"
        }
      },
      {
        "template": "tell me the number of {TABLE0} that have received any treatment .",
        "question": "Tell me the number of dogs that have received any treatment .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "dog_id",
          "{AGG0}": "COUNT",
          "{TABLE1}": "treatments"
        }
      },
      {
        "template": "how many {TABLE0} did not operate any treatment on dogs ?",
        "question": "How many professionals did not operate any treatment on dogs ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "name dict": {
          "{TABLE0}": "professionals",
          "{COLUMN0}": "professional_id",
          "{AGG0}": "COUNT",
          "{TABLE1}": "treatments"
        }
      },
      {
        "template": "find the number of {TABLE0} who have not treated any dogs .",
        "question": "Find the number of professionals who have not treated any dogs .",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "name dict": {
          "{TABLE0}": "professionals",
          "{COLUMN0}": "professional_id",
          "{AGG0}": "COUNT",
          "{TABLE1}": "treatments"
        }
      },
      {
        "template": "what is the sname of every sing that does not have any {TABLE1} ?",
        "question": "What is the sname of every sing that does not have any song ?",
        "concise pattern": "WHERE NOT IN ( )",
        "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "name dict": {
          "{TABLE0}": "singer",
          "{COLUMN0}": "name",
          "{COLUMN1}": "singer_id",
          "{TABLE1}": "song"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} INTERSECT {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE1}",
    [
      {
        "template": "list the {COLUMN0} and {COLUMN1} the {TABLE0} that has {COLUMN3} the {TABLE1} {COLUMN0} '{VALUE0} ' and the {TABLE1} {COLUMN0} '{VALUE1} '",
        "question": "List the name and date the battle that has lost the ship named 'Lettice ' and the ship named 'HMS Atalanta '",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "id",
          "{TABLE1}": "ship",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "date",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "'HMS Atalanta'",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "battle",
          "{VALUE5}": "2",
          "{VALUE0}": "'Lettice'",
          "{VALUE9}": "0",
          "{COLUMN0}": "name",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "lost_in_battle",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what is the {COLUMN0} name and country of all tv {COLUMN3} that are playing {TABLE1} {COLUMN4} by {VALUE1} and {TABLE1} {COLUMN4} by {VALUE0} ?",
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "id",
          "{TABLE1}": "cartoon",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "country",
          "{VALUE12}": "1",
          "{COLUMN4}": "directed_by",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "'Ben Jones'",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "tv channel",
          "{VALUE5}": "2",
          "{VALUE0}": "'Michael Chang'",
          "{VALUE9}": "0",
          "{COLUMN0}": "series_name",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "channel",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} and {COLUMN1} of the {TABLE1} which some {TABLE0} happened in the {COLUMN3} of both {VALUE7} and {VALUE15} .",
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015 .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "name dict": {
          "{COLUMN2}": "stadium_id",
          "{TABLE1}": "stadium",
          "{VALUE15}": "2015",
          "{VALUE13}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "location",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "concert",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE9}": "2",
          "{COLUMN0}": "name",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "year",
          "{VALUE11}": "2",
          "{VALUE6}": "1",
          "{VALUE7}": "2014"
        }
      },
      {
        "template": "what is the {COLUMN0} of the {COLUMN2} who {TABLE1} both a {COLUMN3} opened before {VALUE9} and a {COLUMN3} opened after {VALUE19} ?",
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011 ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
        "name dict": {
          "{VALUE17}": "2",
          "{COLUMN2}": "visitor_id",
          "{TABLE1}": "visit",
          "{VALUE15}": "3",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE16}": "3",
          "{VALUE10}": "1",
          "{COLUMN1}": "id",
          "{VALUE12}": "2",
          "{VALUE18}": "3",
          "{OP0}": "<",
          "{TABLE2}": "museum",
          "{OP1}": ">",
          "{COLUMN4}": "open_year",
          "{VALUE7}": "2",
          "{VALUE1}": "1",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "customer",
          "{VALUE5}": "3",
          "{VALUE0}": "1",
          "{VALUE9}": "2009",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "2",
          "{COLUMN3}": "museum_id",
          "{VALUE11}": "1",
          "{VALUE6}": "3",
          "{VALUE19}": "2011"
        }
      },
      {
        "template": "show {COLUMN0} where a {TABLE0} above {COLUMN1} {VALUE0} and a {TABLE0} below {VALUE1} are from .",
        "question": "Show countries where a singer above age 40 and a singer below 30 are from .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
        "name dict": {
          "{VALUE1}": "30",
          "{COLUMN0}": "country",
          "{OP1}": "<",
          "{COLUMN1}": "age",
          "{TABLE0}": "singer",
          "{OP0}": ">",
          "{VALUE0}": "40"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} of the {TABLE1} that had {TABLE0} that occurred in both {VALUE7} and {VALUE15} ?",
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015 ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "name dict": {
          "{COLUMN2}": "stadium_id",
          "{TABLE1}": "stadium",
          "{VALUE15}": "2015",
          "{VALUE13}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "location",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "concert",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE9}": "2",
          "{COLUMN0}": "name",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "year",
          "{VALUE11}": "2",
          "{VALUE6}": "1",
          "{VALUE7}": "2014"
        }
      },
      {
        "template": "what are the {COLUMN0} code and {COLUMN1} name of the {TABLE0} who won in both {COLUMN4} {VALUE0} and {VALUE1} ?",
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "player_id",
          "{TABLE1}": "matches",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "first_name",
          "{VALUE12}": "1",
          "{COLUMN4}": "tourney_name",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "'Australian Open'",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "players",
          "{VALUE5}": "2",
          "{VALUE0}": "'WTA Championships'",
          "{VALUE9}": "0",
          "{COLUMN0}": "country_code",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "winner_id",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} name and country of the tv {COLUMN3} that is playing some {TABLE1} {COLUMN4} by {VALUE1} and {VALUE0} ?",
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "id",
          "{TABLE1}": "cartoon",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "country",
          "{VALUE12}": "1",
          "{COLUMN4}": "directed_by",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "'Ben Jones'",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "tv channel",
          "{VALUE5}": "2",
          "{VALUE0}": "'Michael Chang'",
          "{VALUE9}": "0",
          "{COLUMN0}": "series_name",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "channel",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} in which there are both {TABLE0} selling less than {VALUE0} products and {TABLE0} selling more than {VALUE1} products .",
        "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "name dict": {
          "{VALUE1}": "10000",
          "{COLUMN0}": "district",
          "{OP1}": ">",
          "{COLUMN1}": "number_products",
          "{TABLE0}": "shop",
          "{OP0}": "<",
          "{VALUE0}": "3000"
        }
      },
      {
        "template": "what are the {COLUMN1} names and {COLUMN0} codes for {TABLE0} who won both the {VALUE0} and the {VALUE1} ?",
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "player_id",
          "{TABLE1}": "matches",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "first_name",
          "{VALUE12}": "1",
          "{COLUMN4}": "tourney_name",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "'Australian Open'",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "players",
          "{VALUE5}": "2",
          "{VALUE0}": "'WTA Championships'",
          "{VALUE9}": "0",
          "{COLUMN0}": "country_code",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "winner_id",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "list the {COLUMN0} codes in which voters voted both for the {COLUMN3} '{VALUE0} ' and the {COLUMN3} '{VALUE1} ' .",
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling ' and the contestant 'Kelly Clauss ' .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
        "name dict": {
          "{VALUE4}": "2",
          "{VALUE20}": "1",
          "{VALUE19}": "3",
          "{TABLE1}": "votes",
          "{VALUE15}": "1",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE21}": "1",
          "{VALUE17}": "3",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "contestant_number",
          "{VALUE12}": "3",
          "{OP0}": "=",
          "{TABLE2}": "area code state",
          "{COLUMN2}": "state",
          "{OP1}": "=",
          "{VALUE1}": "'Kelly Clauss'",
          "{VALUE18}": "2",
          "{VALUE8}": "2",
          "{TABLE0}": "contestants",
          "{VALUE5}": "1",
          "{VALUE0}": "'Tabatha Gehling'",
          "{VALUE9}": "3",
          "{COLUMN0}": "area_code",
          "{VALUE14}": "2",
          "{VALUE2}": "3",
          "{COLUMN3}": "contestant_name",
          "{VALUE11}": "0",
          "{VALUE6}": "2",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "show the {COLUMN0} shared by {TABLE0} with {COLUMN1} year before {VALUE0} and after {VALUE1} .",
        "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955 .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "name dict": {
          "{VALUE1}": "1955",
          "{COLUMN0}": "citizenship",
          "{OP1}": ">",
          "{COLUMN1}": "birth_year",
          "{TABLE0}": "singer",
          "{OP0}": "<",
          "{VALUE0}": "1945"
        }
      },
      {
        "template": "what are the {COLUMN0} that are shared by {TABLE0} with a {COLUMN1} year before {VALUE0} and after {VALUE1} ?",
        "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955 ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "name dict": {
          "{VALUE1}": "1955",
          "{COLUMN0}": "citizenship",
          "{OP1}": ">",
          "{COLUMN1}": "birth_year",
          "{TABLE0}": "singer",
          "{OP0}": "<",
          "{VALUE0}": "1945"
        }
      },
      {
        "template": "find the name of {TABLE0} who have both {VALUE0} and {VALUE1} {TABLE2} .",
        "question": "Find the name of students who have both cat and dog pets .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "name dict": {
          "{VALUE4}": "2",
          "{VALUE20}": "3",
          "{VALUE19}": "2",
          "{TABLE1}": "has pet",
          "{VALUE15}": "1",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE21}": "1",
          "{VALUE17}": "3",
          "{VALUE16}": "2",
          "{VALUE10}": "3",
          "{COLUMN1}": "stuid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{COLUMN2}": "petid",
          "{OP1}": "=",
          "{VALUE1}": "'dog'",
          "{VALUE18}": "3",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "1",
          "{VALUE0}": "'cat'",
          "{VALUE9}": "2",
          "{COLUMN0}": "fname",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "pettype",
          "{VALUE11}": "0",
          "{VALUE6}": "2",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "find all {COLUMN0} that have {TABLE1} from both airports '{VALUE0} ' and '{VALUE1} ' .",
        "question": "Find all airlines that have flights from both airports 'APG ' and 'CVO ' .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "name dict": {
          "{COLUMN2}": "sourceairport",
          "{TABLE1}": "flights",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"CVO\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "uid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "airlines",
          "{VALUE5}": "1",
          "{VALUE0}": "\"APG\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "airline",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN0} have departing {TABLE1} from both {VALUE0} and {VALUE1} airports ?",
        "question": "Which airlines have departing flights from both APG and CVO airports ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "name dict": {
          "{COLUMN2}": "sourceairport",
          "{TABLE1}": "flights",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"CVO\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "uid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "airlines",
          "{VALUE5}": "1",
          "{VALUE0}": "\"APG\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "airline",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "show the {COLUMN0} id with {COLUMN1} text '{VALUE0} ' and '{VALUE1} ' .",
        "question": "Show the document id with paragraph text 'Brazil ' and 'Ireland ' .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "name dict": {
          "{VALUE1}": "'Ireland'",
          "{COLUMN0}": "document_id",
          "{OP1}": "=",
          "{COLUMN1}": "paragraph_text",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Brazil'"
        }
      },
      {
        "template": "show the {COLUMN0} companies shared by {COLUMN1} founded before {VALUE1} and after {VALUE1} .",
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003 .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "name dict": {
          "{VALUE1}": "2003",
          "{COLUMN2}": "year_of_founded",
          "{OP1}": ">",
          "{COLUMN1}": "orchestra",
          "{COLUMN0}": "record_company",
          "{OP0}": "<",
          "{VALUE0}": "2003"
        }
      },
      {
        "template": "what are the {COLUMN0} companies that are used by both {COLUMN1} founded before {VALUE1} and those founded after {VALUE1} ?",
        "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003 ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "name dict": {
          "{VALUE1}": "2003",
          "{COLUMN2}": "year_of_founded",
          "{OP1}": ">",
          "{COLUMN1}": "orchestra",
          "{COLUMN0}": "record_company",
          "{OP0}": "<",
          "{VALUE0}": "2003"
        }
      },
      {
        "template": "which {COLUMN0} has both stores with less than {VALUE0} products and stores with more than {VALUE1} products ?",
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "name dict": {
          "{VALUE1}": "10000",
          "{COLUMN0}": "district",
          "{OP1}": ">",
          "{COLUMN1}": "number_products",
          "{TABLE0}": "shop",
          "{OP0}": "<",
          "{VALUE0}": "3000"
        }
      },
      {
        "template": "what are the ids of documents that contain the {COLUMN1} text '{VALUE0} ' and '{VALUE1} ' ?",
        "question": "What are the ids of documents that contain the paragraph text 'Brazil ' and 'Ireland ' ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "name dict": {
          "{VALUE1}": "'Ireland'",
          "{COLUMN0}": "document_id",
          "{OP1}": "=",
          "{COLUMN1}": "paragraph_text",
          "{TABLE0}": "paragraphs",
          "{VALUE2}": "0",
          "{VALUE3}": "1",
          "{OP0}": "=",
          "{VALUE0}": "'Brazil'"
        }
      },
      {
        "template": "find the {COLUMN0} when both {VALUE0} students and {VALUE1} students got enrolled in .",
        "question": "Find the semester when both Master students and Bachelor students got enrolled in .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{VALUE5}": "1",
          "{COLUMN2}": "degree_summary_name",
          "{OP1}": "=",
          "{VALUE1}": "'Bachelor'",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE3}": "1",
          "{VALUE13}": "1",
          "{VALUE0}": "'Master'",
          "{VALUE9}": "1",
          "{VALUE10}": "2",
          "{COLUMN0}": "semester_id",
          "{COLUMN1}": "degree_program_id",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "2",
          "{VALUE12}": "2",
          "{VALUE11}": "1",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} of nations speak both {VALUE0} and {VALUE1} ?",
        "question": "What are the names of nations speak both English and French ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "name dict": {
          "{COLUMN2}": "countrycode",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"French\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "give the {COLUMN0} of nations that speak both {VALUE0} and {VALUE1} .",
        "question": "Give the names of nations that speak both English and French .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "name dict": {
          "{COLUMN2}": "countrycode",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"French\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {TABLE0} ' first names who have both cats and dogs as {TABLE2} ?",
        "question": "What are the students ' first names who have both cats and dogs as pets ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "name dict": {
          "{VALUE4}": "2",
          "{VALUE20}": "3",
          "{VALUE19}": "2",
          "{TABLE1}": "has pet",
          "{VALUE15}": "1",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE21}": "1",
          "{VALUE17}": "3",
          "{VALUE16}": "2",
          "{VALUE10}": "3",
          "{COLUMN1}": "stuid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{COLUMN2}": "petid",
          "{OP1}": "=",
          "{VALUE1}": "'dog'",
          "{VALUE18}": "3",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "1",
          "{VALUE0}": "'cat'",
          "{VALUE9}": "2",
          "{COLUMN0}": "fname",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "pettype",
          "{VALUE11}": "0",
          "{VALUE6}": "2",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "list the names of all winners who played in both {VALUE0} and {VALUE1} .",
        "question": "List the names of all winners who played in both 2013 and 2016 .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "name dict": {
          "{VALUE1}": "2016",
          "{COLUMN0}": "winner_name",
          "{OP1}": "=",
          "{COLUMN1}": "year",
          "{TABLE0}": "matches",
          "{OP0}": "=",
          "{VALUE0}": "2013"
        }
      },
      {
        "template": "what are the names of players who won in both {VALUE0} and {VALUE1} ?",
        "question": "What are the names of players who won in both 2013 and 2016 ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "name dict": {
          "{VALUE1}": "2016",
          "{COLUMN0}": "winner_name",
          "{OP1}": "=",
          "{COLUMN1}": "year",
          "{TABLE0}": "matches",
          "{OP0}": "=",
          "{VALUE0}": "2013"
        }
      },
      {
        "template": "what is the id of the {COLUMN0} that had both masters and bachelors students enrolled ?",
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "name dict": {
          "{TABLE1}": "student enrolment",
          "{VALUE5}": "1",
          "{COLUMN2}": "degree_summary_name",
          "{OP1}": "=",
          "{VALUE1}": "'Bachelor'",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE3}": "1",
          "{VALUE13}": "1",
          "{VALUE0}": "'Master'",
          "{VALUE9}": "1",
          "{VALUE10}": "2",
          "{COLUMN0}": "semester_id",
          "{COLUMN1}": "degree_program_id",
          "{TABLE0}": "degree programs",
          "{VALUE2}": "2",
          "{VALUE12}": "2",
          "{VALUE11}": "1",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} ORDER BY {COLUMN0} {SC0}",
    [
      {
        "template": "sort all the {TABLE0} by {COLUMN3} products in descending order , and return the {COLUMN0} , {COLUMN1} and {COLUMN2} of each {TABLE0} .",
        "question": "Sort all the shops by number products in descending order , and return the name , location and district of each shop .",
        "concise pattern": "ORDER BY",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN3}": "number_products",
          "{COLUMN1}": "location",
          "{TABLE0}": "shop",
          "{COLUMN2}": "district"
        }
      },
      {
        "template": "what are the {COLUMN0} , {COLUMN1} , and {COLUMN2} for every {TABLE0} in descending order of {COLUMN2} ?",
        "question": "What are the names , countries , and ages for every singer in descending order of age ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{COLUMN2}": "age",
          "{COLUMN1}": "country",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "return the {COLUMN0} , {COLUMN1} and {COLUMN2} of all {TABLE0} in descending order of {COLUMN3} of products .",
        "question": "Return the name , location and district of all shops in descending order of number of products .",
        "concise pattern": "ORDER BY",
        "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN3}": "number_products",
          "{COLUMN1}": "location",
          "{TABLE0}": "shop",
          "{COLUMN2}": "district"
        }
      },
      {
        "template": "show {COLUMN0} , country , {COLUMN2} for all {TABLE0} ordered by {COLUMN2} from the oldest to the youngest .",
        "question": "Show name , country , age for all singers ordered by age from the oldest to the youngest .",
        "concise pattern": "ORDER BY",
        "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "name dict": {
          "{COLUMN0}": "name",
          "{SC0}": "DESC",
          "{COLUMN2}": "age",
          "{COLUMN1}": "country",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "list the {COLUMN0} and {COLUMN1} dates of {TABLE0} in ascending alphabetical order of {COLUMN0} .",
        "question": "List the names and birth dates of people in ascending alphabetical order of name .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "name dict": {
          "{TABLE0}": "people",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "birth_date"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} dates of {TABLE0} , ordered by their {COLUMN0} in alphabetical order ?",
        "question": "What are the names and birth dates of people , ordered by their names in alphabetical order ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "name dict": {
          "{TABLE0}": "people",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "birth_date"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} in ascending order of {COLUMN1} .",
        "question": "List the names of teachers in ascending order of age .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "name dict": {
          "{TABLE0}": "teacher",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} ordered by ascending {COLUMN1} ?",
        "question": "What are the names of the teachers ordered by ascending age ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM teacher ORDER BY Age ASC",
        "name dict": {
          "{TABLE0}": "teacher",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "list the {COLUMN0} and {COLUMN1} ordered by in descending alphaetical order for the {COLUMN0} .",
        "question": "List the name and tonnage ordered by in descending alphaetical order for the names .",
        "concise pattern": "ORDER BY",
        "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
        "name dict": {
          "{TABLE0}": "ship",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "tonnage"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} in ascending order of {COLUMN1} .",
        "question": "List the names of conductors in ascending order of age .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "name dict": {
          "{TABLE0}": "conductor",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} , ordered by {COLUMN1} ?",
        "question": "What are the names of conductors , ordered by age ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM conductor ORDER BY Age ASC",
        "name dict": {
          "{TABLE0}": "conductor",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} in ascending order of {COLUMN1} worth .",
        "question": "List the name of singers in ascending order of net worth .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "name dict": {
          "{TABLE0}": "singer",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "net_worth_millions"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} ordered by ascending {COLUMN1} worth ?",
        "question": "What are the names of singers ordered by ascending net worth ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "name dict": {
          "{TABLE0}": "singer",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "net_worth_millions"
        }
      },
      {
        "template": "what {COLUMN0} details can you tell me about {TABLE0} in reverse alphabetical order ?",
        "question": "What other details can you tell me about students in reverse alphabetical order ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "name dict": {
          "{TABLE0}": "students",
          "{SC0}": "DESC",
          "{COLUMN0}": "other_student_details"
        }
      },
      {
        "template": "what are the {COLUMN0} of poker players in descending order of {COLUMN2} ?",
        "question": "What are the names of poker players in descending order of earnings ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "name dict": {
          "{COLUMN2}": "earnings",
          "{VALUE4}": "2",
          "{TABLE1}": "poker player",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "return the {COLUMN0} of poker players sorted by their {COLUMN2} descending .",
        "question": "Return the names of poker players sorted by their earnings descending .",
        "concise pattern": "ORDER BY",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "name dict": {
          "{COLUMN2}": "earnings",
          "{VALUE4}": "2",
          "{TABLE1}": "poker player",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{TABLE0}": "people",
          "{VALUE2}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "list the {COLUMN1} numbers and names , ordered by {COLUMN1} name descending .",
        "question": "List the contestant numbers and names , ordered by contestant name descending .",
        "concise pattern": "ORDER BY",
        "query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
        "name dict": {
          "{TABLE0}": "contestants",
          "{SC0}": "DESC",
          "{COLUMN0}": "contestant_number",
          "{COLUMN1}": "contestant_name"
        }
      },
      {
        "template": "what are the {COLUMN0} companies of {COLUMN1} in descending order of years in which they were founded ?",
        "question": "What are the record companies of orchestras in descending order of years in which they were founded ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "name dict": {
          "{COLUMN0}": "record_company",
          "{SC0}": "DESC",
          "{COLUMN2}": "year_of_founded",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "return the {COLUMN0} companies of {COLUMN1} , sorted descending by the years in which they were founded .",
        "question": "Return the record companies of orchestras , sorted descending by the years in which they were founded .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "name dict": {
          "{COLUMN0}": "record_company",
          "{SC0}": "DESC",
          "{COLUMN2}": "year_of_founded",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "list {COLUMN0} of {TABLE0} in descending order of years of work .",
        "question": "List names of conductors in descending order of years of work .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "name dict": {
          "{TABLE0}": "conductor",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "year_of_work"
        }
      },
      {
        "template": "what are the {COLUMN0} of {TABLE0} , sorted descending by the number of years they have worked ?",
        "question": "What are the names of conductors , sorted descending by the number of years they have worked ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "name dict": {
          "{TABLE0}": "conductor",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "year_of_work"
        }
      },
      {
        "template": "list the {COLUMN0} in reversed lexicographical order .",
        "question": "List the section_name in reversed lexicographical order .",
        "concise pattern": "ORDER BY",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "name dict": {
          "{TABLE0}": "sections",
          "{SC0}": "DESC",
          "{COLUMN0}": "section_name"
        }
      },
      {
        "template": "what are the names of the {TABLE0} in reverse alphabetical order ?",
        "question": "What are the names of the sections in reverse alphabetical order ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "name dict": {
          "{TABLE0}": "sections",
          "{SC0}": "DESC",
          "{COLUMN0}": "section_name"
        }
      },
      {
        "template": "list the {COLUMN0} of poker players in descending order .",
        "question": "List the earnings of poker players in descending order .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "name dict": {
          "{TABLE0}": "poker player",
          "{SC0}": "DESC",
          "{COLUMN0}": "earnings"
        }
      },
      {
        "template": "what are the {COLUMN0} of poker players , ordered descending by value ?",
        "question": "What are the earnings of poker players , ordered descending by value ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "name dict": {
          "{TABLE0}": "poker player",
          "{SC0}": "DESC",
          "{COLUMN0}": "earnings"
        }
      },
      {
        "template": "list all the student details in reversed lexicographical order .",
        "question": "List all the student details in reversed lexicographical order .",
        "concise pattern": "ORDER BY",
        "query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "name dict": {
          "{TABLE0}": "students",
          "{SC0}": "DESC",
          "{COLUMN0}": "other_student_details"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} ORDER BY {COLUMN1} {SC0} LIMIT {VALUE1}",
    [
      {
        "template": "what is the maximum {COLUMN0} and the {COLUMN1} of the car models with {VALUE7} {COLUMN4} ?",
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "makeid",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "horsepower",
          "{COLUMN1}": "make",
          "{TABLE0}": "car names",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{COLUMN4}": "cylinders",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the largest amount of {COLUMN0} for the models with {VALUE7} {COLUMN4} and what {COLUMN1} is it ?",
        "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "makeid",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "horsepower",
          "{COLUMN1}": "make",
          "{TABLE0}": "car names",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{COLUMN4}": "cylinders",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "for {COLUMN3} {VALUE0} , how many {COLUMN0} does the car with the least {COLUMN4} have ?",
        "question": "For model volvo , how many cylinders does the car with the least accelerate have ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "makeid",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "'volvo'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "cylinders",
          "{COLUMN1}": "id",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "model",
          "{COLUMN4}": "accelerate",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "for a {VALUE0} {COLUMN3} , how many {COLUMN0} does the version with least {COLUMN4} have ?",
        "question": "For a volvo model , how many cylinders does the version with least accelerate have ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "makeid",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "'volvo'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "cylinders",
          "{COLUMN1}": "id",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "model",
          "{COLUMN4}": "accelerate",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "for the cars with {VALUE6} {COLUMN3} , which {COLUMN0} has the largest {COLUMN4} ?",
        "question": "For the cars with 4 cylinders , which model has the largest horsepower ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "cylinders",
          "{COLUMN4}": "horsepower",
          "{VALUE6}": "4",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "for all of the {VALUE6} {COLUMN3} cars , which {COLUMN0} has the most {COLUMN4} ?",
        "question": "For all of the 4 cylinder cars , which model has the most horsepower ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "cylinders",
          "{COLUMN4}": "horsepower",
          "{VALUE6}": "4",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the name of the {COLUMN0} who has the highest rank points and participated in the {VALUE0} {COLUMN1} .",
        "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney .",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "name dict": {
          "{VALUE1}": "0",
          "{SC0}": "DESC",
          "{COLUMN2}": "winner_rank_points",
          "{COLUMN1}": "tourney_name",
          "{TABLE0}": "matches",
          "{VALUE2}": "1",
          "{COLUMN0}": "winner_name",
          "{OP0}": "=",
          "{VALUE0}": "'Australian Open'"
        }
      },
      {
        "template": "find the {TABLE0} with the largest {COLUMN1} that uses {VALUE0} .",
        "question": "Find the city with the largest population that uses English .",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "\"English\"",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "population",
          "{TABLE0}": "city",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} , {COLUMN1} and expected life length of asian {TABLE0} with the largest area ?",
        "question": "Find the name , population and expected life length of asian country with the largest area ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "name dict": {
          "{COLUMN2}": "lifeexpectancy",
          "{TABLE0}": "country",
          "{VALUE0}": "\"Asia\"",
          "{VALUE1}": "0",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "population",
          "{VALUE2}": "1",
          "{COLUMN3}": "continent",
          "{COLUMN4}": "surfacearea",
          "{OP0}": "="
        }
      },
      {
        "template": "what are the {COLUMN0} , {COLUMN1} , and life expectancy of the largest asian {TABLE0} by land ?",
        "question": "What are the name , population , and life expectancy of the largest Asian country by land ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "name dict": {
          "{COLUMN2}": "lifeexpectancy",
          "{TABLE0}": "country",
          "{VALUE0}": "\"Asia\"",
          "{VALUE1}": "0",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "population",
          "{VALUE2}": "1",
          "{COLUMN3}": "continent",
          "{COLUMN4}": "surfacearea",
          "{OP0}": "="
        }
      },
      {
        "template": "what is the name of the {COLUMN0} with the most rank points who participated in the {VALUE0} tournament ?",
        "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "name dict": {
          "{VALUE1}": "0",
          "{SC0}": "DESC",
          "{COLUMN2}": "winner_rank_points",
          "{COLUMN1}": "tourney_name",
          "{TABLE0}": "matches",
          "{VALUE2}": "1",
          "{COLUMN0}": "winner_name",
          "{OP0}": "=",
          "{VALUE0}": "'Australian Open'"
        }
      },
      {
        "template": "which {COLUMN0} is the most popular in {VALUE0} ?",
        "question": "Which language is the most popular in Aruba ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "\"Aruba\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "name",
          "{COLUMN4}": "percentage",
          "{VALUE6}": "1",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what {COLUMN0} is predominantly spoken in {VALUE0} ?",
        "question": "What language is predominantly spoken in Aruba ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{VALUE0}": "\"Aruba\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "name",
          "{COLUMN4}": "percentage",
          "{VALUE6}": "1",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the most populace {TABLE0} that speaks {VALUE0} ?",
        "question": "What is the most populace city that speaks English ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "\"English\"",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{VALUE10}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "population",
          "{TABLE0}": "city",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} ( {SELECT1} {FROM} )",
    [
      {
        "template": "which {TABLE0} ' {COLUMN1} products is above the average ? give me the {TABLE0} {COLUMN0} .",
        "question": "Which shops ' number products is above the average ? Give me the shop names .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "name dict": {
          "{TABLE0}": "shop",
          "{OP0}": ">",
          "{COLUMN0}": "name",
          "{AGG0}": "AVG",
          "{COLUMN1}": "number_products"
        }
      },
      {
        "template": "what are the {COLUMN0} name and {COLUMN1} name of the {TABLE0} who have done treatment with {COLUMN2} below average ?",
        "question": "What are the first name and last name of the professionals who have done treatment with cost below average ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "treatments",
          "{AGG0}": "AVG",
          "{COLUMN2}": "cost_of_treatment",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{VALUE3}": "2",
          "{OP0}": "<",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "list all {COLUMN0} names by {TABLE0} above the average {COLUMN1} .",
        "question": "List all song names by singers above the average age .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "name dict": {
          "{TABLE0}": "singer",
          "{OP0}": ">",
          "{COLUMN0}": "song_name",
          "{AGG0}": "AVG",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "find the {COLUMN0} of the car whose {COLUMN3} is below the average {COLUMN3} .",
        "question": "Find the model of the car whose weight is below the average weight .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "weight",
          "{OP0}": "<"
        }
      },
      {
        "template": "what is the {COLUMN0} of the carr produced in the earliest {COLUMN1} and what {COLUMN1} was it ?",
        "question": "What is the maker of the carr produced in the earliest year and what year was it ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "id",
          "{AGG0}": "MIN",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "make",
          "{COLUMN1}": "year",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "makeid",
          "{OP0}": "=",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "find the {COLUMN0} of stores whose {COLUMN1} products is more than the average {COLUMN1} of products .",
        "question": "Find the names of stores whose number products is more than the average number of products .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "name dict": {
          "{TABLE0}": "shop",
          "{OP0}": ">",
          "{COLUMN0}": "name",
          "{AGG0}": "AVG",
          "{COLUMN1}": "number_products"
        }
      },
      {
        "template": "which {TABLE0} have operated a treatment that costs less than the average ? give me theor {COLUMN0} names and {COLUMN1} names .",
        "question": "Which professionals have operated a treatment that costs less than the average ? Give me theor first names and last names .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "treatments",
          "{AGG0}": "AVG",
          "{COLUMN2}": "cost_of_treatment",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{VALUE3}": "2",
          "{OP0}": "<",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what are all the {COLUMN0} names by {TABLE0} who are older than average ?",
        "question": "What are all the song names by singers who are older than average ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "name dict": {
          "{TABLE0}": "singer",
          "{OP0}": ">",
          "{COLUMN0}": "song_name",
          "{AGG0}": "AVG",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "what is the {COLUMN0} for the car with a {COLUMN3} smaller than the average ?",
        "question": "What is the model for the car with a weight smaller than the average ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "name dict": {
          "{TABLE1}": "cars data",
          "{COLUMN2}": "id",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "model",
          "{COLUMN1}": "makeid",
          "{TABLE0}": "car names",
          "{VALUE2}": "2",
          "{COLUMN3}": "weight",
          "{OP0}": "<"
        }
      },
      {
        "template": "find the {COLUMN0} and production time of the cars that were produced in the earliest {COLUMN1} ?",
        "question": "Find the make and production time of the cars that were produced in the earliest year ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "id",
          "{AGG0}": "MIN",
          "{VALUE4}": "1",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "make",
          "{COLUMN1}": "year",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "makeid",
          "{OP0}": "=",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "list the {COLUMN0} name of the {COLUMN1} owning the youngest dog .",
        "question": "List the last name of the owner owning the youngest dog .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "name dict": {
          "{COLUMN2}": "age",
          "{AGG0}": "MAX",
          "{VALUE4}": "2",
          "{TABLE1}": "dogs",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "last_name",
          "{COLUMN1}": "owner_id",
          "{TABLE0}": "owners",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "how many {TABLE0} have an {COLUMN0} below the average ?",
        "question": "How many dogs have an age below the average ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "name dict": {
          "{TABLE0}": "dogs",
          "{AGG1}": "AVG",
          "{OP0}": "<",
          "{COLUMN0}": "age",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "count the number of {TABLE0} of an {COLUMN0} below the average .",
        "question": "Count the number of dogs of an age below the average .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "name dict": {
          "{TABLE0}": "dogs",
          "{AGG1}": "AVG",
          "{OP0}": "<",
          "{COLUMN0}": "age",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "who owns the youngest dog ? give me his or her {COLUMN0} name .",
        "question": "Who owns the youngest dog ? Give me his or her last name .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "name dict": {
          "{COLUMN2}": "age",
          "{AGG0}": "MAX",
          "{VALUE4}": "2",
          "{TABLE1}": "dogs",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "last_name",
          "{COLUMN1}": "owner_id",
          "{TABLE0}": "owners",
          "{VALUE2}": "2",
          "{OP0}": "=",
          "{VALUE3}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} ORDER BY {COLUMN0} LIMIT {VALUE0}",
    [
      {
        "template": "find the {COLUMN0} code and {COLUMN1} of the most recently aired {TABLE0} .",
        "question": "Find the production code and channel of the most recently aired cartoon .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1",
        "name dict": {
          "{COLUMN2}": "original_air_date",
          "{VALUE0}": "1",
          "{COLUMN0}": "production_code",
          "{COLUMN1}": "channel",
          "{TABLE0}": "cartoon"
        }
      },
      {
        "template": "what are the {COLUMN0} , independence year , and surface area of the {TABLE0} with the smallest {COLUMN3} ?",
        "question": "What are the name , independence year , and surface area of the country with the smallest population ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "name dict": {
          "{COLUMN2}": "indepyear",
          "{COLUMN1}": "surfacearea",
          "{COLUMN3}": "population",
          "{COLUMN0}": "name",
          "{VALUE0}": "1",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "give the {COLUMN0} , year of independence , and surface area of the {TABLE0} that has the lowest {COLUMN3} .",
        "question": "Give the name , year of independence , and surface area of the country that has the lowest population .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "name dict": {
          "{COLUMN2}": "indepyear",
          "{COLUMN1}": "surfacearea",
          "{COLUMN3}": "population",
          "{COLUMN0}": "name",
          "{VALUE0}": "1",
          "{TABLE0}": "country"
        }
      },
      {
        "template": "show the name and the release year of the {COLUMN1} by the youngest {TABLE0} .",
        "question": "Show the name and the release year of the song by the youngest singer .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "name dict": {
          "{COLUMN2}": "age",
          "{VALUE0}": "1",
          "{COLUMN0}": "song_name",
          "{COLUMN1}": "song_release_year",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "find the type and {COLUMN1} of the youngest {COLUMN2} .",
        "question": "Find the type and weight of the youngest pet .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "name dict": {
          "{COLUMN2}": "pet_age",
          "{VALUE0}": "1",
          "{COLUMN0}": "pettype",
          "{COLUMN1}": "weight",
          "{TABLE0}": "pets"
        }
      },
      {
        "template": "find the {COLUMN0} name and {COLUMN1} code of the oldest player .",
        "question": "Find the first name and country code of the oldest player .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "name dict": {
          "{COLUMN2}": "birth_date",
          "{VALUE0}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "country_code",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "what is the {COLUMN0} name and {COLUMN1} code of the oldest player ?",
        "question": "What is the first name and country code of the oldest player ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "name dict": {
          "{COLUMN2}": "birth_date",
          "{VALUE0}": "1",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "country_code",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "find the name and rank of the {VALUE0} youngest winners across all {TABLE0} .",
        "question": "Find the name and rank of the 3 youngest winners across all matches .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "name dict": {
          "{COLUMN2}": "winner_age",
          "{VALUE0}": "3",
          "{COLUMN0}": "winner_name",
          "{COLUMN1}": "winner_rank",
          "{TABLE0}": "matches"
        }
      },
      {
        "template": "what is the produdction code and {COLUMN1} of the most recent {TABLE0} ?",
        "question": "What is the produdction code and channel of the most recent cartoon ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1",
        "name dict": {
          "{COLUMN2}": "original_air_date",
          "{VALUE0}": "1",
          "{COLUMN0}": "production_code",
          "{COLUMN1}": "channel",
          "{TABLE0}": "cartoon"
        }
      },
      {
        "template": "what are the names and release years for all the songs of the youngest {TABLE0} ?",
        "question": "What are the names and release years for all the songs of the youngest singer ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "name dict": {
          "{COLUMN2}": "age",
          "{VALUE0}": "1",
          "{COLUMN0}": "song_name",
          "{COLUMN1}": "song_release_year",
          "{TABLE0}": "singer"
        }
      },
      {
        "template": "find the {COLUMN0} of the youngest dog .",
        "question": "Find the weight of the youngest dog .",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "name dict": {
          "{COLUMN0}": "weight",
          "{VALUE0}": "1",
          "{COLUMN1}": "pet_age",
          "{TABLE0}": "pets"
        }
      },
      {
        "template": "what type of {COLUMN2} is the youngest animal , and how much does it weigh ?",
        "question": "What type of pet is the youngest animal , and how much does it weigh ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "name dict": {
          "{COLUMN2}": "pet_age",
          "{VALUE0}": "1",
          "{COLUMN0}": "pettype",
          "{COLUMN1}": "weight",
          "{TABLE0}": "pets"
        }
      },
      {
        "template": "what are the names and ranks of the three youngest winners across all {TABLE0} ?",
        "question": "What are the names and ranks of the three youngest winners across all matches ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "name dict": {
          "{COLUMN2}": "winner_age",
          "{VALUE0}": "3",
          "{COLUMN0}": "winner_name",
          "{COLUMN1}": "winner_rank",
          "{TABLE0}": "matches"
        }
      },
      {
        "template": "how much does the youngest dog weigh ?",
        "question": "How much does the youngest dog weigh ?",
        "concise pattern": "ORDER BY LIMIT",
        "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "name dict": {
          "{COLUMN0}": "weight",
          "{VALUE0}": "1",
          "{COLUMN1}": "pet_age",
          "{TABLE0}": "pets"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} ORDER BY {COLUMN0}",
    [
      {
        "template": "show {COLUMN0} of {TABLE1} and the {COLUMN1} they are arranged to teach in ascending alphabetical order of the {COLUMN3} 's {COLUMN0} .",
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher 's name .",
        "concise pattern": "ORDER BY",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "name dict": {
          "{TABLE1}": "teacher",
          "{COLUMN2}": "course_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "3",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "3",
          "{VALUE1}": "2",
          "{COLUMN0}": "name",
          "{COLUMN1}": "course",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "1",
          "{COLUMN3}": "teacher_id",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE1} and the {COLUMN1} they teach in ascending alphabetical order by the {COLUMN0} of the {COLUMN3} ?",
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "name dict": {
          "{TABLE1}": "teacher",
          "{COLUMN2}": "course_id",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "3",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "3",
          "{VALUE1}": "2",
          "{COLUMN0}": "name",
          "{COLUMN1}": "course",
          "{TABLE0}": "course arrange",
          "{VALUE2}": "1",
          "{COLUMN3}": "teacher_id",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "list the {COLUMN0} and {COLUMN1} name of all {TABLE0} in the order of {COLUMN2} date .",
        "question": "List the first and last name of all players in the order of birth date .",
        "concise pattern": "ORDER BY",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "name dict": {
          "{COLUMN0}": "first_name",
          "{COLUMN2}": "birth_date",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "sort {TABLE0} {COLUMN0} by their {COLUMN1} in ascending order .",
        "question": "Sort employee names by their age in ascending order .",
        "concise pattern": "ORDER BY",
        "query": "SELECT name FROM employee ORDER BY age",
        "name dict": {
          "{TABLE0}": "employee",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "list the {COLUMN0} of {TABLE0} and sort in ascending order of {COLUMN1} .",
        "question": "List the names of employees and sort in ascending order of age .",
        "concise pattern": "ORDER BY",
        "query": "SELECT name FROM employee ORDER BY age",
        "name dict": {
          "{TABLE0}": "employee",
          "{COLUMN0}": "name",
          "{COLUMN1}": "age"
        }
      },
      {
        "template": "what are the full names of all {TABLE0} , sorted by {COLUMN2} date ?",
        "question": "What are the full names of all players , sorted by birth date ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "name dict": {
          "{COLUMN0}": "first_name",
          "{COLUMN2}": "birth_date",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "list the {COLUMN0} of all {TABLE0} in alphabetical order .",
        "question": "List the title of all cartoons in alphabetical order .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Title FROM Cartoon ORDER BY title",
        "name dict": {
          "{TABLE0}": "cartoon",
          "{COLUMN0}": "title"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} sorted alphabetically ?",
        "question": "What are the titles of the cartoons sorted alphabetically ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Title FROM Cartoon ORDER BY title",
        "name dict": {
          "{TABLE0}": "cartoon",
          "{COLUMN0}": "title"
        }
      },
      {
        "template": "list all {TABLE0} {COLUMN0} and their directors ordered by their air date",
        "question": "list all cartoon titles and their directors ordered by their air date",
        "concise pattern": "ORDER BY",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "name dict": {
          "{COLUMN0}": "title",
          "{COLUMN2}": "original_air_date",
          "{COLUMN1}": "directed_by",
          "{TABLE0}": "cartoon"
        }
      },
      {
        "template": "list the {COLUMN0} of poker players ordered by the {COLUMN2} tables made in ascending order .",
        "question": "List the names of poker players ordered by the final tables made in ascending order .",
        "concise pattern": "ORDER BY",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "poker player",
          "{COLUMN2}": "final_table_made",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "what are the {COLUMN0} of poker players , ordered ascending by the number of {COLUMN2} tables they have made ?",
        "question": "What are the names of poker players , ordered ascending by the number of final tables they have made ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "name dict": {
          "{VALUE1}": "1",
          "{TABLE1}": "poker player",
          "{COLUMN2}": "final_table_made",
          "{COLUMN0}": "name",
          "{COLUMN1}": "people_id",
          "{VALUE4}": "2",
          "{VALUE2}": "2",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{TABLE0}": "people"
        }
      },
      {
        "template": "what is the name and directors of all the {TABLE0} that are ordered by air date ?",
        "question": "What is the name and directors of all the cartoons that are ordered by air date ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "name dict": {
          "{COLUMN0}": "title",
          "{COLUMN2}": "original_air_date",
          "{COLUMN1}": "directed_by",
          "{TABLE0}": "cartoon"
        }
      },
      {
        "template": "list the {COLUMN0} of all tv series sorted by rating .",
        "question": "List the Episode of all TV series sorted by rating .",
        "concise pattern": "ORDER BY",
        "query": "SELECT Episode FROM TV_series ORDER BY rating",
        "name dict": {
          "{TABLE0}": "tv series",
          "{COLUMN0}": "episode",
          "{COLUMN1}": "rating"
        }
      },
      {
        "template": "what are all of the {COLUMN0} ordered by ratings ?",
        "question": "What are all of the episodes ordered by ratings ?",
        "concise pattern": "ORDER BY",
        "query": "SELECT Episode FROM TV_series ORDER BY rating",
        "name dict": {
          "{TABLE0}": "tv series",
          "{COLUMN0}": "episode",
          "{COLUMN1}": "rating"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} GROUP BY {COLUMN1} HAVING {AGG0} ( * ) {OP1} {VALUE1}",
    [
      {
        "template": "show the {COLUMN0} of students who have a {COLUMN3} higher than {VALUE6} and have at least {VALUE4} {TABLE0} .",
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends .",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{OP1}": ">=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{COLUMN3}": "grade",
          "{OP0}": ">",
          "{VALUE6}": "5",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what are the {COLUMN0} of high schoolers who have a {COLUMN3} of over {VALUE6} and have {VALUE4} or more {TABLE0} ?",
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends ?",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "name dict": {
          "{TABLE1}": "high schooler",
          "{COLUMN2}": "id",
          "{OP1}": ">=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "name",
          "{COLUMN1}": "student_id",
          "{TABLE0}": "friend",
          "{VALUE2}": "2",
          "{COLUMN3}": "grade",
          "{OP0}": ">",
          "{VALUE6}": "5",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} do more than one {TABLE0} under {COLUMN1} {VALUE0} come from ?",
        "question": "Which cities do more than one employee under age 30 come from ?",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "name dict": {
          "{OP1}": ">",
          "{AGG0}": "COUNT",
          "{TABLE0}": "employee",
          "{VALUE0}": "30",
          "{VALUE1}": "1",
          "{COLUMN0}": "city",
          "{COLUMN1}": "age",
          "{OP0}": "<"
        }
      },
      {
        "template": "find the {COLUMN0} that have more than one {TABLE0} under {COLUMN1} {VALUE0} .",
        "question": "Find the cities that have more than one employee under age 30 .",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "name dict": {
          "{OP1}": ">",
          "{AGG0}": "COUNT",
          "{TABLE0}": "employee",
          "{VALUE0}": "30",
          "{VALUE1}": "1",
          "{COLUMN0}": "city",
          "{COLUMN1}": "age",
          "{OP0}": "<"
        }
      },
      {
        "template": "which {COLUMN4} in {VALUE0} have at least {VALUE8} car manufacturers ?",
        "question": "Which countries in europe have at least 3 car manufacturers ?",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "name dict": {
          "{COLUMN2}": "contid",
          "{AGG0}": "COUNT",
          "{TABLE1}": "continents",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "0",
          "{COLUMN1}": "continent",
          "{VALUE12}": "3",
          "{COLUMN4}": "country",
          "{OP0}": "=",
          "{TABLE2}": "car makers",
          "{OP1}": ">=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "countries",
          "{VALUE5}": "2",
          "{VALUE0}": "'europe'",
          "{VALUE9}": "2",
          "{COLUMN0}": "countryname",
          "{VALUE2}": "1",
          "{COLUMN3}": "countryid",
          "{VALUE11}": "1",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {COLUMN0} are spoken by only one {TABLE0} in {VALUE0} governments ?",
        "question": "Which languages are spoken by only one country in republic governments ?",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "\"Republic\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "governmentform",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what {COLUMN0} are only used by a single {TABLE0} with a {VALUE0} government ?",
        "question": "What languages are only used by a single country with a republic government ?",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "\"Republic\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "2",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "governmentform",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the names of all european {COLUMN4} with at least {VALUE8} manufacturers ?",
        "question": "What are the names of all European countries with at least 3 manufacturers ?",
        "concise pattern": "WHERE GROUP BY HAVING ( )",
        "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "name dict": {
          "{COLUMN2}": "contid",
          "{AGG0}": "COUNT",
          "{TABLE1}": "continents",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "0",
          "{COLUMN1}": "continent",
          "{VALUE12}": "3",
          "{COLUMN4}": "country",
          "{OP0}": "=",
          "{TABLE2}": "car makers",
          "{OP1}": ">=",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "countries",
          "{VALUE5}": "2",
          "{VALUE0}": "'europe'",
          "{VALUE9}": "2",
          "{COLUMN0}": "countryname",
          "{VALUE2}": "1",
          "{COLUMN3}": "countryid",
          "{VALUE11}": "1",
          "{VALUE6}": "3",
          "{VALUE7}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} NOT IN ( {SELECT1} {FROM} WHERE {COLUMN1} {OP0} {VALUE0} )",
    [
      {
        "template": "find the {COLUMN0} option of the tv {COLUMN2} that do not have any {TABLE1} {COLUMN3} by {VALUE0} .",
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones .",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "name dict": {
          "{VALUE1}": "0",
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{COLUMN1}": "id",
          "{COLUMN3}": "directed_by",
          "{COLUMN0}": "package_option",
          "{OP0}": "=",
          "{VALUE0}": "'Ben Jones'",
          "{TABLE0}": "tv channel"
        }
      },
      {
        "template": "what are the {COLUMN0} options of all tv {COLUMN2} that are not playing any {TABLE1} {COLUMN3} by {VALUE0} ?",
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "name dict": {
          "{VALUE1}": "0",
          "{TABLE1}": "cartoon",
          "{COLUMN2}": "channel",
          "{COLUMN1}": "id",
          "{COLUMN3}": "directed_by",
          "{COLUMN0}": "package_option",
          "{OP0}": "=",
          "{VALUE0}": "'Ben Jones'",
          "{TABLE0}": "tv channel"
        }
      },
      {
        "template": "find the {COLUMN0} and {COLUMN1} of {TABLE0} who do not have a {VALUE0} pet .",
        "question": "Find the major and age of students who do not have a cat pet .",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "name dict": {
          "{OP0}": "=",
          "{TABLE1}": "has pet",
          "{COLUMN2}": "stuid",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'cat'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "3",
          "{VALUE1}": "1",
          "{VALUE10}": "0",
          "{COLUMN0}": "major",
          "{COLUMN1}": "age",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{COLUMN3}": "petid",
          "{COLUMN4}": "pettype",
          "{VALUE6}": "3",
          "{TABLE2}": "pets",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "find the number of {TABLE2} who did not {TABLE2} any {COLUMN2} opened after {VALUE6} .",
        "question": "Find the number of visitors who did not visit any museum opened after 2010 .",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
        "name dict": {
          "{TABLE1}": "museum",
          "{COLUMN2}": "museum_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "id",
          "{COLUMN1}": "visitor_id",
          "{TABLE0}": "customer",
          "{VALUE2}": "2",
          "{COLUMN3}": "open_year",
          "{OP0}": ">",
          "{VALUE6}": "2010",
          "{TABLE2}": "visit"
        }
      },
      {
        "template": "how many {TABLE0} did not lose any {TABLE1} with {COLUMN2} '{VALUE0} ' ?",
        "question": "How many battles did not lose any ship with tonnage '225 ' ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
        "name dict": {
          "{VALUE1}": "0",
          "{TABLE1}": "ship",
          "{COLUMN2}": "tonnage",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "lost_in_battle",
          "{TABLE0}": "battle",
          "{COLUMN0}": "id",
          "{OP0}": "=",
          "{VALUE0}": "'225'"
        }
      },
      {
        "template": "what {COLUMN0} is every {TABLE0} who does not own a {VALUE0} as a pet , and also how old are they ?",
        "question": "What major is every student who does not own a cat as a pet , and also how old are they ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "name dict": {
          "{OP0}": "=",
          "{TABLE1}": "has pet",
          "{COLUMN2}": "stuid",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'cat'",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "3",
          "{VALUE1}": "1",
          "{VALUE10}": "0",
          "{COLUMN0}": "major",
          "{COLUMN1}": "age",
          "{TABLE0}": "student",
          "{VALUE2}": "1",
          "{COLUMN3}": "petid",
          "{COLUMN4}": "pettype",
          "{VALUE6}": "3",
          "{TABLE2}": "pets",
          "{VALUE7}": "3"
        }
      },
      {
        "template": "what is the total number of people living in the nations that do not use {VALUE0} ?",
        "question": "What is the total number of people living in the nations that do not use English ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "code",
          "{AGG0}": "SUM",
          "{VALUE4}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "population",
          "{COLUMN1}": "name",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "countrycode",
          "{COLUMN4}": "language",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "how many people live in countries that do not speak {VALUE0} ?",
        "question": "How many people live in countries that do not speak English ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "code",
          "{AGG0}": "SUM",
          "{VALUE4}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "population",
          "{COLUMN1}": "name",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "countrycode",
          "{COLUMN4}": "language",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "0"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} ORDER BY {AGG0} ( {COLUMN1} ) {SC0} LIMIT {VALUE0}",
    [
      {
        "template": "what are the {COLUMN3} , {COLUMN1} and membership {COLUMN2} of {TABLE1} who have spent the largest amount of money in {COLUMN4} in all museum tickets ?",
        "question": "What are the id , name and membership level of visitors who have spent the largest amount of money in total in all museum tickets ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "visit",
          "{COLUMN2}": "level_of_membership",
          "{AGG0}": "SUM",
          "{VALUE4}": "2",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "1",
          "{SC0}": "DESC",
          "{COLUMN0}": "visitor_id",
          "{COLUMN1}": "name",
          "{TABLE0}": "customer",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{COLUMN4}": "total_spent",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN0} has paid the largest amount of money in total for their {TABLE1} ? show the {COLUMN0} id and {COLUMN1} code .",
        "question": "Which owner has paid the largest amount of money in total for their dogs ? Show the owner id and zip code .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "dog_id",
          "{AGG0}": "SUM",
          "{VALUE1}": "1",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE9}": "1",
          "{VALUE10}": "3",
          "{SC0}": "DESC",
          "{COLUMN0}": "owner_id",
          "{COLUMN1}": "zip_code",
          "{TABLE0}": "owners",
          "{VALUE2}": "1",
          "{COLUMN3}": "cost_of_treatment",
          "{VALUE11}": "1",
          "{VALUE6}": "3",
          "{TABLE2}": "treatments",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the {COLUMN0} id and {COLUMN1} code of the {COLUMN0} who spent the most money in total for his or her {TABLE1} .",
        "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "dogs",
          "{COLUMN2}": "dog_id",
          "{AGG0}": "SUM",
          "{VALUE1}": "1",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE3}": "2",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE9}": "1",
          "{VALUE10}": "3",
          "{SC0}": "DESC",
          "{COLUMN0}": "owner_id",
          "{COLUMN1}": "zip_code",
          "{TABLE0}": "owners",
          "{VALUE2}": "1",
          "{COLUMN3}": "cost_of_treatment",
          "{VALUE11}": "1",
          "{VALUE6}": "3",
          "{TABLE2}": "treatments",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "give me the description of the {COLUMN1} type whose total {COLUMN2} is the lowest .",
        "question": "Give me the description of the treatment type whose total cost is the lowest .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "cost_of_treatment",
          "{AGG0}": "SUM",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "treatment_type_description",
          "{COLUMN1}": "treatment_type_code",
          "{TABLE0}": "treatment types",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      },
      {
        "template": "what is the description of the {COLUMN1} type that costs the least money in total ?",
        "question": "What is the description of the treatment type that costs the least money in total ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "cost_of_treatment",
          "{AGG0}": "SUM",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{SC0}": "ASC",
          "{COLUMN0}": "treatment_type_description",
          "{COLUMN1}": "treatment_type_code",
          "{TABLE0}": "treatment types",
          "{VALUE2}": "2",
          "{VALUE6}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} HAVING {AGG0} ( {COLUMN1} ) {OP0} {VALUE0}",
    [
      {
        "template": "what are the {COLUMN0} and {COLUMN1} of the {TABLE0} that led to more than {VALUE11} people {COLUMN4} in total .",
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
        "name dict": {
          "{COLUMN2}": "lost_in_battle",
          "{AGG0}": "SUM",
          "{TABLE1}": "ship",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "3",
          "{COLUMN1}": "name",
          "{COLUMN4}": "killed",
          "{OP0}": ">",
          "{TABLE2}": "death",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "battle",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE9}": "1",
          "{COLUMN0}": "id",
          "{VALUE2}": "1",
          "{COLUMN3}": "caused_by_ship_id",
          "{VALUE11}": "10",
          "{VALUE6}": "3",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "find the average life expectancy and total {COLUMN0} for each {COLUMN2} where the average life expectancy is shorter than {VALUE0} ?",
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72 ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "name dict": {
          "{AGG1}": "AVG",
          "{COLUMN2}": "continent",
          "{AGG0}": "SUM",
          "{TABLE0}": "country",
          "{VALUE0}": "72",
          "{COLUMN0}": "population",
          "{COLUMN1}": "lifeexpectancy",
          "{OP0}": "<",
          "{AGG2}": "AVG"
        }
      },
      {
        "template": "what are the different {COLUMN2} and the total popuation and average life expectancy corresponding to each , for {COLUMN2} that have an average life expectancy less than {VALUE0} ?",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each , for continents that have an average life expectancy less than 72 ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "name dict": {
          "{AGG1}": "AVG",
          "{COLUMN2}": "continent",
          "{AGG0}": "SUM",
          "{TABLE0}": "country",
          "{VALUE0}": "72",
          "{COLUMN0}": "population",
          "{COLUMN1}": "lifeexpectancy",
          "{OP0}": "<",
          "{AGG2}": "AVG"
        }
      },
      {
        "template": "find the government form name and total {COLUMN0} for each government form whose average life expectancy is longer than {VALUE0} .",
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72 .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "name dict": {
          "{AGG1}": "AVG",
          "{COLUMN2}": "lifeexpectancy",
          "{AGG0}": "SUM",
          "{TABLE0}": "country",
          "{VALUE0}": "72",
          "{COLUMN0}": "population",
          "{COLUMN1}": "governmentform",
          "{OP0}": ">"
        }
      },
      {
        "template": "what are the different government forms and what is the total {COLUMN0} of each for government forms that have an average life expectancy greater than {VALUE0} ?",
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "name dict": {
          "{AGG1}": "AVG",
          "{COLUMN2}": "lifeexpectancy",
          "{AGG0}": "SUM",
          "{TABLE0}": "country",
          "{VALUE0}": "72",
          "{COLUMN0}": "population",
          "{COLUMN1}": "governmentform",
          "{OP0}": ">"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} GROUP BY {COLUMN1} ORDER BY {AGG0} ( * ) {SC0} LIMIT {VALUE1}",
    [
      {
        "template": "show the {COLUMN2} {COLUMN0} and {COLUMN1} with most number of {TABLE0} in {COLUMN3} {VALUE7} or after .",
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after .",
        "concise pattern": "WHERE GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "stadium",
          "{COLUMN2}": "stadium_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "capacity",
          "{TABLE0}": "concert",
          "{VALUE2}": "1",
          "{COLUMN3}": "year",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2014"
        }
      },
      {
        "template": "what is the {COLUMN0} and {COLUMN1} of the {COLUMN2} with the most {TABLE0} after 2013 ?",
        "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?",
        "concise pattern": "WHERE GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "stadium",
          "{COLUMN2}": "stadium_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "capacity",
          "{TABLE0}": "concert",
          "{VALUE2}": "1",
          "{COLUMN3}": "year",
          "{OP0}": ">=",
          "{VALUE6}": "1",
          "{VALUE7}": "2014"
        }
      },
      {
        "template": "which {COLUMN0} is the most popular on the asian {COLUMN3} ?",
        "question": "Which language is the most popular on the Asian continent ?",
        "concise pattern": "WHERE GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "\"Asia\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "continent",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what is the {COLUMN0} that is used by the largest number of asian nations ?",
        "question": "What is the language that is used by the largest number of Asian nations ?",
        "concise pattern": "WHERE GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "\"Asia\"",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE9}": "1",
          "{VALUE1}": "2",
          "{SC0}": "DESC",
          "{COLUMN0}": "language",
          "{COLUMN1}": "code",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN3}": "continent",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "0"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} GROUP BY {COLUMN1}",
    [
      {
        "template": "what is the total number of countries where {VALUE0} is spoken by the largest {COLUMN0} of people ?",
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people ?",
        "concise pattern": "WHERE GROUP BY",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "MAX",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "language",
          "{TABLE0}": "countrylanguage",
          "{COLUMN0}": "percentage",
          "{OP0}": "=",
          "{VALUE0}": "\"Spanish\""
        }
      },
      {
        "template": "count the number of countries for which {VALUE0} is the predominantly spoken {COLUMN1} .",
        "question": "Count the number of countries for which Spanish is the predominantly spoken language .",
        "concise pattern": "WHERE GROUP BY",
        "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG1}": "MAX",
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "language",
          "{TABLE0}": "countrylanguage",
          "{COLUMN0}": "percentage",
          "{OP0}": "=",
          "{VALUE0}": "\"Spanish\""
        }
      },
      {
        "template": "what are the codes of countries where {VALUE0} is spoken by the largest {COLUMN1} of people ?",
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people ?",
        "concise pattern": "WHERE GROUP BY",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "language",
          "{AGG0}": "MAX",
          "{COLUMN1}": "percentage",
          "{TABLE0}": "countrylanguage",
          "{COLUMN0}": "countrycode",
          "{OP0}": "=",
          "{VALUE0}": "\"Spanish\""
        }
      },
      {
        "template": "return the codes of countries for which {VALUE0} is the predominantly spoken {COLUMN2} .",
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language .",
        "concise pattern": "WHERE GROUP BY",
        "query": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "language",
          "{AGG0}": "MAX",
          "{COLUMN1}": "percentage",
          "{TABLE0}": "countrylanguage",
          "{COLUMN0}": "countrycode",
          "{OP0}": "=",
          "{VALUE0}": "\"Spanish\""
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} EXCEPT {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE1}",
    [
      {
        "template": "find all {COLUMN0} that have {TABLE1} from airport '{VALUE0} ' but not from '{VALUE1} ' .",
        "question": "Find all airlines that have flights from airport 'CVO ' but not from 'APG ' .",
        "concise pattern": "WHERE EXCEPT WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "name dict": {
          "{COLUMN2}": "sourceairport",
          "{TABLE1}": "flights",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"APG\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "uid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "airlines",
          "{VALUE5}": "1",
          "{VALUE0}": "\"CVO\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "airline",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which {COLUMN0} have departures from {VALUE0} but not from {VALUE1} airports ?",
        "question": "Which airlines have departures from CVO but not from APG airports ?",
        "concise pattern": "WHERE EXCEPT WHERE",
        "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "name dict": {
          "{COLUMN2}": "sourceairport",
          "{TABLE1}": "flights",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"APG\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "uid",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "airlines",
          "{VALUE5}": "1",
          "{VALUE0}": "\"CVO\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "airline",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} of the countries that do not speak {VALUE1} and whose government forms are not {VALUE0} ?",
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic ?",
        "concise pattern": "WHERE EXCEPT WHERE",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE3}": "1",
          "{VALUE0}": "\"Republic\"",
          "{VALUE1}": "\"English\"",
          "{COLUMN0}": "code",
          "{COLUMN1}": "governmentform",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{COLUMN3}": "language",
          "{OP0}": "!="
        }
      },
      {
        "template": "return the {COLUMN0} of countries that do not speak {VALUE1} and do not have republics for governments .",
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments .",
        "concise pattern": "WHERE EXCEPT WHERE",
        "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "name dict": {
          "{TABLE1}": "countrylanguage",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE3}": "1",
          "{VALUE0}": "\"Republic\"",
          "{VALUE1}": "\"English\"",
          "{COLUMN0}": "code",
          "{COLUMN1}": "governmentform",
          "{TABLE0}": "country",
          "{VALUE2}": "0",
          "{COLUMN3}": "language",
          "{OP0}": "!="
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} {OP1} ( {SELECT1} {FROM} WHERE {COLUMN2} {OP2} {VALUE1} )",
    [
      {
        "template": "what are the african countries that have a {COLUMN2} less than any {TABLE0} in {VALUE1} ?",
        "question": "What are the African countries that have a population less than any country in Asia ?",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
        "name dict": {
          "{COLUMN2}": "population",
          "{OP1}": "<",
          "{AGG0}": "MAX",
          "{TABLE0}": "country",
          "{VALUE3}": "1",
          "{OP2}": "=",
          "{VALUE1}": "\"Asia\"",
          "{COLUMN0}": "name",
          "{COLUMN1}": "continent",
          "{VALUE2}": "0",
          "{OP0}": "=",
          "{VALUE0}": "\"Africa\""
        }
      },
      {
        "template": "which african countries have a smaller {COLUMN2} than that of any {TABLE0} in {VALUE1} ?",
        "question": "Which African countries have a smaller population than that of any country in Asia ?",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
        "name dict": {
          "{COLUMN2}": "population",
          "{OP1}": "<",
          "{AGG0}": "MIN",
          "{TABLE0}": "country",
          "{VALUE3}": "1",
          "{OP2}": "=",
          "{VALUE1}": "\"Asia\"",
          "{COLUMN0}": "name",
          "{COLUMN1}": "continent",
          "{VALUE2}": "0",
          "{OP0}": "=",
          "{VALUE0}": "\"Africa\""
        }
      },
      {
        "template": "which asian countries have a {COLUMN2} that is larger than any {TABLE0} in {VALUE1} ?",
        "question": "Which Asian countries have a population that is larger than any country in Africa ?",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
        "name dict": {
          "{COLUMN2}": "population",
          "{OP1}": ">",
          "{AGG0}": "MAX",
          "{TABLE0}": "country",
          "{VALUE3}": "1",
          "{OP2}": "=",
          "{VALUE1}": "\"Africa\"",
          "{COLUMN0}": "name",
          "{COLUMN1}": "continent",
          "{VALUE2}": "0",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "what are the asian countries which have a {COLUMN2} larger than that of any {TABLE0} in {VALUE1} ?",
        "question": "What are the Asian countries which have a population larger than that of any country in Africa ?",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
        "name dict": {
          "{COLUMN2}": "population",
          "{OP1}": ">",
          "{AGG0}": "MIN",
          "{TABLE0}": "country",
          "{VALUE3}": "1",
          "{OP2}": "=",
          "{VALUE1}": "\"Africa\"",
          "{COLUMN0}": "name",
          "{COLUMN1}": "continent",
          "{VALUE2}": "0",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} IN ( {SELECT1} {FROM} )",
    [
      {
        "template": "what is the average {COLUMN0} of the {TABLE0} who have gone through any {TABLE1} ?",
        "question": "What is the average age of the dogs who have gone through any treatments ?",
        "concise pattern": "WHERE IN ( )",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "dog_id",
          "{TABLE1}": "treatments"
        }
      },
      {
        "template": "find the average {COLUMN0} of the {TABLE0} who went through {TABLE1} .",
        "question": "Find the average age of the dogs who went through treatments .",
        "concise pattern": "WHERE IN ( )",
        "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "name dict": {
          "{TABLE0}": "dogs",
          "{COLUMN0}": "age",
          "{AGG0}": "AVG",
          "{COLUMN1}": "dog_id",
          "{TABLE1}": "treatments"
        }
      },
      {
        "template": "find the average {COLUMN0} of all students who have some {TABLE1} .",
        "question": "Find the average grade of all students who have some friends .",
        "concise pattern": "WHERE IN ( )",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "name dict": {
          "{TABLE1}": "friend",
          "{COLUMN2}": "student_id",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "grade",
          "{COLUMN1}": "id",
          "{TABLE0}": "high schooler",
          "{VALUE2}": "2"
        }
      },
      {
        "template": "what is the average {COLUMN0} of students who have {TABLE1} ?",
        "question": "What is the average grade of students who have friends ?",
        "concise pattern": "WHERE IN ( )",
        "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "name dict": {
          "{TABLE1}": "friend",
          "{COLUMN2}": "student_id",
          "{AGG0}": "AVG",
          "{VALUE4}": "2",
          "{VALUE3}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "grade",
          "{COLUMN1}": "id",
          "{TABLE0}": "high schooler",
          "{VALUE2}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} BETWEEN {VALUE0} AND {VALUE1}",
    [
      {
        "template": "show {COLUMN0} and {COLUMN1} for all {TABLE0} with a {COLUMN2} between {VALUE0} and {VALUE1} .",
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000 .",
        "concise pattern": "WHERE",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "name dict": {
          "{VALUE1}": "10000",
          "{COLUMN2}": "capacity",
          "{COLUMN1}": "name",
          "{TABLE0}": "stadium",
          "{COLUMN0}": "location",
          "{VALUE0}": "5000"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} of all stations with {COLUMN2} between {VALUE0} and {VALUE1} ?",
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "name dict": {
          "{VALUE1}": "10000",
          "{COLUMN2}": "capacity",
          "{COLUMN1}": "name",
          "{TABLE0}": "stadium",
          "{COLUMN0}": "location",
          "{VALUE0}": "5000"
        }
      },
      {
        "template": "what are the cities whose {COLUMN1} is between {VALUE0} and {VALUE1} ?",
        "question": "What are the cities whose population is between 160000 and 900000 ?",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "name dict": {
          "{VALUE1}": "900000",
          "{VALUE0}": "160000",
          "{COLUMN0}": "name",
          "{COLUMN1}": "population",
          "{TABLE0}": "city"
        }
      },
      {
        "template": "return the {COLUMN0} of cities that have a {COLUMN1} between {VALUE0} and 900000 .",
        "question": "Return the names of cities that have a population between 160000 and 900000 .",
        "concise pattern": "WHERE",
        "query": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000",
        "name dict": {
          "{VALUE1}": "90000",
          "{VALUE0}": "160000",
          "{COLUMN0}": "name",
          "{COLUMN1}": "population",
          "{TABLE0}": "city"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} ORDER BY {AGG0} ( * ) LIMIT {VALUE0}",
    [
      {
        "template": "find the {COLUMN0} and country of the {COLUMN3} that has fewest number of {TABLE1} ?",
        "question": "Find the abbreviation and country of the airline that has fewest number of flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "uid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "abbreviation",
          "{COLUMN1}": "country",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{COLUMN3}": "airline",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the {COLUMN0} of the airilne has the fewest {TABLE1} and what country is it in ?",
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "uid",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{COLUMN0}": "abbreviation",
          "{COLUMN1}": "country",
          "{TABLE0}": "airlines",
          "{VALUE2}": "1",
          "{COLUMN3}": "airline",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "what is the code of airport that has fewest number of {TABLE1} ?",
        "question": "What is the code of airport that has fewest number of flights ?",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "airportcode",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "give the code of the airport with the least {TABLE1} .",
        "question": "Give the code of the airport with the least flights .",
        "concise pattern": "GROUP BY ORDER BY ( ) LIMIT",
        "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "name dict": {
          "{TABLE1}": "flights",
          "{COLUMN2}": "sourceairport",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{VALUE8}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "airportcode",
          "{COLUMN1}": "destairport",
          "{TABLE0}": "airports",
          "{VALUE2}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} ( {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE0} )",
    [
      {
        "template": "find the {COLUMN0} of {TABLE0} which have more staff than the minimum staff number of all {TABLE0} opened after {VALUE0} .",
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010 .",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
        "name dict": {
          "{COLUMN2}": "open_year",
          "{OP1}": ">",
          "{AGG0}": "MIN",
          "{TABLE0}": "museum",
          "{VALUE0}": "2010",
          "{COLUMN0}": "name",
          "{COLUMN1}": "num_of_staff",
          "{OP0}": ">"
        }
      },
      {
        "template": "what are the countries that have greater surface area than any {TABLE0} in {VALUE0} ?",
        "question": "What are the countries that have greater surface area than any country in Europe ?",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG0}": "MIN",
          "{COLUMN2}": "continent",
          "{OP1}": "=",
          "{COLUMN1}": "surfacearea",
          "{TABLE0}": "country",
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "\"Europe\""
        }
      },
      {
        "template": "which countries have greater area than that of any {TABLE0} in {VALUE0} ?",
        "question": "Which countries have greater area than that of any country in Europe ?",
        "concise pattern": "WHERE ( WHERE )",
        "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "name dict": {
          "{VALUE1}": "0",
          "{AGG0}": "MIN",
          "{COLUMN2}": "continent",
          "{OP1}": "=",
          "{COLUMN1}": "surfacearea",
          "{TABLE0}": "country",
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "\"Europe\""
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} UNION {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE1}",
    [
      {
        "template": "find the {COLUMN0} name of the {TABLE0} who permanently live in the country {VALUE0} or have the {COLUMN4} phone number {VALUE1} .",
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
        "concise pattern": "WHERE UNION WHERE",
        "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'",
        "name dict": {
          "{TABLE1}": "addresses",
          "{COLUMN2}": "address_id",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Haiti'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "'09700166582'",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "permanent_address_id",
          "{TABLE0}": "students",
          "{VALUE2}": "1",
          "{COLUMN3}": "country",
          "{COLUMN4}": "cell_mobile_number",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} names of the {TABLE0} who live in {VALUE0} permanently or have the {COLUMN4} phone number {VALUE1} ?",
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
        "concise pattern": "WHERE UNION WHERE",
        "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'",
        "name dict": {
          "{TABLE1}": "addresses",
          "{COLUMN2}": "address_id",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{VALUE0}": "'Haiti'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "'09700166582'",
          "{COLUMN0}": "first_name",
          "{COLUMN1}": "permanent_address_id",
          "{TABLE0}": "students",
          "{VALUE2}": "1",
          "{COLUMN3}": "country",
          "{COLUMN4}": "cell_mobile_number",
          "{VALUE6}": "2",
          "{OP0}": "=",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} UNION {SELECT1} {FROM} GROUP BY {COLUMN1} HAVING {AGG0} ( * ) {OP1} {VALUE1}",
    [
      {
        "template": "which {TABLE0} live in the {COLUMN3} of {VALUE0} or have done treatment on more than {VALUE10} {TABLE1} ? list his or her id , {COLUMN1} name and {COLUMN2} phone .",
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments ? List his or her id , last name and cell phone .",
        "concise pattern": "WHERE UNION GROUP BY HAVING ( )",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "cell_number",
          "{OP1}": ">",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'Indiana'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "0",
          "{VALUE10}": "2",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{COLUMN3}": "state",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "find the id , {COLUMN1} name and {COLUMN2} phone of the {TABLE0} who live in the {COLUMN3} of {VALUE0} or have performed more than two {TABLE1} .",
        "question": "Find the id , last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments .",
        "concise pattern": "WHERE UNION GROUP BY HAVING ( )",
        "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "cell_number",
          "{OP1}": ">",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{VALUE0}": "'Indiana'",
          "{VALUE5}": "1",
          "{VALUE3}": "1",
          "{VALUE9}": "1",
          "{VALUE1}": "0",
          "{VALUE10}": "2",
          "{COLUMN0}": "professional_id",
          "{COLUMN1}": "last_name",
          "{TABLE0}": "professionals",
          "{VALUE2}": "1",
          "{COLUMN3}": "state",
          "{OP0}": "=",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} ORDER BY {COLUMN1} {SC0}",
    [
      {
        "template": "find the {COLUMN0} and membership {COLUMN1} of the visitors whose membership {COLUMN1} is higher than {VALUE0} , and sort by their {COLUMN2} from old to young .",
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4 , and sort by their age from old to young .",
        "concise pattern": "WHERE ORDER BY",
        "query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN2}": "age",
          "{COLUMN1}": "level_of_membership",
          "{TABLE0}": "customer",
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "4"
        }
      },
      {
        "template": "find the {COLUMN0} of the visitors whose membership {COLUMN1} is higher than {VALUE0} , and order the results by the {COLUMN1} from high to low .",
        "question": "Find the names of the visitors whose membership level is higher than 4 , and order the results by the level from high to low .",
        "concise pattern": "WHERE ORDER BY",
        "query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "level_of_membership",
          "{TABLE0}": "customer",
          "{OP0}": ">",
          "{VALUE0}": "4"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} ORDER BY {COLUMN1} LIMIT {VALUE1}",
    [
      {
        "template": "what is the {COLUMN0} of {TABLE0} that has the shortest life expectancy in {VALUE0} ?",
        "question": "What is the name of country that has the shortest life expectancy in Asia ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "lifeexpectancy",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN0}": "name",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      },
      {
        "template": "give the {COLUMN0} of the {TABLE0} in {VALUE0} with the lowest life expectancy .",
        "question": "Give the name of the country in Asia with the lowest life expectancy .",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "lifeexpectancy",
          "{COLUMN1}": "continent",
          "{TABLE0}": "country",
          "{VALUE2}": "1",
          "{COLUMN0}": "name",
          "{OP0}": "=",
          "{VALUE0}": "\"Asia\""
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} ORDER BY {COLUMN1}",
    [
      {
        "template": "list the {COLUMN0} and {COLUMN1} name of all {TABLE0} who are left / {VALUE0} {COLUMN2} in the order of {COLUMN3} date .",
        "question": "List the first and last name of all players who are left / L hand in the order of birth date .",
        "concise pattern": "WHERE ORDER BY",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "hand",
          "{COLUMN1}": "last_name",
          "{COLUMN3}": "birth_date",
          "{COLUMN0}": "first_name",
          "{OP0}": "=",
          "{VALUE0}": "'L'",
          "{TABLE0}": "players"
        }
      },
      {
        "template": "what are the full names of all left {COLUMN2} {TABLE0} , in order of {COLUMN3} date ?",
        "question": "What are the full names of all left handed players , in order of birth date ?",
        "concise pattern": "WHERE ORDER BY",
        "query": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "name dict": {
          "{VALUE1}": "0",
          "{COLUMN2}": "hand",
          "{COLUMN1}": "last_name",
          "{COLUMN3}": "birth_date",
          "{COLUMN0}": "first_name",
          "{OP0}": "=",
          "{VALUE0}": "'L'",
          "{TABLE0}": "players"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} OR {COLUMN1} {OP1} {VALUE1} ORDER BY {COLUMN2} {SC0} LIMIT {VALUE2}",
    [
      {
        "template": "what is the maximum {COLUMN0} of the cars that had {VALUE0} {COLUMN1} or that were produced before {VALUE1} ?",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
        "concise pattern": "WHERE OR ORDER BY LIMIT",
        "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;",
        "name dict": {
          "{VALUE1}": "1980",
          "{SC0}": "DESC",
          "{COLUMN2}": "year",
          "{OP1}": "<",
          "{COLUMN1}": "cylinders",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN0}": "mpg",
          "{OP0}": "=",
          "{VALUE0}": "8"
        }
      },
      {
        "template": "what is the maximum miles per gallon of the car with {VALUE0} {COLUMN1} or produced before {VALUE1} ?",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
        "concise pattern": "WHERE OR ORDER BY LIMIT",
        "query": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;",
        "name dict": {
          "{VALUE1}": "1980",
          "{SC0}": "DESC",
          "{COLUMN2}": "year",
          "{OP1}": "<",
          "{COLUMN1}": "cylinders",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN0}": "mpg",
          "{OP0}": "=",
          "{VALUE0}": "8"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} INTERSECT {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE1} )",
    [
      {
        "template": "how many countries speak both {VALUE0} and {VALUE1} ?",
        "question": "How many countries speak both English and Dutch ?",
        "concise pattern": "WHERE INTERSECT WHERE )",
        "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "name dict": {
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"Dutch\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what is the number of nations that use {VALUE0} and {VALUE1} ?",
        "question": "What is the number of nations that use English and Dutch ?",
        "concise pattern": "WHERE INTERSECT WHERE )",
        "query": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "name dict": {
          "{COLUMN2}": "countrycode",
          "{AGG0}": "COUNT",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "1",
          "{VALUE1}": "\"Dutch\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE9}": "1",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "language",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} EXCEPT {SELECT1} {FROM}",
    [
      {
        "template": "find the {COLUMN0} name of the {TABLE0} who currently live in the {COLUMN3} of north carolina but have not registered in any degree program .",
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program .",
        "concise pattern": "WHERE EXCEPT",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "name dict": {
          "{COLUMN2}": "address_id",
          "{TABLE1}": "addresses",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "4",
          "{COLUMN1}": "current_address_id",
          "{VALUE12}": "4",
          "{COLUMN4}": "student_id",
          "{OP0}": "=",
          "{TABLE2}": "student enrolment",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "students",
          "{VALUE5}": "2",
          "{VALUE0}": "'NorthCarolina'",
          "{VALUE9}": "3",
          "{COLUMN0}": "last_name",
          "{VALUE2}": "1",
          "{COLUMN3}": "state_province_county",
          "{VALUE11}": "3",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      },
      {
        "template": "what are the {COLUMN0} name of the {TABLE0} who live in north carolina but have not registered in any degree programs ?",
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs ?",
        "concise pattern": "WHERE EXCEPT",
        "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "name dict": {
          "{COLUMN2}": "address_id",
          "{TABLE1}": "addresses",
          "{VALUE3}": "2",
          "{VALUE1}": "1",
          "{VALUE10}": "4",
          "{COLUMN1}": "current_address_id",
          "{VALUE12}": "4",
          "{COLUMN4}": "student_id",
          "{OP0}": "=",
          "{TABLE2}": "student enrolment",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "students",
          "{VALUE5}": "2",
          "{VALUE0}": "'NorthCarolina'",
          "{VALUE9}": "3",
          "{COLUMN0}": "last_name",
          "{VALUE2}": "1",
          "{COLUMN3}": "state_province_county",
          "{VALUE11}": "3",
          "{VALUE6}": "2",
          "{VALUE7}": "0"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} {OP1} {VALUE1} UNION {SELECT1} {FROM} WHERE {COLUMN2} {OP2} {VALUE2} AND {COLUMN3} {OP3} {VALUE3}",
    [
      {
        "template": "what are the countries where either {VALUE0} or {VALUE2} is the official {COLUMN2} ?",
        "question": "What are the countries where either English or Dutch is the official language ?",
        "concise pattern": "WHERE UNION WHERE",
        "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "language",
          "{OP3}": "=",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "2",
          "{VALUE13}": "1",
          "{VALUE3}": "\"T\"",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "countrycode",
          "{VALUE12}": "2",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "\"T\"",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "country",
          "{VALUE5}": "2",
          "{VALUE0}": "\"English\"",
          "{OP2}": "=",
          "{VALUE9}": "0",
          "{COLUMN0}": "code",
          "{VALUE14}": "2",
          "{VALUE2}": "\"Dutch\"",
          "{COLUMN3}": "isofficial",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "which countries have either {VALUE0} or {VALUE2} as an official {COLUMN2} ?",
        "question": "Which countries have either English or Dutch as an official language ?",
        "concise pattern": "WHERE UNION WHERE",
        "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "language",
          "{OP3}": "=",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "2",
          "{VALUE13}": "1",
          "{VALUE3}": "\"T\"",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "countrycode",
          "{VALUE12}": "2",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE1}": "\"T\"",
          "{VALUE4}": "1",
          "{VALUE8}": "2",
          "{TABLE0}": "country",
          "{VALUE5}": "2",
          "{VALUE0}": "\"English\"",
          "{OP2}": "=",
          "{VALUE9}": "0",
          "{COLUMN0}": "code",
          "{VALUE14}": "2",
          "{VALUE2}": "\"Dutch\"",
          "{COLUMN3}": "isofficial",
          "{VALUE11}": "1",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} {OP1} {VALUE1} ORDER BY {COLUMN2} {SC0} LIMIT {VALUE2}",
    [
      {
        "template": "what is the smallest {COLUMN0} of the car produced with 8 {COLUMN1} on {VALUE1} ?",
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;",
        "name dict": {
          "{VALUE1}": "1974",
          "{SC0}": "ASC",
          "{COLUMN2}": "year",
          "{OP1}": "=",
          "{COLUMN1}": "cylinders",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN0}": "weight",
          "{OP0}": "=",
          "{VALUE0}": "4"
        }
      },
      {
        "template": "what is the minimu {COLUMN0} of the car with 8 {COLUMN1} produced in {VALUE1} ?",
        "question": "What is the minimu weight of the car with 8 cylinders produced in 1974 ?",
        "concise pattern": "WHERE ORDER BY LIMIT",
        "query": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;",
        "name dict": {
          "{VALUE1}": "1974",
          "{SC0}": "ASC",
          "{COLUMN2}": "year",
          "{OP1}": "=",
          "{COLUMN1}": "cylinders",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN0}": "weight",
          "{OP0}": "=",
          "{VALUE0}": "4"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} {OP1} {VALUE1} INTERSECT {SELECT1} {FROM} WHERE {COLUMN2} {OP2} {VALUE2} AND {COLUMN3} {OP3} {VALUE3}",
    [
      {
        "template": "what are the {COLUMN0} of nations where both {VALUE0} and {VALUE2} are official {COLUMN3} ?",
        "question": "What are the names of nations where both English and French are official languages ?",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "name dict": {
          "{VALUE4}": "1",
          "{VALUE20}": "2",
          "{VALUE19}": "2",
          "{OP3}": "=",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "2",
          "{VALUE13}": "1",
          "{VALUE3}": "\"T\"",
          "{VALUE21}": "1",
          "{VALUE17}": "2",
          "{VALUE16}": "1",
          "{VALUE10}": "0",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{COLUMN4}": "isofficial",
          "{OP0}": "=",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE1}": "\"T\"",
          "{VALUE18}": "2",
          "{VALUE8}": "2",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{OP2}": "=",
          "{VALUE9}": "2",
          "{COLUMN0}": "name",
          "{VALUE14}": "1",
          "{VALUE2}": "\"French\"",
          "{COLUMN3}": "language",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "give the {COLUMN0} of countries with {VALUE0} and {VALUE2} as official {COLUMN3} .",
        "question": "Give the names of countries with English and French as official languages .",
        "concise pattern": "WHERE INTERSECT WHERE",
        "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "name dict": {
          "{VALUE4}": "1",
          "{VALUE20}": "2",
          "{VALUE19}": "2",
          "{OP3}": "=",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "2",
          "{VALUE13}": "1",
          "{VALUE3}": "\"T\"",
          "{VALUE21}": "1",
          "{VALUE17}": "2",
          "{VALUE16}": "1",
          "{VALUE10}": "0",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{COLUMN4}": "isofficial",
          "{OP0}": "=",
          "{COLUMN2}": "countrycode",
          "{OP1}": "=",
          "{VALUE1}": "\"T\"",
          "{VALUE18}": "2",
          "{VALUE8}": "2",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{OP2}": "=",
          "{VALUE9}": "2",
          "{COLUMN0}": "name",
          "{VALUE14}": "1",
          "{VALUE2}": "\"French\"",
          "{COLUMN3}": "language",
          "{VALUE11}": "2",
          "{VALUE6}": "2",
          "{VALUE7}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} {OP1} {VALUE1} AND {COLUMN2} {OP2} {VALUE2}",
    [
      {
        "template": "return the different {COLUMN0} of cities that are in {VALUE0} and for which {VALUE2} is the official {COLUMN4} .",
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language .",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "name dict": {
          "{COLUMN5}": "continent",
          "{COLUMN2}": "countrycode",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "3",
          "{VALUE16}": "0",
          "{VALUE10}": "3",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{COLUMN4}": "language",
          "{OP0}": "=",
          "{TABLE2}": "city",
          "{OP1}": "=",
          "{VALUE1}": "'T'",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "country",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Asia\"",
          "{OP2}": "=",
          "{VALUE9}": "1",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "'Chinese'",
          "{COLUMN3}": "isofficial",
          "{VALUE11}": "2",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "whic`h unique cities are in asian countries where {VALUE2} is the official {COLUMN4} ?",
        "question": "Whic`h unique cities are in Asian countries where Chinese is the official language ?",
        "concise pattern": "WHERE",
        "query": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "name dict": {
          "{COLUMN5}": "continent",
          "{COLUMN2}": "countrycode",
          "{TABLE1}": "countrylanguage",
          "{VALUE15}": "1",
          "{VALUE13}": "2",
          "{VALUE3}": "3",
          "{VALUE16}": "0",
          "{VALUE10}": "3",
          "{COLUMN1}": "code",
          "{VALUE12}": "1",
          "{COLUMN4}": "language",
          "{OP0}": "=",
          "{TABLE2}": "city",
          "{OP1}": "=",
          "{VALUE1}": "'T'",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{TABLE0}": "country",
          "{VALUE5}": "2",
          "{VALUE0}": "\"Asia\"",
          "{OP2}": "=",
          "{VALUE9}": "1",
          "{COLUMN0}": "name",
          "{VALUE14}": "2",
          "{VALUE2}": "'Chinese'",
          "{COLUMN3}": "isofficial",
          "{VALUE11}": "2",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} NOT IN ( {SELECT1} {FROM} WHERE {COLUMN2} {OP1} {VALUE1} AND {COLUMN3} {OP2} {VALUE2} )",
    [
      {
        "template": "what are the {COLUMN0} of cities in {VALUE0} for which {VALUE2} is not the official {COLUMN5} ?",
        "question": "What are the names of cities in Europe for which English is not the official language ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "name dict": {
          "{COLUMN5}": "language",
          "{VALUE17}": "1",
          "{COLUMN2}": "code",
          "{TABLE1}": "city",
          "{VALUE15}": "4",
          "{VALUE13}": "4",
          "{VALUE3}": "2",
          "{VALUE16}": "4",
          "{VALUE10}": "1",
          "{COLUMN1}": "countrycode",
          "{VALUE12}": "3",
          "{VALUE18}": "4",
          "{OP0}": "=",
          "{TABLE2}": "countrylanguage",
          "{OP1}": "=",
          "{COLUMN4}": "isofficial",
          "{VALUE7}": "1",
          "{VALUE1}": "'T'",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{TABLE0}": "country",
          "{VALUE5}": "2",
          "{VALUE0}": "'Europe'",
          "{OP2}": "=",
          "{VALUE9}": "0",
          "{COLUMN0}": "name",
          "{VALUE14}": "3",
          "{VALUE2}": "'English'",
          "{COLUMN3}": "continent",
          "{VALUE11}": "3",
          "{VALUE6}": "2",
          "{VALUE19}": "2"
        }
      },
      {
        "template": "which cities are in european countries where {VALUE2} is not the official {COLUMN5} ?",
        "question": "Which cities are in European countries where English is not the official language ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "name dict": {
          "{COLUMN5}": "language",
          "{VALUE17}": "1",
          "{COLUMN2}": "code",
          "{TABLE1}": "city",
          "{VALUE15}": "4",
          "{VALUE13}": "4",
          "{VALUE3}": "2",
          "{VALUE16}": "4",
          "{VALUE10}": "1",
          "{COLUMN1}": "countrycode",
          "{VALUE12}": "3",
          "{VALUE18}": "4",
          "{OP0}": "=",
          "{TABLE2}": "countrylanguage",
          "{OP1}": "=",
          "{COLUMN4}": "isofficial",
          "{VALUE7}": "1",
          "{VALUE1}": "'T'",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{TABLE0}": "country",
          "{VALUE5}": "2",
          "{VALUE0}": "'Europe'",
          "{OP2}": "=",
          "{VALUE9}": "0",
          "{COLUMN0}": "name",
          "{VALUE14}": "3",
          "{VALUE2}": "'English'",
          "{COLUMN3}": "continent",
          "{VALUE11}": "3",
          "{VALUE6}": "2",
          "{VALUE19}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} AND {COLUMN1} NOT IN ( {SELECT1} {FROM} WHERE {COLUMN2} {OP1} {VALUE1} )",
    [
      {
        "template": "find the first name and {COLUMN1} of {TABLE0} who have a {VALUE0} but do not have a {VALUE1} as a pet .",
        "question": "Find the first name and age of students who have a dog but do not have a cat as a pet .",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "name dict": {
          "{VALUE4}": "1",
          "{VALUE22}": "3",
          "{VALUE19}": "3",
          "{TABLE1}": "has pet",
          "{VALUE15}": "1",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE21}": "2",
          "{VALUE17}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "2",
          "{COLUMN1}": "age",
          "{VALUE12}": "0",
          "{COLUMN4}": "pettype",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{COLUMN2}": "stuid",
          "{VALUE11}": "3",
          "{OP1}": "=",
          "{VALUE1}": "'cat'",
          "{VALUE18}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "2",
          "{VALUE0}": "'dog'",
          "{VALUE9}": "3",
          "{VALUE23}": "1",
          "{COLUMN0}": "fname",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "petid",
          "{VALUE20}": "3",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what is the first name of every {TABLE0} who has a {VALUE0} but does not have a {VALUE1} ?",
        "question": "What is the first name of every student who has a dog but does not have a cat ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "name dict": {
          "{VALUE4}": "1",
          "{VALUE22}": "3",
          "{VALUE19}": "3",
          "{TABLE1}": "has pet",
          "{VALUE15}": "1",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE21}": "2",
          "{VALUE17}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "2",
          "{COLUMN1}": "age",
          "{VALUE12}": "0",
          "{COLUMN4}": "pettype",
          "{OP0}": "=",
          "{TABLE2}": "pets",
          "{COLUMN2}": "stuid",
          "{VALUE11}": "3",
          "{OP1}": "=",
          "{VALUE1}": "'cat'",
          "{VALUE18}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "student",
          "{VALUE5}": "2",
          "{VALUE0}": "'dog'",
          "{VALUE9}": "3",
          "{VALUE23}": "1",
          "{COLUMN0}": "fname",
          "{VALUE14}": "1",
          "{VALUE2}": "1",
          "{COLUMN3}": "petid",
          "{VALUE20}": "3",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {COLUMN1}",
    [
      {
        "template": "whose {COLUMN2} address is different from his or her {COLUMN1} address ? list his or her {COLUMN0} name .",
        "question": "Whose permanent address is different from his or her current address ? List his or her first name .",
        "concise pattern": "WHERE",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "name dict": {
          "{COLUMN0}": "first_name",
          "{OP0}": "!=",
          "{COLUMN2}": "permanent_address_id",
          "{COLUMN1}": "current_address_id",
          "{TABLE0}": "students"
        }
      },
      {
        "template": "what is the {COLUMN0} name of the student whose {COLUMN2} address is different from his or her {COLUMN1} one ?",
        "question": "What is the first name of the student whose permanent address is different from his or her current one ?",
        "concise pattern": "WHERE",
        "query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "name dict": {
          "{COLUMN0}": "first_name",
          "{OP0}": "!=",
          "{COLUMN2}": "permanent_address_id",
          "{COLUMN1}": "current_address_id",
          "{TABLE0}": "students"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} ( {SELECT1} {FROM} ORDER BY {COLUMN1} {SC0} LIMIT {VALUE0} )",
    [
      {
        "template": "how many cars have a larger {COLUMN0} than the car with the largest {COLUMN1} ?",
        "question": "How many cars have a larger accelerate than the car with the largest horsepower ?",
        "concise pattern": "WHERE ( ORDER BY LIMIT )",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "accelerate",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "horsepower",
          "{TABLE0}": "cars data",
          "{OP0}": ">",
          "{VALUE0}": "1"
        }
      },
      {
        "template": "what is the number of cars with a greater {COLUMN0} than the one with the most {COLUMN1} ?",
        "question": "What is the number of cars with a greater accelerate than the one with the most horsepower ?",
        "concise pattern": "WHERE ( ORDER BY LIMIT )",
        "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "name dict": {
          "{SC0}": "DESC",
          "{COLUMN0}": "accelerate",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "horsepower",
          "{TABLE0}": "cars data",
          "{OP0}": ">",
          "{VALUE0}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} ( {SELECT1} {FROM} GROUP BY {COLUMN1} ORDER BY {AGG0} ( * ) {SC0} LIMIT {VALUE0} )",
    [
      {
        "template": "list the {COLUMN0} of the {TABLE0} of the rarest {COLUMN3} and the treatment dates of them .",
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them .",
        "concise pattern": "WHERE ( GROUP BY ORDER BY ( ) LIMIT )",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "dog_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "date_of_treatment",
          "{TABLE0}": "dogs",
          "{VALUE2}": "1",
          "{COLUMN3}": "breed_code",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "which {TABLE0} are of the rarest {COLUMN3} ? show their {COLUMN0} and treatment dates .",
        "question": "Which dogs are of the rarest breed ? Show their names and treatment dates .",
        "concise pattern": "WHERE ( GROUP BY ORDER BY ( ) LIMIT )",
        "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "dog_id",
          "{AGG0}": "COUNT",
          "{VALUE4}": "1",
          "{VALUE0}": "1",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{SC0}": "ASC",
          "{COLUMN0}": "name",
          "{COLUMN1}": "date_of_treatment",
          "{TABLE0}": "dogs",
          "{VALUE2}": "1",
          "{COLUMN3}": "breed_code",
          "{OP0}": "=",
          "{VALUE6}": "1",
          "{VALUE7}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} ( {SELECT1} {FROM} ) GROUP BY {COLUMN1}",
    [
      {
        "template": "find the number of cities in each {COLUMN0} whose {COLUMN1} is greater than the average {COLUMN1} of cities ?",
        "question": "Find the number of cities in each district whose population is greater than the average population of cities ?",
        "concise pattern": "WHERE ( ) GROUP BY",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "name dict": {
          "{AGG1}": "AVG",
          "{COLUMN0}": "district",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "population",
          "{TABLE0}": "city",
          "{OP0}": ">"
        }
      },
      {
        "template": "how many cities in each {COLUMN0} have a {COLUMN1} that is above the average {COLUMN1} across all cities ?",
        "question": "How many cities in each district have a population that is above the average population across all cities ?",
        "concise pattern": "WHERE ( ) GROUP BY",
        "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "name dict": {
          "{AGG1}": "AVG",
          "{COLUMN0}": "district",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "population",
          "{TABLE0}": "city",
          "{OP0}": ">"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} ( {SELECT1} {FROM} ) AND {COLUMN1} {OP1} {VALUE0}",
    [
      {
        "template": "among the cars with more than lowest {COLUMN3} , which ones do not have more than {VALUE8} {COLUMN4} ? list the car {COLUMN1} and {COLUMN1} name .",
        "question": "Among the cars with more than lowest horsepower , which ones do not have more than 3 cylinders ? List the car makeid and make name .",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "id",
          "{OP1}": "<=",
          "{AGG0}": "MIN",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "makeid",
          "{COLUMN1}": "make",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "horsepower",
          "{COLUMN4}": "cylinders",
          "{VALUE6}": "1",
          "{OP0}": ">",
          "{VALUE7}": "1"
        }
      },
      {
        "template": "among the cars that do not have the minimum {COLUMN3} , what are the {COLUMN1} {COLUMN2} and names of al those with less than 4 {COLUMN4} ?",
        "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of al those with less than 4 cylinders ?",
        "concise pattern": "WHERE ( )",
        "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "name dict": {
          "{TABLE1}": "car names",
          "{COLUMN2}": "id",
          "{OP1}": "<=",
          "{AGG0}": "MIN",
          "{VALUE4}": "1",
          "{VALUE8}": "3",
          "{VALUE0}": "2",
          "{VALUE5}": "2",
          "{VALUE3}": "2",
          "{VALUE1}": "2",
          "{COLUMN0}": "makeid",
          "{COLUMN1}": "make",
          "{TABLE0}": "cars data",
          "{VALUE2}": "1",
          "{COLUMN3}": "horsepower",
          "{COLUMN4}": "cylinders",
          "{VALUE6}": "1",
          "{OP0}": ">",
          "{VALUE7}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} NOT IN ( {SELECT1} {FROM} WHERE {COLUMN1} {OP0} {VALUE0} AND {COLUMN2} {OP1} {VALUE1} )",
    [
      {
        "template": "what is average life expectancy in the countries where {VALUE0} is not the official {COLUMN4} ?",
        "question": "What is average life expectancy in the countries where English is not the official language ?",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "name dict": {
          "{COLUMN5}": "isofficial",
          "{COLUMN2}": "code",
          "{AGG0}": "AVG",
          "{TABLE1}": "countrylanguage",
          "{VALUE3}": "1",
          "{VALUE1}": "\"T\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "name",
          "{COLUMN4}": "language",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE9}": "2",
          "{COLUMN0}": "lifeexpectancy",
          "{VALUE2}": "1",
          "{COLUMN3}": "countrycode",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "give the mean life expectancy of countries in which {VALUE0} is not the official {COLUMN4} .",
        "question": "Give the mean life expectancy of countries in which English is not the official language .",
        "concise pattern": "WHERE NOT IN ( WHERE )",
        "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "name dict": {
          "{COLUMN5}": "isofficial",
          "{COLUMN2}": "code",
          "{AGG0}": "AVG",
          "{TABLE1}": "countrylanguage",
          "{VALUE3}": "1",
          "{VALUE1}": "\"T\"",
          "{VALUE10}": "1",
          "{COLUMN1}": "name",
          "{COLUMN4}": "language",
          "{OP0}": "=",
          "{OP1}": "=",
          "{VALUE4}": "2",
          "{VALUE8}": "0",
          "{TABLE0}": "country",
          "{VALUE5}": "1",
          "{VALUE0}": "\"English\"",
          "{VALUE9}": "2",
          "{COLUMN0}": "lifeexpectancy",
          "{VALUE2}": "1",
          "{COLUMN3}": "countrycode",
          "{VALUE6}": "2",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} NOT IN ( {SELECT1} {FROM} GROUP BY {COLUMN1} HAVING {AGG0} ( {COLUMN2} ) {OP0} {VALUE0} )",
    [
      {
        "template": "which {TABLE0} have not {COLUMN2} their owner more than {VALUE0} for treatment ? list the {COLUMN1} {COLUMN0} .",
        "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
        "concise pattern": "WHERE NOT IN ( GROUP BY HAVING ( ) )",
        "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "cost_of_treatment",
          "{AGG0}": "SUM",
          "{COLUMN1}": "dog_id",
          "{TABLE0}": "dogs",
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "1000"
        }
      },
      {
        "template": "what are the {COLUMN0} of the {TABLE0} for which the owner spent more than {VALUE0} for treatment ?",
        "question": "What are the names of the dogs for which the owner spent more than 1000 for treatment ?",
        "concise pattern": "WHERE NOT IN ( GROUP BY HAVING ( ) )",
        "query": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )",
        "name dict": {
          "{TABLE1}": "treatments",
          "{COLUMN2}": "cost_of_treatment",
          "{AGG0}": "SUM",
          "{COLUMN1}": "dog_id",
          "{TABLE0}": "dogs",
          "{COLUMN0}": "name",
          "{OP0}": ">",
          "{VALUE0}": "1000"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} ORDER BY {COLUMN1}",
    [
      {
        "template": "show all {COLUMN0} ids and the number of {TABLE0} in each {COLUMN0} . order by {COLUMN0} id .",
        "question": "Show all document ids and the number of paragraphs in each document . Order by document id .",
        "concise pattern": "GROUP BY ORDER BY",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "name dict": {
          "{TABLE0}": "paragraphs",
          "{COLUMN0}": "document_id",
          "{AGG0}": "COUNT"
        }
      },
      {
        "template": "return the different {COLUMN0} ids along with the number of {TABLE0} corresponding to each , ordered by id .",
        "question": "Return the different document ids along with the number of paragraphs corresponding to each , ordered by id .",
        "concise pattern": "GROUP BY ORDER BY",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "name dict": {
          "{TABLE0}": "paragraphs",
          "{COLUMN0}": "document_id",
          "{AGG0}": "COUNT"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} ORDER BY {AGG0} ( * ) {SC0}",
    [
      {
        "template": "what are the {COLUMN0} record formats of {COLUMN1} , sorted by their frequency ?",
        "question": "What are the major record formats of orchestras , sorted by their frequency ?",
        "concise pattern": "GROUP BY ORDER BY ( )",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "name dict": {
          "{SC0}": "ASC",
          "{COLUMN0}": "major_record_format",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "orchestra"
        }
      },
      {
        "template": "please show the record formats of {COLUMN1} in ascending order of count .",
        "question": "Please show the record formats of orchestras in ascending order of count .",
        "concise pattern": "GROUP BY ORDER BY ( )",
        "query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "name dict": {
          "{SC0}": "ASC",
          "{COLUMN0}": "major_record_format",
          "{AGG0}": "COUNT",
          "{COLUMN1}": "orchestra"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} HAVING {AGG0} ( * ) {OP0} {VALUE0} UNION {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE1}",
    [
      {
        "template": "what are the {COLUMN3} and names of the {COLUMN2} which have more than {VALUE8} car {COLUMN4} or produce the '{VALUE0} ' {COLUMN5} ?",
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat ' model ?",
        "concise pattern": "GROUP BY HAVING ( ) UNION WHERE",
        "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "name dict": {
          "{COLUMN5}": "model",
          "{VALUE17}": "3",
          "{COLUMN2}": "country",
          "{AGG0}": "COUNT",
          "{TABLE1}": "car makers",
          "{VALUE15}": "3",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "countryname",
          "{VALUE12}": "2",
          "{VALUE18}": "3",
          "{OP0}": ">",
          "{TABLE2}": "model list",
          "{OP1}": "=",
          "{COLUMN4}": "maker",
          "{VALUE7}": "1",
          "{VALUE1}": "1",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "countries",
          "{VALUE5}": "1",
          "{VALUE0}": "'fiat'",
          "{VALUE9}": "1",
          "{COLUMN0}": "countryid",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{VALUE11}": "1",
          "{VALUE6}": "2",
          "{VALUE19}": "0"
        }
      },
      {
        "template": "what are the {COLUMN3} and names of all {COLUMN2} that either have more than {VALUE8} car {COLUMN4} or produce fiats ?",
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats ?",
        "concise pattern": "GROUP BY HAVING ( ) UNION WHERE",
        "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "name dict": {
          "{COLUMN5}": "model",
          "{VALUE17}": "3",
          "{COLUMN2}": "country",
          "{AGG0}": "COUNT",
          "{TABLE1}": "car makers",
          "{VALUE15}": "3",
          "{VALUE13}": "1",
          "{VALUE3}": "1",
          "{VALUE16}": "2",
          "{VALUE10}": "1",
          "{COLUMN1}": "countryname",
          "{VALUE12}": "2",
          "{VALUE18}": "3",
          "{OP0}": ">",
          "{TABLE2}": "model list",
          "{OP1}": "=",
          "{COLUMN4}": "maker",
          "{VALUE7}": "1",
          "{VALUE1}": "1",
          "{VALUE4}": "2",
          "{VALUE8}": "3",
          "{TABLE0}": "countries",
          "{VALUE5}": "1",
          "{VALUE0}": "'fiat'",
          "{VALUE9}": "1",
          "{COLUMN0}": "countryid",
          "{VALUE14}": "2",
          "{VALUE2}": "1",
          "{COLUMN3}": "id",
          "{VALUE11}": "1",
          "{VALUE6}": "2",
          "{VALUE19}": "0"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} HAVING {AGG0} ( * ) {OP0} {VALUE0} INTERSECT {SELECT1} {FROM} GROUP BY {COLUMN1} HAVING {AGG1} ( * ) {OP1} {VALUE1}",
    [
      {
        "template": "which are the car {COLUMN1} which produce at least {VALUE13} {COLUMN2} and more than {VALUE16} car makes ? list the {COLUMN0} and the {COLUMN1} .",
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makes ? List the id and the maker .",
        "concise pattern": "GROUP BY HAVING ( ) INTERSECT GROUP BY HAVING ( )",
        "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "model",
          "{AGG0}": "COUNT",
          "{TABLE1}": "model list",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "2",
          "{VALUE16}": "3",
          "{VALUE10}": "1",
          "{COLUMN1}": "maker",
          "{VALUE12}": "1",
          "{VALUE18}": "3",
          "{OP0}": ">=",
          "{TABLE2}": "car names",
          "{AGG1}": "COUNT",
          "{OP1}": ">",
          "{VALUE1}": "1",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{TABLE0}": "car makers",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE9}": "1",
          "{COLUMN0}": "id",
          "{VALUE14}": "3",
          "{VALUE2}": "1",
          "{VALUE11}": "2",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      },
      {
        "template": "what are the {COLUMN0} and {COLUMN1} of all car {COLUMN1} that produce at least {VALUE13} {COLUMN2} and make more than {VALUE16} cars ?",
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars ?",
        "concise pattern": "GROUP BY HAVING ( ) INTERSECT GROUP BY HAVING ( )",
        "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "name dict": {
          "{VALUE17}": "1",
          "{COLUMN2}": "model",
          "{AGG0}": "COUNT",
          "{TABLE1}": "model list",
          "{VALUE15}": "2",
          "{VALUE13}": "2",
          "{VALUE3}": "2",
          "{VALUE16}": "3",
          "{VALUE10}": "1",
          "{COLUMN1}": "maker",
          "{VALUE12}": "1",
          "{VALUE18}": "3",
          "{OP0}": ">=",
          "{TABLE2}": "car names",
          "{AGG1}": "COUNT",
          "{OP1}": ">",
          "{VALUE1}": "1",
          "{VALUE4}": "1",
          "{VALUE8}": "1",
          "{TABLE0}": "car makers",
          "{VALUE5}": "2",
          "{VALUE0}": "1",
          "{VALUE9}": "1",
          "{COLUMN0}": "id",
          "{VALUE14}": "3",
          "{VALUE2}": "1",
          "{VALUE11}": "2",
          "{VALUE6}": "1",
          "{VALUE7}": "2"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} HAVING {AGG0} ( * ) {OP0} {VALUE0} )",
    [
      {
        "template": "how many {COLUMN1} has more than {VALUE4} car makers ?",
        "question": "How many countries has more than 2 car makers ?",
        "concise pattern": "GROUP BY HAVING ( ) )",
        "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );",
        "name dict": {
          "{AGG1}": "COUNT",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "car makers",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "countryid",
          "{COLUMN1}": "country",
          "{TABLE0}": "countries",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "2",
          "{VALUE3}": "1"
        }
      },
      {
        "template": "what is the number of {COLUMN1} with more than {VALUE4} car makers ?",
        "question": "What is the number of countries with more than 2 car makers ?",
        "concise pattern": "GROUP BY HAVING ( ) )",
        "query": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );",
        "name dict": {
          "{AGG1}": "COUNT",
          "{AGG0}": "COUNT",
          "{VALUE4}": "2",
          "{TABLE1}": "car makers",
          "{VALUE5}": "1",
          "{VALUE0}": "1",
          "{VALUE1}": "1",
          "{COLUMN0}": "countryid",
          "{COLUMN1}": "country",
          "{TABLE0}": "countries",
          "{VALUE2}": "2",
          "{OP0}": ">",
          "{VALUE6}": "2",
          "{VALUE3}": "1"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} GROUP BY {COLUMN0} HAVING {AGG0} ( * ) BETWEEN {VALUE0} AND {VALUE1}",
    [
      {
        "template": "what is the {COLUMN0} id with {VALUE0} to {VALUE1} {TABLE0} ?",
        "question": "What is the document id with 1 to 2 paragraphs ?",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "name dict": {
          "{VALUE1}": "2",
          "{VALUE0}": "1",
          "{COLUMN0}": "document_id",
          "{AGG0}": "COUNT",
          "{TABLE0}": "paragraphs"
        }
      },
      {
        "template": "give the ids of documents that have between one and two {TABLE0} .",
        "question": "Give the ids of documents that have between one and two paragraphs .",
        "concise pattern": "GROUP BY HAVING ( )",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "name dict": {
          "{VALUE1}": "2",
          "{VALUE0}": "1",
          "{COLUMN0}": "document_id",
          "{AGG0}": "COUNT",
          "{TABLE0}": "paragraphs"
        }
      }
    ]
  ],
  [
    "{SELECT0} {FROM} WHERE {COLUMN0} {OP0} {VALUE0} UNION {SELECT1} {FROM} WHERE {COLUMN1} {OP1} {VALUE1} AND {COLUMN2} {OP2} {VALUE2}",
    [
      {
        "template": "what are the names of {TABLE0} that are either houses or apartments with more than {VALUE3} {COLUMN2} ?",
        "question": "What are the names of properties that are either houses or apartments with more than 1 room ?",
        "concise pattern": "WHERE UNION WHERE",
        "query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
        "name dict": {
          "{COLUMN2}": "room_count",
          "{OP1}": "=",
          "{VALUE4}": "1",
          "{VALUE3}": "1",
          "{VALUE0}": "\"House\"",
          "{OP2}": ">",
          "{VALUE1}": "\"Apartment\"",
          "{COLUMN0}": "property_name",
          "{COLUMN1}": "property_type_code",
          "{TABLE0}": "properties",
          "{VALUE2}": "0",
          "{OP0}": "="
        }
      }
    ]
  ]
]