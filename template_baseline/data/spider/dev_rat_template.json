[{"question_toks": ["How", "many", "singers", "do", "we", "have", "?"], "db_id": "concert_singer", "query": "SELECT Count(*) FROM singer"}, {"question_toks": ["What", "is", "the", "total", "number", "of", "singers", "?"], "db_id": "concert_singer", "query": "SELECT Count(*) FROM singer"}, {"question_toks": ["Show", "name", ",", "country", ",", "age", "for", "all", "singers", "ordered", "by", "age", "from", "the", "oldest", "to", "the", "youngest", "."], "db_id": "concert_singer", "query": "SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc"}, {"question_toks": ["What", "are", "the", "names", ",", "countries", ",", "and", "ages", "for", "every", "singer", "in", "descending", "order", "of", "age", "?"], "db_id": "concert_singer", "query": "SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc"}, {"question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singers", "from", "France", "?"], "db_id": "concert_singer", "query": "SELECT Avg(singer.Age), Min(singer.Age), Min(singer.Age) FROM singer WHERE singer.Country = 'terminal'"}, {"question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "for", "all", "French", "singers", "?"], "db_id": "concert_singer", "query": "SELECT Max(singer.Age), Min(singer.Age), Min(singer.Age) FROM singer WHERE singer.Is_male = 'terminal'"}, {"question_toks": ["Show", "the", "name", "and", "the", "release", "year", "of", "the", "song", "by", "the", "youngest", "singer", "."], "db_id": "concert_singer", "query": "SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "names", "and", "release", "years", "for", "all", "the", "songs", "of", "the", "youngest", "singer", "?"], "db_id": "concert_singer", "query": "SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Desc LIMIT 1"}, {"question_toks": ["What", "are", "all", "distinct", "countries", "where", "singers", "above", "age", "20", "are", "from", "?"], "db_id": "concert_singer", "query": "SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "countries", "with", "singers", "above", "age", "20", "?"], "db_id": "concert_singer", "query": "SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'"}, {"question_toks": ["Show", "all", "countries", "and", "the", "number", "of", "singers", "in", "each", "country", "."], "db_id": "concert_singer", "query": "SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country"}, {"question_toks": ["How", "many", "singers", "are", "from", "each", "country", "?"], "db_id": "concert_singer", "query": "SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country"}, {"question_toks": ["List", "all", "song", "names", "by", "singers", "above", "the", "average", "age", "."], "db_id": "concert_singer", "query": "SELECT singer.Song_Name FROM singer ORDER BY singer.Age Desc LIMIT 1"}, {"question_toks": ["What", "are", "all", "the", "song", "names", "by", "singers", "who", "are", "older", "than", "average", "?"], "db_id": "concert_singer", "query": "SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)"}, {"question_toks": ["Show", "location", "and", "name", "for", "all", "stadiums", "with", "a", "capacity", "between", "5000", "and", "10000", "."], "db_id": "concert_singer", "query": "SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'"}, {"question_toks": ["What", "are", "the", "locations", "and", "names", "of", "all", "stations", "with", "capacity", "between", "5000", "and", "10000", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "and", "the", "maximum", "capacity", "of", "all", "stadiums", "?"], "db_id": "concert_singer", "query": "SELECT Max(stadium.Capacity), Max(stadium.Average) FROM stadium"}, {"question_toks": ["What", "is", "the", "average", "and", "maximum", "capacities", "for", "all", "stations", "?"], "db_id": "concert_singer", "query": "SELECT Avg(stadium.Capacity), Min(stadium.Capacity) FROM stadium"}, {"question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "highest", "average", "attendance", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Average Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "and", "capacity", "for", "the", "stadium", "with", "the", "highest", "average", "attendance", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Average Desc LIMIT 1"}, {"question_toks": ["How", "many", "concerts", "are", "there", "in", "year", "2014", "or", "2015", "?"], "db_id": "concert_singer", "query": "SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'"}, {"question_toks": ["How", "many", "concerts", "occurred", "in", "2014", "or", "2015", "?"], "db_id": "concert_singer", "query": "SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'"}, {"question_toks": ["Show", "the", "stadium", "name", "and", "the", "number", "of", "concerts", "in", "each", "stadium", "."], "db_id": "concert_singer", "query": "SELECT stadium.Name, Count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY concert.Stadium_ID"}, {"question_toks": ["For", "each", "stadium", ",", "how", "many", "concerts", "play", "there", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name, Count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY concert.Stadium_ID"}, {"question_toks": ["Show", "the", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concerts", "in", "year", "2014", "or", "after", "."], "db_id": "concert_singer", "query": "SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 'terminal' GROUP BY stadium.Stadium_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Stadium_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "year", "has", "most", "number", "of", "concerts", "?"], "db_id": "concert_singer", "query": "SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "year", "that", "had", "the", "most", "concerts", "?"], "db_id": "concert_singer", "query": "SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "the", "stadium", "names", "without", "any", "concert", "."], "db_id": "concert_singer", "query": "SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "stadiums", "without", "any", "concerts", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)"}, {"question_toks": ["Show", "countries", "where", "a", "singer", "above", "age", "40", "and", "a", "singer", "below", "30", "are", "from", "."], "db_id": "concert_singer", "query": "SELECT singer.Country FROM singer WHERE singer.Age > 'terminal' INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < 'terminal'"}, {"question_toks": ["Show", "names", "for", "all", "stadiums", "except", "for", "stadiums", "having", "a", "concert", "in", "year", "2014", "."], "db_id": "concert_singer", "query": "SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "all", "stadiums", "that", "did", "not", "have", "a", "concert", "in", "2014", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert WHERE concert.concert_Name = 'terminal')"}, {"question_toks": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "db_id": "concert_singer", "query": "SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer_in_concert.concert_ID"}, {"question_toks": ["What", "are", "the", "names", ",", "themes", ",", "and", "number", "of", "singers", "for", "each", "and", "every", "concert", "?"], "db_id": "concert_singer", "query": "SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer_in_concert.concert_ID"}, {"question_toks": ["List", "singer", "names", "and", "number", "of", "concerts", "for", "each", "singer", "."], "db_id": "concert_singer", "query": "SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer_in_concert.Singer_ID"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "db_id": "concert_singer", "query": "SELECT singer.Name, Count(*) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name"}, {"question_toks": ["List", "all", "singer", "names", "in", "concerts", "in", "year", "2014", "."], "db_id": "concert_singer", "query": "SELECT singer.Name FROM singer JOIN concert JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID AND singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "performed", "in", "a", "concert", "in", "2014", "?"], "db_id": "concert_singer", "query": "SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age = 'terminal'"}, {"question_toks": ["what", "is", "the", "name", "and", "nation", "of", "the", "singer", "who", "have", "a", "song", "having", "'Hey", "'", "in", "its", "name", "?"], "db_id": "concert_singer", "query": "SELECT singer.Name, singer.Song_release_year FROM singer WHERE singer.Song_Name LIKE 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "and", "country", "of", "origin", "of", "every", "singer", "who", "has", "a", "song", "with", "the", "word", "'Hey", "'", "in", "its", "title", "?"], "db_id": "concert_singer", "query": "SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'"}, {"question_toks": ["Find", "the", "name", "and", "location", "of", "the", "stadiums", "which", "some", "concerts", "happened", "in", "the", "years", "of", "both", "2014", "and", "2015", "."], "db_id": "concert_singer", "query": "SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "and", "locations", "of", "the", "stadiums", "that", "had", "concerts", "that", "occurred", "in", "both", "2014", "and", "2015", "?"], "db_id": "concert_singer", "query": "SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.Lowest = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE stadium.Lowest = 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "concerts", "happened", "in", "the", "stadium", "with", "the", "highest", "capacity", "."], "db_id": "concert_singer", "query": "SELECT Count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID ORDER BY stadium.Capacity Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "number", "of", "concerts", "that", "occurred", "in", "the", "stadium", "with", "the", "largest", "capacity", "?"], "db_id": "concert_singer", "query": "SELECT Count(*) FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID ORDER BY stadium.Capacity Desc LIMIT 1"}, {"question_toks": ["Find", "the", "number", "of", "pets", "whose", "weight", "is", "heavier", "than", "10", "."], "db_id": "pets_1", "query": "SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'"}, {"question_toks": ["How", "many", "pets", "have", "a", "greater", "weight", "than", "10", "?"], "db_id": "pets_1", "query": "SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'"}, {"question_toks": ["Find", "the", "weight", "of", "the", "youngest", "dog", "."], "db_id": "pets_1", "query": "SELECT Pets.weight FROM Pets WHERE Pets.PetType = 'terminal' ORDER BY Pets.weight Desc LIMIT 1"}, {"question_toks": ["How", "much", "does", "the", "youngest", "dog", "weigh", "?"], "db_id": "pets_1", "query": "SELECT Pets.weight FROM Pets WHERE Pets.PetType = 'terminal' ORDER BY Pets.weight Desc LIMIT 1"}, {"question_toks": ["Find", "the", "maximum", "weight", "for", "each", "type", "of", "pet", ".", "List", "the", "maximum", "weight", "and", "pet", "type", "."], "db_id": "pets_1", "query": "SELECT Max(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType"}, {"question_toks": ["List", "the", "maximum", "weight", "and", "type", "for", "each", "type", "of", "pet", "."], "db_id": "pets_1", "query": "SELECT Max(Pets.weight), Pets.PetType, Max(Pets.weight) FROM Pets GROUP BY Pets.PetType"}, {"question_toks": ["Find", "number", "of", "pets", "owned", "by", "students", "who", "are", "older", "than", "20", "."], "db_id": "pets_1", "query": "SELECT Count(*) FROM Student WHERE Student.Age > 'terminal'"}, {"question_toks": ["How", "many", "pets", "are", "owned", "by", "students", "that", "have", "an", "age", "greater", "than", "20", "?"], "db_id": "pets_1", "query": "SELECT Count(*) FROM Student WHERE Student.Age > 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "dog", "pets", "that", "are", "raised", "by", "female", "students", "(", "with", "sex", "F", ")", "."], "db_id": "pets_1", "query": "SELECT Count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'terminal' AND Pets.PetType = 'terminal'"}, {"question_toks": ["How", "many", "dog", "pets", "are", "raised", "by", "female", "students", "?"], "db_id": "pets_1", "query": "SELECT Count(*) FROM Pets WHERE Pets.weight = 'terminal' AND Pets.PetType = 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "distinct", "type", "of", "pets", "."], "db_id": "pets_1", "query": "SELECT Count(DISTINCT Pets.PetType) FROM Pets"}, {"question_toks": ["How", "many", "different", "types", "of", "pet", "are", "there", "?"], "db_id": "pets_1", "query": "SELECT Count(DISTINCT Pets.PetType) FROM Pets"}, {"question_toks": ["Find", "the", "first", "name", "of", "students", "who", "have", "cat", "or", "dog", "pet", "."], "db_id": "pets_1", "query": "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'"}, {"question_toks": ["What", "are", "the", "first", "names", "of", "every", "student", "who", "has", "a", "cat", "or", "dog", "as", "a", "pet", "?"], "db_id": "pets_1", "query": "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'"}, {"question_toks": ["Find", "the", "name", "of", "students", "who", "have", "both", "cat", "and", "dog", "pets", "."], "db_id": "pets_1", "query": "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["What", "are", "the", "students", "'", "first", "names", "who", "have", "both", "cats", "and", "dogs", "as", "pets", "?"], "db_id": "pets_1", "query": "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["Find", "the", "major", "and", "age", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "db_id": "pets_1", "query": "SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal')"}, {"question_toks": ["What", "major", "is", "every", "student", "who", "does", "not", "own", "a", "cat", "as", "a", "pet", ",", "and", "also", "how", "old", "are", "they", "?"], "db_id": "pets_1", "query": "SELECT Student.Major, Student.LName FROM Student EXCEPT SELECT Student.Major, Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["Find", "the", "id", "of", "students", "who", "do", "not", "have", "a", "cat", "pet", "."], "db_id": "pets_1", "query": "SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "of", "the", "students", "who", "do", "not", "own", "cats", "as", "pets", "?"], "db_id": "pets_1", "query": "SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "dog", "but", "do", "not", "have", "a", "cat", "as", "a", "pet", "."], "db_id": "pets_1", "query": "SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal')"}, {"question_toks": ["What", "is", "the", "first", "name", "of", "every", "student", "who", "has", "a", "dog", "but", "does", "not", "have", "a", "cat", "?"], "db_id": "pets_1", "query": "SELECT Student.Fname FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal')"}, {"question_toks": ["Find", "the", "type", "and", "weight", "of", "the", "youngest", "pet", "."], "db_id": "pets_1", "query": "SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.weight Desc LIMIT 1"}, {"question_toks": ["What", "type", "of", "pet", "is", "the", "youngest", "animal", ",", "and", "how", "much", "does", "it", "weigh", "?"], "db_id": "pets_1", "query": "SELECT Pets.pet_age, Pets.weight FROM Pets ORDER BY Pets.weight Desc LIMIT 1"}, {"question_toks": ["Find", "the", "id", "and", "weight", "of", "all", "pets", "whose", "age", "is", "older", "than", "1", "."], "db_id": "pets_1", "query": "SELECT Pets.PetID, Pets.weight FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 'terminal'"}, {"question_toks": ["What", "is", "the", "id", "and", "weight", "of", "every", "pet", "who", "is", "older", "than", "1", "?"], "db_id": "pets_1", "query": "SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.weight > 'terminal'"}, {"question_toks": ["Find", "the", "average", "and", "maximum", "age", "for", "each", "type", "of", "pet", "."], "db_id": "pets_1", "query": "SELECT Avg(Student.Age), Pets.pet_age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Pets.pet_age"}, {"question_toks": ["What", "is", "the", "average", "and", "maximum", "age", "for", "each", "pet", "type", "?"], "db_id": "pets_1", "query": "SELECT Avg(Student.Age), Pets.PetType FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Pets.PetType"}, {"question_toks": ["Find", "the", "average", "weight", "for", "each", "pet", "type", "."], "db_id": "pets_1", "query": "SELECT Pets.PetType, Avg(Pets.weight) FROM Pets GROUP BY Pets.PetType"}, {"question_toks": ["What", "is", "the", "average", "weight", "for", "each", "type", "of", "pet", "?"], "db_id": "pets_1", "query": "SELECT Avg(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType"}, {"question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "have", "a", "pet", "."], "db_id": "pets_1", "query": "SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID"}, {"question_toks": ["What", "are", "the", "different", "first", "names", "and", "ages", "of", "the", "students", "who", "do", "have", "pets", "?"], "db_id": "pets_1", "query": "SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID"}, {"question_toks": ["Find", "the", "id", "of", "the", "pet", "owned", "by", "student", "whose", "last", "name", "is", "\u2018Smith\u2019", "."], "db_id": "pets_1", "query": "SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'terminal'"}, {"question_toks": ["What", "is", "the", "id", "of", "the", "pet", "owned", "by", "the", "student", "whose", "last", "name", "is", "'Smith", "'", "?"], "db_id": "pets_1", "query": "SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "pets", "for", "each", "student", "who", "has", "any", "pet", "and", "student", "id", "."], "db_id": "pets_1", "query": "SELECT Count(*), Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Has_Pet.StuID"}, {"question_toks": ["For", "students", "who", "have", "pets", ",", "how", "many", "pets", "does", "each", "student", "have", "?"], "db_id": "pets_1", "query": "SELECT Has_Pet.StuID, Count(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID"}, {"question_toks": ["Find", "the", "first", "name", "and", "gender", "of", "student", "who", "have", "more", "than", "one", "pet", "."], "db_id": "pets_1", "query": "SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "is", "the", "first", "name", "and", "gender", "of", "the", "all", "the", "students", "who", "have", "more", "than", "one", "pet", "?"], "db_id": "pets_1", "query": "SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Has_Pet.StuID HAVING Count(*) = 'terminal'"}, {"question_toks": ["Find", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "age", "3", "."], "db_id": "pets_1", "query": "SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["What", "is", "the", "last", "name", "of", "the", "student", "who", "has", "a", "cat", "that", "is", "3", "years", "old", "?"], "db_id": "pets_1", "query": "SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID AND Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'terminal'"}, {"question_toks": ["Find", "the", "average", "age", "of", "students", "who", "do", "not", "have", "any", "pet", "."], "db_id": "pets_1", "query": "SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)"}, {"question_toks": ["What", "is", "the", "average", "age", "for", "all", "students", "who", "do", "not", "own", "any", "pets", "?"], "db_id": "pets_1", "query": "SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)"}, {"question_toks": ["How", "many", "continents", "are", "there", "?"], "db_id": "car_1", "query": "SELECT Count(DISTINCT continents.Continent) FROM continents"}, {"question_toks": ["What", "is", "the", "number", "of", "continents", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM continents"}, {"question_toks": ["How", "many", "countries", "does", "each", "continent", "have", "?", "List", "the", "continent", "id", ",", "continent", "name", "and", "the", "number", "of", "countries", "."], "db_id": "car_1", "query": "SELECT continents.Continent, Count(*), continents.Continent FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId"}, {"question_toks": ["For", "each", "continent", ",", "list", "its", "id", ",", "name", ",", "and", "how", "many", "countries", "it", "has", "?"], "db_id": "car_1", "query": "SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId"}, {"question_toks": ["How", "many", "countries", "are", "listed", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM countries"}, {"question_toks": ["How", "many", "countries", "exist", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM countries"}, {"question_toks": ["How", "many", "models", "does", "each", "car", "maker", "produce", "?", "List", "maker", "full", "name", ",", "id", "and", "the", "number", "."], "db_id": "car_1", "query": "SELECT car_makers.FullName, car_makers.Id, Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker"}, {"question_toks": ["What", "is", "the", "full", "name", "of", "each", "car", "maker", ",", "along", "with", "its", "id", "and", "how", "many", "models", "it", "produces", "?"], "db_id": "car_1", "query": "SELECT car_makers.FullName, car_makers.FullName, Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id"}, {"question_toks": ["Which", "model", "of", "the", "car", "has", "the", "minimum", "horsepower", "?"], "db_id": "car_1", "query": "SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "model", "of", "the", "car", "with", "the", "smallest", "amount", "of", "horsepower", "?"], "db_id": "car_1", "query": "SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower Asc LIMIT 1"}, {"question_toks": ["Find", "the", "model", "of", "the", "car", "whose", "weight", "is", "below", "the", "average", "weight", "."], "db_id": "car_1", "query": "SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_names.Model HAVING Avg(cars_data.Weight) < 'terminal'"}, {"question_toks": ["What", "is", "the", "model", "for", "the", "car", "with", "a", "weight", "smaller", "than", "the", "average", "?"], "db_id": "car_1", "query": "SELECT Avg(model_list.Model) FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_names.Model HAVING Avg(cars_data.Weight) > (SELECT Avg(cars_data.Weight) FROM cars_data)"}, {"question_toks": ["Find", "the", "name", "of", "the", "makers", "that", "produced", "some", "cars", "in", "the", "year", "of", "1970", "?"], "db_id": "car_1", "query": "SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "different", "car", "makers", "who", "produced", "a", "car", "in", "1970", "?"], "db_id": "car_1", "query": "SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 'terminal'"}, {"question_toks": ["Find", "the", "make", "and", "production", "time", "of", "the", "cars", "that", "were", "produced", "in", "the", "earliest", "year", "?"], "db_id": "car_1", "query": "SELECT car_names.Make, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "maker", "of", "the", "carr", "produced", "in", "the", "earliest", "year", "and", "what", "year", "was", "it", "?"], "db_id": "car_1", "query": "SELECT car_makers.Maker, cars_data.Year FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year Asc LIMIT 1"}, {"question_toks": ["Which", "distinct", "car", "models", "are", "the", "produced", "after", "1980", "?"], "db_id": "car_1", "query": "SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "models", "for", "the", "cards", "produced", "after", "1980", "?"], "db_id": "car_1", "query": "SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 'terminal'"}, {"question_toks": ["How", "many", "car", "makers", "are", "there", "in", "each", "continents", "?", "List", "the", "continent", "name", "and", "the", "count", "."], "db_id": "car_1", "query": "SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent"}, {"question_toks": ["What", "is", "the", "name", "of", "each", "continent", "and", "how", "many", "car", "makers", "are", "there", "in", "each", "one", "?"], "db_id": "car_1", "query": "SELECT continents.Continent, Count(*) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.Continent"}, {"question_toks": ["Which", "of", "the", "countries", "has", "the", "most", "car", "makers", "?", "List", "the", "country", "name", "."], "db_id": "car_1", "query": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "country", "with", "the", "most", "car", "makers", "?"], "db_id": "car_1", "query": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["How", "many", "car", "models", "are", "produced", "by", "each", "maker", "?", "List", "the", "count", "and", "the", "maker", "full", "name", "."], "db_id": "car_1", "query": "SELECT car_makers.FullName, Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker"}, {"question_toks": ["What", "is", "the", "number", "of", "car", "models", "that", "are", "produced", "by", "each", "maker", "and", "what", "is", "the", "id", "and", "full", "name", "of", "each", "maker", "?"], "db_id": "car_1", "query": "SELECT car_makers.Id, car_makers.FullName, Count(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker"}, {"question_toks": ["What", "is", "the", "accelerate", "of", "the", "car", "make", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "db_id": "car_1", "query": "SELECT cars_data.Accelerate FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'terminal'"}, {"question_toks": ["How", "much", "does", "the", "car", "accelerate", "that", "makes", "amc", "hornet", "sportabout", "(", "sw", ")", "?"], "db_id": "car_1", "query": "SELECT cars_data.Accelerate FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'terminal'"}, {"question_toks": ["How", "many", "car", "makers", "are", "there", "in", "france", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryName = 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "makers", "of", "care", "in", "France", "?"], "db_id": "car_1", "query": "SELECT Count(DISTINCT car_makers.Maker) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryName = 'terminal'"}, {"question_toks": ["How", "many", "car", "models", "are", "produced", "in", "the", "usa", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country AND countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE countries.CountryName = 'terminal'"}, {"question_toks": ["What", "is", "the", "count", "of", "the", "car", "models", "produced", "in", "the", "United", "States", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM model_list WHERE model_list.Maker = 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "miles", "per", "gallon", "(", "mpg", ")", "of", "the", "cars", "with", "4", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "miles", "per", "gallon", "of", "all", "the", "cards", "with", "4", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Cylinders = 'terminal'"}, {"question_toks": ["What", "is", "the", "smallest", "weight", "of", "the", "car", "produced", "with", "8", "cylinders", "on", "1974", "?"], "db_id": "car_1", "query": "SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders LIKE 'terminal'"}, {"question_toks": ["What", "is", "the", "minimu", "weight", "of", "the", "car", "with", "8", "cylinders", "produced", "in", "1974", "?"], "db_id": "car_1", "query": "SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders LIKE 'terminal'"}, {"question_toks": ["What", "are", "all", "the", "makers", "and", "models", "?"], "db_id": "car_1", "query": "SELECT model_list.Maker, model_list.Model FROM model_list"}, {"question_toks": ["What", "are", "the", "makers", "and", "models", "?"], "db_id": "car_1", "query": "SELECT model_list.Maker, model_list.Model FROM model_list"}, {"question_toks": ["What", "are", "the", "countries", "having", "at", "least", "one", "car", "maker", "?", "List", "name", "and", "id", "."], "db_id": "car_1", "query": "SELECT countries.CountryName, car_makers.Id FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "countries", "with", "at", "least", "one", "car", "maker", "?"], "db_id": "car_1", "query": "SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "the", "cars", "with", "horsepower", "more", "than", "150", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "cars", "with", "a", "horsepower", "greater", "than", "150", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "weight", "of", "cars", "each", "year", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year"}, {"question_toks": ["What", "is", "the", "average", "weight", "and", "year", "for", "each", "year", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year"}, {"question_toks": ["Which", "countries", "in", "europe", "have", "at", "least", "3", "car", "manufacturers", "?"], "db_id": "car_1", "query": "SELECT countries.CountryName FROM continents JOIN countries ON continents.ContId = countries.Continent WHERE continents.Continent = 'terminal' GROUP BY countries.CountryId HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "all", "European", "countries", "with", "at", "least", "3", "manufacturers", "?"], "db_id": "car_1", "query": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "is", "the", "maximum", "horsepower", "and", "the", "make", "of", "the", "car", "models", "with", "3", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Cylinders Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "largest", "amount", "of", "horsepower", "for", "the", "models", "with", "3", "cylinders", "and", "what", "make", "is", "it", "?"], "db_id": "car_1", "query": "SELECT cars_data.Horsepower, cars_data.Cylinders FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Cylinders Desc LIMIT 1"}, {"question_toks": ["Which", "model", "saves", "the", "most", "gasoline", "?", "That", "is", "to", "say", ",", "have", "the", "maximum", "miles", "per", "gallon", "."], "db_id": "car_1", "query": "SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model AND model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY model_list.Model ORDER BY Sum(cars_data.Accelerate) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "car", "wmodel", "with", "the", "highest", "mpg", "?"], "db_id": "car_1", "query": "SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "average", "horsepower", "of", "the", "cars", "before", "1980", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "horsepower", "for", "all", "cards", "produced", "before", "1980", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "edispl", "of", "the", "cars", "of", "model", "volvo", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "edispl", "for", "all", "volvos", "?"], "db_id": "car_1", "query": "SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Accelerate = 'terminal'"}, {"question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "different", "number", "of", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Max(cars_data.Accelerate) FROM cars_data"}, {"question_toks": ["What", "is", "the", "maximum", "accelerate", "for", "all", "the", "different", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data"}, {"question_toks": ["Which", "model", "has", "the", "most", "version", "(", "make", ")", "of", "cars", "?"], "db_id": "car_1", "query": "SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "model", "has", "the", "most", "different", "versions", "?"], "db_id": "car_1", "query": "SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["How", "many", "cars", "have", "more", "than", "4", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "cars", "with", "more", "than", "4", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'"}, {"question_toks": ["how", "many", "cars", "were", "produced", "in", "1980", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'"}, {"question_toks": ["In", "1980", ",", "how", "many", "cars", "were", "made", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'"}, {"question_toks": ["How", "many", "car", "models", "were", "produced", "by", "the", "maker", "with", "full", "name", "American", "Motor", "Company", "?"], "db_id": "car_1", "query": "SELECT Count(DISTINCT model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "car", "models", "created", "by", "the", "car", "maker", "American", "Motor", "Company", "?"], "db_id": "car_1", "query": "SELECT Count(DISTINCT model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'terminal'"}, {"question_toks": ["Which", "makers", "designed", "more", "than", "3", "car", "models", "?", "List", "full", "name", "and", "the", "id", "."], "db_id": "car_1", "query": "SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "and", "ids", "of", "all", "makers", "with", "more", "than", "3", "models", "?"], "db_id": "car_1", "query": "SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY model_list.Maker HAVING Count(*) > 'terminal'"}, {"question_toks": ["Which", "distinctive", "models", "are", "produced", "by", "maker", "with", "the", "full", "name", "General", "Motors", "or", "weighing", "more", "than", "3500", "?"], "db_id": "car_1", "query": "SELECT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'terminal' OR car_makers.FullName = 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "models", "created", "by", "either", "the", "car", "maker", "General", "Motors", "or", "weighed", "more", "than", "3500", "?"], "db_id": "car_1", "query": "SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'terminal' OR car_makers.FullName = 'terminal'"}, {"question_toks": ["In", "which", "years", "cars", "were", "produced", "weighing", "no", "less", "than", "3000", "and", "no", "more", "than", "4000", "?"], "db_id": "car_1", "query": "SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' EXCEPT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "years", "in", "which", "there", "were", "cars", "produced", "that", "weighed", "less", "than", "4000", "and", "also", "cars", "that", "weighted", "more", "than", "3000", "?"], "db_id": "car_1", "query": "SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Accelerate > 'terminal' INTERSECT SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Accelerate < 'terminal'"}, {"question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "largest", "accelerate", "?"], "db_id": "car_1", "query": "SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "horsepower", "of", "the", "car", "with", "the", "greatest", "accelerate", "?"], "db_id": "car_1", "query": "SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1"}, {"question_toks": ["For", "model", "volvo", ",", "how", "many", "cylinders", "does", "the", "car", "with", "the", "least", "accelerate", "have", "?"], "db_id": "car_1", "query": "SELECT cars_data.Cylinders FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'terminal' AND cars_data.Accelerate = (SELECT Max(cars_data.Accelerate) FROM cars_data)"}, {"question_toks": ["For", "a", "volvo", "model", ",", "how", "many", "cylinders", "does", "the", "version", "with", "least", "accelerate", "have", "?"], "db_id": "car_1", "query": "SELECT Count(cars_data.Cylinders) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'terminal' AND cars_data.Accelerate = 'terminal'"}, {"question_toks": ["How", "many", "cars", "have", "a", "larger", "accelerate", "than", "the", "car", "with", "the", "largest", "horsepower", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)"}, {"question_toks": ["What", "is", "the", "number", "of", "cars", "with", "a", "greater", "accelerate", "than", "the", "one", "with", "the", "most", "horsepower", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)"}, {"question_toks": ["How", "many", "countries", "has", "more", "than", "2", "car", "makers", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "countries", "with", "more", "than", "2", "car", "makers", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'"}, {"question_toks": ["How", "many", "cars", "has", "over", "6", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders = 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "carsw", "ith", "over", "6", "cylinders", "?"], "db_id": "car_1", "query": "SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'"}, {"question_toks": ["For", "the", "cars", "with", "4", "cylinders", ",", "which", "model", "has", "the", "largest", "horsepower", "?"], "db_id": "car_1", "query": "SELECT car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1"}, {"question_toks": ["For", "all", "of", "the", "4", "cylinder", "cars", ",", "which", "model", "has", "the", "most", "horsepower", "?"], "db_id": "car_1", "query": "SELECT cars_data.Cylinders FROM cars_data ORDER BY cars_data.Horsepower Desc LIMIT 1"}, {"question_toks": ["Among", "the", "cars", "with", "more", "than", "lowest", "horsepower", ",", "which", "ones", "do", "not", "have", "more", "than", "3", "cylinders", "?", "List", "the", "car", "makeid", "and", "make", "name", "."], "db_id": "car_1", "query": "SELECT car_names.Make, cars_data.Horsepower FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > 'terminal' EXCEPT SELECT car_names.Make, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders > 'terminal'"}, {"question_toks": ["Among", "the", "cars", "that", "do", "not", "have", "the", "minimum", "horsepower", ",", "what", "are", "the", "make", "ids", "and", "names", "of", "al", "those", "with", "less", "than", "4", "cylinders", "?"], "db_id": "car_1", "query": "SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower < (SELECT Min(cars_data.Horsepower) FROM cars_data)"}, {"question_toks": ["What", "is", "the", "maximum", "miles", "per", "gallon", "of", "the", "car", "with", "8", "cylinders", "or", "produced", "before", "1980", "?"], "db_id": "car_1", "query": "SELECT Max(car_names.Make) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 'terminal' OR cars_data.Cylinders < 'terminal'"}, {"question_toks": ["What", "is", "the", "maximum", "mpg", "of", "the", "cars", "that", "had", "8", "cylinders", "or", "that", "were", "produced", "before", "1980", "?"], "db_id": "car_1", "query": "SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Cylinders < 'terminal'"}, {"question_toks": ["Which", "models", "are", "lighter", "than", "3500", "but", "not", "built", "by", "the", "'Ford", "Motor", "Company", "'", "?"], "db_id": "car_1", "query": "SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight > 'terminal' EXCEPT SELECT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker AND car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.FullName = 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "models", "wthat", "are", "lighter", "than", "3500", "but", "were", "not", "built", "by", "the", "Ford", "Motor", "Company", "?"], "db_id": "car_1", "query": "SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'terminal' EXCEPT SELECT DISTINCT model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'terminal'"}, {"question_toks": ["What", "are", "the", "name", "of", "the", "countries", "where", "there", "is", "not", "a", "single", "car", "maker", "?"], "db_id": "car_1", "query": "SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING Count(*) = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "countries", "with", "no", "car", "makers", "?"], "db_id": "car_1", "query": "SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)"}, {"question_toks": ["Which", "are", "the", "car", "makers", "which", "produce", "at", "least", "2", "models", "and", "more", "than", "3", "car", "makes", "?", "List", "the", "id", "and", "the", "maker", "."], "db_id": "car_1", "query": "SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "and", "makers", "of", "all", "car", "makers", "that", "produce", "at", "least", "2", "models", "and", "make", "more", "than", "3", "cars", "?"], "db_id": "car_1", "query": "SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "id", "and", "names", "of", "the", "countries", "which", "have", "more", "than", "3", "car", "makers", "or", "produce", "the", "'fiat", "'", "model", "?"], "db_id": "car_1", "query": "SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY car_makers.Id HAVING Count(*) > 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "and", "names", "of", "all", "countries", "that", "either", "have", "more", "than", "3", "car", "makers", "or", "produce", "fiats", "?"], "db_id": "car_1", "query": "SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal' UNION SELECT car_makers.Id, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker = 'terminal'"}, {"question_toks": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "db_id": "flight_2", "query": "SELECT airlines.Country FROM airlines JOIN airports WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["What", "country", "is", "Jetblue", "Airways", "affiliated", "with", "?"], "db_id": "flight_2", "query": "SELECT airports.Country FROM airlines JOIN airports WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["What", "is", "the", "abbreviation", "of", "Airline", "``", "JetBlue", "Airways", "''", "?"], "db_id": "flight_2", "query": "SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["Which", "abbreviation", "corresponds", "to", "Jetblue", "Airways", "?"], "db_id": "flight_2", "query": "SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "db_id": "flight_2", "query": "SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Abbreviation = 'terminal'"}, {"question_toks": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'"}, {"question_toks": ["List", "the", "airport", "code", "and", "name", "in", "the", "city", "of", "Anthony", "."], "db_id": "flight_2", "query": "SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'"}, {"question_toks": ["Give", "the", "airport", "code", "and", "airport", "name", "corresonding", "to", "the", "city", "Anthony", "."], "db_id": "flight_2", "query": "SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'"}, {"question_toks": ["How", "many", "airlines", "do", "we", "have", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines"}, {"question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines"}, {"question_toks": ["How", "many", "airports", "do", "we", "have", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports"}, {"question_toks": ["Return", "the", "number", "of", "airports", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports"}, {"question_toks": ["How", "many", "flights", "do", "we", "have", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM flights"}, {"question_toks": ["Return", "the", "number", "of", "flights", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM flights"}, {"question_toks": ["Which", "airline", "has", "abbreviation", "'UAL", "'", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'"}, {"question_toks": ["Give", "the", "airline", "with", "abbreviation", "'UAL", "'", "."], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'"}, {"question_toks": ["How", "many", "airlines", "are", "from", "USA", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'"}, {"question_toks": ["Return", "the", "number", "of", "airlines", "in", "the", "USA", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'"}, {"question_toks": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "db_id": "flight_2", "query": "SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'"}, {"question_toks": ["Give", "the", "city", "and", "country", "for", "the", "Alton", "airport", "."], "db_id": "flight_2", "query": "SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'"}, {"question_toks": ["What", "is", "the", "airport", "name", "for", "airport", "'AKO", "'", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'"}, {"question_toks": ["Return", "the", "name", "of", "the", "airport", "with", "code", "'AKO", "'", "."], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'"}, {"question_toks": ["What", "are", "airport", "names", "at", "City", "'Aberdeen", "'", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "airports", "in", "Aberdeen", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'"}, {"question_toks": ["How", "many", "flights", "depart", "from", "'APG", "'", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "flights", "departing", "from", "'APG", "'", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["How", "many", "flights", "have", "destination", "ATO", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM flights WHERE flights.DestAirport = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "flights", "into", "ATO", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["How", "many", "flights", "depart", "from", "City", "Aberdeen", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Return", "the", "number", "of", "flights", "departing", "from", "Aberdeen", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["How", "many", "flights", "arriving", "in", "Aberdeen", "city", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Return", "the", "number", "of", "flights", "arriving", "in", "Aberdeen", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["How", "many", "flights", "depart", "from", "City", "'Aberdeen", "'", "and", "have", "destination", "City", "'Ashley", "'", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal' AND flights.DestAirport = 'terminal'"}, {"question_toks": ["How", "many", "flights", "fly", "from", "Aberdeen", "to", "Ashley", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal' AND airports.City = 'terminal'"}, {"question_toks": ["How", "many", "flights", "does", "airline", "'JetBlue", "Airways", "'", "have", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["Give", "the", "number", "of", "Jetblue", "Airways", "flights", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "go", "to", "Airport", "'ASY", "'", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.AirportName = 'terminal'"}, {"question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "depart", "from", "Airport", "'AHD", "'", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'"}, {"question_toks": ["Return", "the", "number", "of", "United", "Airlines", "flights", "leaving", "from", "AHD", "Airport", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.AirportName = 'terminal'"}, {"question_toks": ["How", "many", "United", "Airlines", "flights", "go", "to", "City", "'Aberdeen", "'", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "that", "arrive", "in", "Aberdeen", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Which", "city", "has", "most", "number", "of", "arriving", "flights", "?"], "db_id": "flight_2", "query": "SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "city", "has", "the", "most", "frequent", "destination", "airport", "?"], "db_id": "flight_2", "query": "SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "city", "has", "most", "number", "of", "departing", "flights", "?"], "db_id": "flight_2", "query": "SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "city", "is", "the", "most", "frequent", "source", "airport", "?"], "db_id": "flight_2", "query": "SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "the", "highest", "number", "of", "flights", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "airport", "code", "of", "the", "airport", "with", "the", "most", "flights", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "fewest", "number", "of", "flights", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Give", "the", "code", "of", "the", "airport", "with", "the", "least", "flights", "."], "db_id": "flight_2", "query": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["Which", "airline", "has", "most", "number", "of", "flights", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "airline", "serves", "the", "most", "flights", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "abbreviation", "and", "country", "of", "the", "airline", "that", "has", "fewest", "number", "of", "flights", "?"], "db_id": "flight_2", "query": "SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY airlines.Abbreviation ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "db_id": "flight_2", "query": "SELECT airlines.Abbreviation, airlines.Airline FROM airlines JOIN airports JOIN flights WHERE airports.Country = (SELECT airports.Country FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.Country ORDER BY Count(*) Desc LIMIT 1)"}, {"question_toks": ["What", "are", "airlines", "that", "have", "some", "flight", "departing", "from", "airport", "'AHD", "'", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN airports WHERE airports.AirportCode = 'terminal'"}, {"question_toks": ["Which", "airlines", "have", "a", "flight", "with", "source", "airport", "AHD", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["What", "are", "airlines", "that", "have", "flights", "arriving", "at", "airport", "'AHD", "'", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN airports WHERE airports.AirportCode = 'terminal'"}, {"question_toks": ["Which", "airlines", "have", "a", "flight", "with", "destination", "airport", "AHD", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'"}, {"question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "both", "airports", "'APG", "'", "and", "'CVO", "'", "."], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["Which", "airlines", "have", "departing", "flights", "from", "both", "APG", "and", "CVO", "airports", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["Find", "all", "airlines", "that", "have", "flights", "from", "airport", "'CVO", "'", "but", "not", "from", "'APG", "'", "."], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN airports WHERE airports.AirportName NOT IN (SELECT flights.Airline FROM flights WHERE flights.SourceAirport = 'terminal')"}, {"question_toks": ["Which", "airlines", "have", "departures", "from", "CVO", "but", "not", "from", "APG", "airports", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN airports WHERE airports.AirportName = 'terminal'"}, {"question_toks": ["Find", "all", "airlines", "that", "have", "at", "least", "10", "flights", "."], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Which", "airlines", "have", "at", "least", "10", "flights", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Find", "all", "airlines", "that", "have", "fewer", "than", "200", "flights", "."], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) = 'terminal'"}, {"question_toks": ["Which", "airlines", "have", "less", "than", "200", "flights", "?"], "db_id": "flight_2", "query": "SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) = 'terminal'"}, {"question_toks": ["What", "are", "flight", "numbers", "of", "Airline", "``", "United", "Airlines", "''", "?"], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["Which", "flight", "numbers", "correspond", "to", "United", "Airlines", "flights", "?"], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'"}, {"question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "Airport", "``", "APG", "''", "?"], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.AirportCode = 'terminal'"}, {"question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "APG", "."], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "Airport", "``", "APG", "''", "?"], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.AirportCode = 'terminal'"}, {"question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "landing", "at", "APG", "."], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'"}, {"question_toks": ["What", "are", "flight", "numbers", "of", "flights", "departing", "from", "City", "``", "Aberdeen", "``", "?"], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "leaving", "from", "Aberdeen", "."], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["What", "are", "flight", "numbers", "of", "flights", "arriving", "at", "City", "``", "Aberdeen", "''", "?"], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "arriving", "in", "Aberdeen", "."], "db_id": "flight_2", "query": "SELECT flights.FlightNo FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "flights", "landing", "in", "the", "city", "of", "Aberdeen", "or", "Abilene", "."], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal' OR airports.City = 'terminal'"}, {"question_toks": ["How", "many", "flights", "land", "in", "Aberdeen", "or", "Abilene", "?"], "db_id": "flight_2", "query": "SELECT Count(*) FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport WHERE airports.City = 'terminal' OR airports.City = 'terminal'"}, {"question_toks": ["Find", "the", "name", "of", "airports", "which", "do", "not", "have", "any", "flight", "in", "and", "out", "."], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports WHERE airports.AirportCode IN (SELECT flights.SourceAirport FROM flights)"}, {"question_toks": ["Which", "airports", "do", "not", "have", "departing", "or", "arriving", "flights", "?"], "db_id": "flight_2", "query": "SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport"}, {"question_toks": ["How", "many", "employees", "are", "there", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT Count(*) FROM employee"}, {"question_toks": ["Count", "the", "number", "of", "employees"], "db_id": "employee_hire_evaluation", "query": "SELECT Count(*) FROM employee"}, {"question_toks": ["Sort", "employee", "names", "by", "their", "age", "in", "ascending", "order", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee ORDER BY employee.Age Asc"}, {"question_toks": ["List", "the", "names", "of", "employees", "and", "sort", "in", "ascending", "order", "of", "age", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee ORDER BY employee.Age Asc"}, {"question_toks": ["What", "is", "the", "number", "of", "employees", "from", "each", "city", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT Count(*), employee.City FROM employee GROUP BY employee.City"}, {"question_toks": ["Count", "the", "number", "of", "employees", "for", "each", "city", "."], "db_id": "employee_hire_evaluation", "query": "SELECT Count(*), employee.City FROM employee GROUP BY employee.City"}, {"question_toks": ["Which", "cities", "do", "more", "than", "one", "employee", "under", "age", "30", "come", "from", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT employee.City FROM employee WHERE employee.Age > 'terminal' GROUP BY employee.City ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "cities", "that", "have", "more", "than", "one", "employee", "under", "age", "30", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.City FROM employee WHERE employee.Age > 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "shops", "in", "each", "location", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location"}, {"question_toks": ["How", "many", "shops", "are", "there", "in", "each", "location", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location"}, {"question_toks": ["Find", "the", "manager", "name", "and", "district", "of", "the", "shop", "whose", "number", "of", "products", "is", "the", "largest", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "manager", "name", "and", "district", "of", "the", "shop", "that", "sells", "the", "largest", "number", "of", "products", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1"}, {"question_toks": ["find", "the", "minimum", "and", "maximum", "number", "of", "products", "of", "all", "stores", "."], "db_id": "employee_hire_evaluation", "query": "SELECT Min(evaluation.Bonus), Min(evaluation.Bonus) FROM evaluation"}, {"question_toks": ["What", "are", "the", "minimum", "and", "maximum", "number", "of", "products", "across", "all", "the", "shops", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT Min(shop.Number_products), Min(shop.Number_products) FROM shop"}, {"question_toks": ["Return", "the", "name", ",", "location", "and", "district", "of", "all", "shops", "in", "descending", "order", "of", "number", "of", "products", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc"}, {"question_toks": ["Sort", "all", "the", "shops", "by", "number", "products", "in", "descending", "order", ",", "and", "return", "the", "name", ",", "location", "and", "district", "of", "each", "shop", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc"}, {"question_toks": ["Find", "the", "names", "of", "stores", "whose", "number", "products", "is", "more", "than", "the", "average", "number", "of", "products", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name FROM shop GROUP BY shop.Location HAVING Avg(shop.Number_products) > (SELECT Avg(shop.Number_products) FROM shop)"}, {"question_toks": ["Which", "shops", "'", "number", "products", "is", "above", "the", "average", "?", "Give", "me", "the", "shop", "names", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name FROM shop GROUP BY shop.Name HAVING Avg(shop.Number_products) > (SELECT Avg(shop.Number_products) FROM shop)"}, {"question_toks": ["find", "the", "name", "of", "employee", "who", "was", "awarded", "the", "most", "times", "in", "the", "evaluation", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "employee", "received", "the", "most", "awards", "in", "evaluations", "?", "Give", "me", "the", "employee", "name", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "name", "of", "the", "employee", "who", "got", "the", "highest", "one", "time", "bonus", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus Desc LIMIT 1"}, {"question_toks": ["Which", "employee", "received", "the", "biggest", "bonus", "?", "Give", "me", "the", "employee", "name", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus Desc LIMIT 1"}, {"question_toks": ["Find", "the", "names", "of", "employees", "who", "never", "won", "any", "award", "in", "the", "evaluation", "."], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "employees", "who", "never", "received", "any", "evaluation", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "shop", "that", "is", "hiring", "the", "largest", "number", "of", "employees", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "shop", "has", "the", "most", "employees", "?", "Give", "me", "the", "shop", "name", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "name", "of", "the", "shops", "that", "do", "not", "hire", "any", "employee", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)"}, {"question_toks": ["Which", "shops", "run", "with", "no", "employees", "?", "Find", "the", "shop", "names"], "db_id": "employee_hire_evaluation", "query": "SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)"}, {"question_toks": ["Find", "the", "number", "of", "employees", "hired", "in", "each", "shop", ";", "show", "the", "shop", "name", "as", "well", "."], "db_id": "employee_hire_evaluation", "query": "SELECT Count(*), shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name"}, {"question_toks": ["For", "each", "shop", ",", "return", "the", "number", "of", "employees", "working", "there", "and", "the", "name", "of", "the", "shop", "."], "db_id": "employee_hire_evaluation", "query": "SELECT Count(*), shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name"}, {"question_toks": ["What", "is", "total", "bonus", "given", "in", "all", "evaluations", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT Sum(evaluation.Bonus) FROM evaluation"}, {"question_toks": ["Find", "the", "total", "amount", "of", "bonus", "given", "in", "all", "the", "evaluations", "."], "db_id": "employee_hire_evaluation", "query": "SELECT Sum(evaluation.Bonus) FROM evaluation"}, {"question_toks": ["Give", "me", "all", "the", "information", "about", "hiring", "."], "db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring"}, {"question_toks": ["What", "is", "all", "the", "information", "about", "hiring", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring"}, {"question_toks": ["Which", "district", "has", "both", "stores", "with", "less", "than", "3000", "products", "and", "stores", "with", "more", "than", "10000", "products", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal' GROUP BY shop.District ORDER BY Count(*) Asc LIMIT 1 INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal'"}, {"question_toks": ["Find", "the", "districts", "in", "which", "there", "are", "both", "shops", "selling", "less", "than", "3000", "products", "and", "shops", "selling", "more", "than", "10000", "products", "."], "db_id": "employee_hire_evaluation", "query": "SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal'"}, {"question_toks": ["How", "many", "different", "store", "locations", "are", "there", "?"], "db_id": "employee_hire_evaluation", "query": "SELECT Count(DISTINCT shop.Location) FROM shop"}, {"question_toks": ["Count", "the", "number", "of", "distinct", "store", "locations", "."], "db_id": "employee_hire_evaluation", "query": "SELECT Count(DISTINCT shop.Location) FROM shop"}, {"question_toks": ["How", "many", "documents", "do", "we", "have", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Documents"}, {"question_toks": ["Count", "the", "number", "of", "documents", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Documents"}, {"question_toks": ["List", "document", "IDs", ",", "document", "names", ",", "and", "document", "descriptions", "for", "all", "documents", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents"}, {"question_toks": ["What", "are", "the", "ids", ",", "names", ",", "and", "descriptions", "for", "all", "documents", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents"}, {"question_toks": ["What", "is", "the", "document", "name", "and", "template", "id", "for", "document", "with", "description", "with", "the", "letter", "'w", "'", "in", "it", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'"}, {"question_toks": ["Return", "the", "names", "and", "template", "ids", "for", "documents", "that", "contain", "the", "letter", "w", "in", "their", "description", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'"}, {"question_toks": ["What", "is", "the", "document", "id", ",", "template", "id", "and", "description", "for", "document", "named", "``", "Robbin", "CV", "''", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Return", "the", "document", "id", ",", "template", "id", ",", "and", "description", "for", "the", "document", "with", "the", "name", "Robbin", "CV", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["How", "many", "different", "templates", "do", "all", "document", "use", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(DISTINCT Documents.Template_ID) FROM Documents"}, {"question_toks": ["Count", "the", "number", "of", "different", "templates", "used", "for", "documents", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(DISTINCT Documents.Template_ID) FROM Documents"}, {"question_toks": ["How", "many", "documents", "are", "using", "the", "template", "with", "type", "code", "'PPT", "'", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "documents", "that", "use", "the", "PPT", "template", "type", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["Show", "all", "template", "ids", "and", "number", "of", "documents", "using", "each", "template", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID"}, {"question_toks": ["What", "are", "all", "different", "template", "ids", "used", "for", "documents", ",", "and", "how", "many", "times", "were", "each", "of", "them", "used", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID"}, {"question_toks": ["What", "is", "the", "id", "and", "type", "code", "for", "the", "template", "used", "by", "the", "most", "documents", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "id", "and", "type", "code", "of", "the", "template", "that", "is", "used", "for", "the", "greatest", "number", "of", "documents", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "ids", "for", "all", "templates", "that", "are", "used", "by", "more", "than", "one", "document", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "template", "ids", "of", "any", "templates", "used", "in", "more", "than", "a", "single", "document", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["Show", "ids", "for", "all", "templates", "not", "used", "by", "any", "document", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents"}, {"question_toks": ["What", "are", "the", "ids", "for", "templates", "that", "are", "not", "used", "in", "any", "documents", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents"}, {"question_toks": ["How", "many", "templates", "do", "we", "have", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Templates"}, {"question_toks": ["Count", "the", "number", "of", "templates", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Templates"}, {"question_toks": ["Show", "template", "ids", ",", "version", "numbers", ",", "and", "template", "type", "codes", "for", "all", "templates", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates"}, {"question_toks": ["What", "are", "the", "ids", ",", "version", "numbers", ",", "and", "type", "codes", "for", "each", "template", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates"}, {"question_toks": ["Show", "all", "distinct", "template", "type", "codes", "for", "all", "templates", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT Templates.Template_Type_Code FROM Templates"}, {"question_toks": ["What", "are", "the", "different", "template", "type", "codes", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types"}, {"question_toks": ["What", "are", "the", "ids", "of", "templates", "with", "template", "type", "code", "PP", "or", "PPT", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["Return", "the", "ids", "of", "templates", "that", "have", "the", "code", "PP", "or", "PPT", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["How", "many", "templates", "have", "template", "type", "code", "CV", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "templates", "of", "the", "type", "CV", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["What", "is", "the", "version", "number", "and", "template", "type", "code", "for", "the", "template", "with", "version", "number", "later", "than", "5", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'"}, {"question_toks": ["Return", "the", "version", "numbers", "and", "template", "type", "codes", "of", "templates", "with", "a", "version", "number", "greater", "than", "5", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) > 'terminal'"}, {"question_toks": ["Show", "all", "template", "type", "codes", "and", "number", "of", "templates", "for", "each", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code"}, {"question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "templates", "correspond", "to", "each", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code"}, {"question_toks": ["Which", "template", "type", "code", "has", "most", "number", "of", "templates", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "type", "code", "of", "the", "template", "type", "that", "the", "most", "templates", "belong", "to", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "all", "template", "type", "codes", "with", "less", "than", "three", "templates", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'"}, {"question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "have", "fewer", "than", "3", "templates", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "the", "smallest", "version", "number", "and", "its", "template", "type", "code", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["Return", "the", "lowest", "version", "number", ",", "along", "with", "its", "corresponding", "template", "type", "code", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Version_Number FROM Templates ORDER BY Templates.Template_Type_Code Asc"}, {"question_toks": ["What", "is", "the", "template", "type", "code", "of", "the", "template", "used", "by", "document", "with", "the", "name", "``", "Data", "base", "''", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Return", "the", "template", "type", "code", "of", "the", "template", "that", "is", "used", "by", "a", "document", "named", "Data", "base", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Show", "all", "document", "names", "using", "templates", "with", "template", "type", "code", "BK", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_Name FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "documents", "that", "use", "templates", "with", "the", "code", "BK", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_Name FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = 'terminal'"}, {"question_toks": ["Show", "all", "template", "type", "codes", "and", "the", "number", "of", "documents", "using", "each", "type", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code, Count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code"}, {"question_toks": ["What", "are", "the", "different", "template", "type", "codes", ",", "and", "how", "many", "documents", "use", "each", "type", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code, Count(*) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_Type_Code"}, {"question_toks": ["Which", "template", "type", "code", "is", "used", "by", "most", "number", "of", "documents", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "code", "of", "the", "template", "type", "that", "is", "most", "commonly", "used", "in", "documents", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "all", "template", "type", "codes", "that", "are", "not", "used", "by", "any", "document", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates EXCEPT SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID"}, {"question_toks": ["What", "are", "the", "codes", "of", "template", "types", "that", "are", "not", "used", "for", "any", "document", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_Type_Code FROM Templates EXCEPT SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID"}, {"question_toks": ["Show", "all", "template", "type", "codes", "and", "descriptions", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types"}, {"question_toks": ["What", "are", "the", "type", "codes", "and", "descriptions", "for", "all", "template", "types", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types"}, {"question_toks": ["What", "is", "the", "template", "type", "descriptions", "for", "template", "type", "code", "``", "AD", "''", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'"}, {"question_toks": ["Return", "the", "template", "type", "description", "of", "the", "template", "type", "with", "the", "code", "AD", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'"}, {"question_toks": ["What", "is", "the", "template", "type", "code", "for", "template", "type", "description", "``", "Book", "''", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'"}, {"question_toks": ["Return", "the", "type", "code", "of", "the", "template", "type", "with", "the", "description", "``", "Book", "''", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'terminal'"}, {"question_toks": ["What", "are", "the", "distinct", "template", "type", "descriptions", "for", "the", "templates", "ever", "used", "by", "any", "document", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code"}, {"question_toks": ["Return", "the", "different", "descriptions", "for", "templates", "that", "have", "been", "used", "in", "a", "document", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT DISTINCT * FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID"}, {"question_toks": ["What", "are", "the", "template", "ids", "with", "template", "type", "description", "``", "Presentation", "''", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Templates.Template_ID FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'terminal'"}, {"question_toks": ["Return", "the", "ids", "corresponding", "to", "templates", "with", "the", "description", "'Presentation", "'", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'terminal'"}, {"question_toks": ["How", "many", "paragraphs", "in", "total", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Paragraphs"}, {"question_toks": ["Count", "the", "number", "of", "paragraphs", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Paragraphs"}, {"question_toks": ["How", "many", "paragraphs", "for", "the", "document", "with", "name", "'Summer", "Show", "'", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "paragraphs", "in", "the", "document", "named", "'Summer", "Show", "'", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Show", "paragraph", "details", "for", "paragraph", "with", "text", "'Korea", "'", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'"}, {"question_toks": ["What", "are", "the", "details", "for", "the", "paragraph", "that", "includes", "the", "text", "'Korea", "'", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'"}, {"question_toks": ["Show", "all", "paragraph", "ids", "and", "texts", "for", "the", "document", "with", "name", "'Welcome", "to", "NY", "'", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "and", "texts", "of", "paragraphs", "in", "the", "document", "titled", "'Welcome", "to", "NY", "'", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Show", "all", "paragraph", "texts", "for", "the", "document", "``", "Customer", "reviews", "''", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["What", "are", "the", "paragraph", "texts", "for", "the", "document", "with", "the", "name", "'Customer", "reviews", "'", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'terminal'"}, {"question_toks": ["Show", "all", "document", "ids", "and", "the", "number", "of", "paragraphs", "in", "each", "document", ".", "Order", "by", "document", "id", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc"}, {"question_toks": ["Return", "the", "different", "document", "ids", "along", "with", "the", "number", "of", "paragraphs", "corresponding", "to", "each", ",", "ordered", "by", "id", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc"}, {"question_toks": ["Show", "all", "document", "ids", ",", "names", "and", "the", "number", "of", "paragraphs", "in", "each", "document", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Paragraphs.Document_ID"}, {"question_toks": ["What", "are", "the", "ids", "and", "names", "of", "each", "document", ",", "as", "well", "as", "the", "number", "of", "paragraphs", "in", "each", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Paragraphs.Document_ID"}, {"question_toks": ["List", "all", "document", "ids", "with", "at", "least", "two", "paragraphs", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "have", "2", "or", "more", "paragraphs", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "is", "the", "document", "id", "and", "name", "with", "greatest", "number", "of", "paragraphs", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "id", "and", "name", "of", "the", "document", "with", "the", "most", "paragraphs", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "document", "id", "with", "least", "number", "of", "paragraphs", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["Return", "the", "id", "of", "the", "document", "with", "the", "fewest", "paragraphs", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "document", "id", "with", "1", "to", "2", "paragraphs", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) = 'terminal'"}, {"question_toks": ["Give", "the", "ids", "of", "documents", "that", "have", "between", "one", "and", "two", "paragraphs", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_ID FROM Documents GROUP BY Documents.Document_ID HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Show", "the", "document", "id", "with", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "."], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Paragraphs.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "of", "documents", "that", "contain", "the", "paragraph", "text", "'Brazil", "'", "and", "'Ireland", "'", "?"], "db_id": "cre_Doc_Template_Mgt", "query": "SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text = 'terminal'"}, {"question_toks": ["How", "many", "teachers", "are", "there", "?"], "db_id": "course_teach", "query": "SELECT Count(*) FROM teacher"}, {"question_toks": ["What", "is", "the", "total", "count", "of", "teachers", "?"], "db_id": "course_teach", "query": "SELECT Count(*) FROM teacher"}, {"question_toks": ["List", "the", "names", "of", "teachers", "in", "ascending", "order", "of", "age", "."], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "ordered", "by", "ascending", "age", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher ORDER BY teacher.Age Desc"}, {"question_toks": ["What", "are", "the", "age", "and", "hometown", "of", "teachers", "?"], "db_id": "course_teach", "query": "SELECT teacher.Age, teacher.Hometown FROM teacher"}, {"question_toks": ["What", "is", "the", "age", "and", "hometown", "of", "every", "teacher", "?"], "db_id": "course_teach", "query": "SELECT teacher.Age, teacher.Hometown FROM teacher"}, {"question_toks": ["List", "the", "name", "of", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "''", "."], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "hometown", "is", "not", "``", "Little", "Lever", "Urban", "District", "''", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'"}, {"question_toks": ["Show", "the", "name", "of", "teachers", "aged", "either", "32", "or", "33", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "who", "are", "aged", "either", "32", "or", "33", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'"}, {"question_toks": ["What", "is", "the", "hometown", "of", "the", "youngest", "teacher", "?"], "db_id": "course_teach", "query": "SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1"}, {"question_toks": ["Where", "is", "the", "youngest", "teacher", "from", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher ORDER BY teacher.Age Desc LIMIT 1"}, {"question_toks": ["Show", "different", "hometown", "of", "teachers", "and", "the", "number", "of", "teachers", "from", "each", "hometown", "."], "db_id": "course_teach", "query": "SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown"}, {"question_toks": ["For", "each", "hometown", ",", "how", "many", "teachers", "are", "there", "?"], "db_id": "course_teach", "query": "SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown"}, {"question_toks": ["List", "the", "most", "common", "hometown", "of", "teachers", "."], "db_id": "course_teach", "query": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "most", "commmon", "hometowns", "for", "teachers", "?"], "db_id": "course_teach", "query": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "the", "hometowns", "shared", "by", "at", "least", "two", "teachers", "."], "db_id": "course_teach", "query": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "towns", "from", "which", "at", "least", "two", "teachers", "come", "from", "?"], "db_id": "course_teach", "query": "SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "."], "db_id": "course_teach", "query": "SELECT teacher.Name, course.Course FROM course JOIN teacher JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID AND course_arrange.Teacher_ID = teacher.Teacher_ID AND course.Course_ID = course_arrange.Course_ID"}, {"question_toks": ["What", "is", "the", "name", "of", "each", "teacher", "and", "what", "course", "they", "teach", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name, course.Course FROM course JOIN teacher JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID AND course_arrange.Teacher_ID = teacher.Teacher_ID AND course.Course_ID = course_arrange.Course_ID"}, {"question_toks": ["Show", "names", "of", "teachers", "and", "the", "courses", "they", "are", "arranged", "to", "teach", "in", "ascending", "alphabetical", "order", "of", "the", "teacher", "'s", "name", "."], "db_id": "course_teach", "query": "SELECT teacher.Name, course.Course FROM course JOIN teacher JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID AND course_arrange.Teacher_ID = teacher.Teacher_ID AND course.Course_ID = course_arrange.Course_ID ORDER BY teacher.Name Asc"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "the", "courses", "they", "teach", "in", "ascending", "alphabetical", "order", "by", "the", "name", "of", "the", "teacher", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name, course.Course FROM course JOIN teacher JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID AND course_arrange.Teacher_ID = teacher.Teacher_ID AND course.Course_ID = course_arrange.Course_ID ORDER BY teacher.Name Asc"}, {"question_toks": ["Show", "the", "name", "of", "the", "teacher", "for", "the", "math", "course", "."], "db_id": "course_teach", "query": "SELECT teacher.Name FROM course JOIN teacher JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID AND course_arrange.Teacher_ID = teacher.Teacher_ID AND course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "people", "who", "teach", "math", "courses", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM course JOIN teacher JOIN course_arrange ON course.Course_ID = course_arrange.Course_ID AND course_arrange.Teacher_ID = teacher.Teacher_ID AND course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'terminal'"}, {"question_toks": ["Show", "names", "of", "teachers", "and", "the", "number", "of", "courses", "they", "teach", "."], "db_id": "course_teach", "query": "SELECT teacher.Name, Count(*) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "and", "how", "many", "courses", "do", "they", "teach", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name, Count(*) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name"}, {"question_toks": ["Show", "names", "of", "teachers", "that", "teach", "at", "least", "two", "courses", "."], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "who", "teach", "at", "least", "two", "courses", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name HAVING Count(*) >= 'terminal'"}, {"question_toks": ["List", "the", "names", "of", "teachers", "who", "have", "not", "been", "arranged", "to", "teach", "courses", "."], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "whose", "courses", "have", "not", "been", "arranged", "?"], "db_id": "course_teach", "query": "SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)"}, {"question_toks": ["How", "many", "visitors", "below", "age", "30", "are", "there", "?"], "db_id": "museum_visit", "query": "SELECT Count(*) FROM visitor WHERE visitor.Age < 'terminal'"}, {"question_toks": ["Find", "the", "names", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "order", "the", "results", "by", "the", "level", "from", "high", "to", "low", "."], "db_id": "museum_visit", "query": "SELECT visitor.Name FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Level_of_membership Asc"}, {"question_toks": ["What", "is", "the", "average", "age", "of", "the", "visitors", "whose", "membership", "level", "is", "not", "higher", "than", "4", "?"], "db_id": "museum_visit", "query": "SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Age < 'terminal'"}, {"question_toks": ["Find", "the", "name", "and", "membership", "level", "of", "the", "visitors", "whose", "membership", "level", "is", "higher", "than", "4", ",", "and", "sort", "by", "their", "age", "from", "old", "to", "young", "."], "db_id": "museum_visit", "query": "SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Age > 'terminal' ORDER BY visitor.Age Asc"}, {"question_toks": ["Find", "the", "id", "and", "name", "of", "the", "museum", "that", "has", "the", "most", "staff", "members", "?"], "db_id": "museum_visit", "query": "SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff Desc LIMIT 1"}, {"question_toks": ["Find", "the", "average", "number", "of", "staff", "working", "for", "the", "museums", "that", "were", "open", "before", "2009", "."], "db_id": "museum_visit", "query": "SELECT Avg(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 'terminal'"}, {"question_toks": ["What", "are", "the", "opening", "year", "and", "staff", "number", "of", "the", "museum", "named", "Plaza", "Museum", "?"], "db_id": "museum_visit", "query": "SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = 'terminal'"}, {"question_toks": ["find", "the", "names", "of", "museums", "which", "have", "more", "staff", "than", "the", "minimum", "staff", "number", "of", "all", "museums", "opened", "after", "2010", "."], "db_id": "museum_visit", "query": "SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > 'terminal'"}, {"question_toks": ["find", "the", "id", ",", "name", "and", "age", "for", "visitors", "who", "visited", "some", "museums", "more", "than", "once", "."], "db_id": "museum_visit", "query": "SELECT museum.Museum_ID, museum.Name, visitor.Age FROM museum JOIN visitor JOIN visit ON museum.Museum_ID = visit.Museum_ID AND visit.visitor_ID = visitor.ID GROUP BY museum.Museum_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "id", ",", "name", "and", "membership", "level", "of", "visitors", "who", "have", "spent", "the", "largest", "amount", "of", "money", "in", "total", "in", "all", "museum", "tickets", "?"], "db_id": "museum_visit", "query": "SELECT visit.Museum_ID, museum.Name, Sum(visit.Total_spent) FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY visit.Museum_ID ORDER BY Sum(visit.Total_spent) Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "id", "and", "name", "of", "the", "museum", "visited", "most", "times", "?"], "db_id": "museum_visit", "query": "SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "museum", "that", "had", "no", "visitor", "yet", "?"], "db_id": "museum_visit", "query": "SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)"}, {"question_toks": ["Find", "the", "name", "and", "age", "of", "the", "visitor", "who", "bought", "the", "most", "tickets", "at", "once", "."], "db_id": "museum_visit", "query": "SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "average", "and", "maximum", "number", "of", "tickets", "bought", "in", "all", "visits", "?"], "db_id": "museum_visit", "query": "SELECT Avg(visit.Num_of_Ticket), Min(visit.Num_of_Ticket) FROM visit"}, {"question_toks": ["What", "is", "the", "total", "ticket", "expense", "of", "the", "visitors", "whose", "membership", "level", "is", "1", "?"], "db_id": "museum_visit", "query": "SELECT Sum(museum.Num_of_Staff) FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE visit.Num_of_Ticket = 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "visitor", "who", "visited", "both", "a", "museum", "opened", "before", "2009", "and", "a", "museum", "opened", "after", "2011", "?"], "db_id": "museum_visit", "query": "SELECT museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE museum.Open_Year > 'terminal' INTERSECT SELECT museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID WHERE museum.Open_Year < 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "visitors", "who", "did", "not", "visit", "any", "museum", "opened", "after", "2010", "."], "db_id": "museum_visit", "query": "SELECT Count(*) FROM visit WHERE visit.Museum_ID NOT IN (SELECT museum.Museum_ID FROM museum WHERE museum.Open_Year < 'terminal')"}, {"question_toks": ["How", "many", "museums", "were", "opened", "after", "2013", "or", "before", "2008", "?"], "db_id": "museum_visit", "query": "SELECT Count(*) FROM museum WHERE museum.Open_Year > 'terminal' OR museum.Open_Year < 'terminal'"}, {"question_toks": ["Find", "the", "total", "number", "of", "players", "."], "db_id": "wta_1", "query": "SELECT Count(*) FROM players"}, {"question_toks": ["How", "many", "players", "are", "there", "?"], "db_id": "wta_1", "query": "SELECT Count(*) FROM players"}, {"question_toks": ["Find", "the", "total", "number", "of", "matches", "."], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches"}, {"question_toks": ["Count", "the", "number", "of", "matches", "."], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches"}, {"question_toks": ["List", "the", "first", "name", "and", "birth", "date", "of", "all", "players", "from", "the", "country", "with", "code", "USA", "."], "db_id": "wta_1", "query": "SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'"}, {"question_toks": ["What", "are", "the", "first", "names", "and", "birth", "dates", "of", "players", "from", "the", "USA", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'"}, {"question_toks": ["Find", "the", "average", "age", "of", "losers", "and", "winners", "of", "all", "matches", "."], "db_id": "wta_1", "query": "SELECT Avg(matches.loser_rank_points) FROM matches"}, {"question_toks": ["What", "are", "the", "average", "ages", "of", "losers", "and", "winners", "across", "matches", "?"], "db_id": "wta_1", "query": "SELECT Avg(matches.loser_rank_points) FROM matches"}, {"question_toks": ["Find", "the", "average", "rank", "of", "winners", "in", "all", "matches", "."], "db_id": "wta_1", "query": "SELECT Avg(rankings.ranking) FROM rankings"}, {"question_toks": ["What", "is", "the", "average", "rank", "for", "winners", "in", "all", "matches", "?"], "db_id": "wta_1", "query": "SELECT Avg(rankings.ranking) FROM rankings"}, {"question_toks": ["Find", "the", "highest", "rank", "of", "losers", "in", "all", "matches", "."], "db_id": "wta_1", "query": "SELECT rankings.ranking FROM rankings ORDER BY rankings.ranking Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "best", "rank", "of", "losers", "across", "all", "matches", "?"], "db_id": "wta_1", "query": "SELECT rankings.ranking FROM players JOIN matches ON players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.best_of Asc LIMIT 1"}, {"question_toks": ["find", "the", "number", "of", "distinct", "country", "codes", "of", "all", "players", "."], "db_id": "wta_1", "query": "SELECT Count(DISTINCT players.country_code) FROM players"}, {"question_toks": ["How", "many", "distinct", "countries", "do", "players", "come", "from", "?"], "db_id": "wta_1", "query": "SELECT Count(DISTINCT players.country_code) FROM players"}, {"question_toks": ["Find", "the", "number", "of", "distinct", "name", "of", "losers", "."], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches"}, {"question_toks": ["How", "many", "different", "loser", "names", "are", "there", "?"], "db_id": "wta_1", "query": "SELECT Count(DISTINCT matches.loser_name) FROM matches"}, {"question_toks": ["Find", "the", "name", "of", "tourney", "that", "has", "more", "than", "10", "matches", "."], "db_id": "wta_1", "query": "SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_id HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "tournaments", "that", "have", "more", "than", "10", "matches", "?"], "db_id": "wta_1", "query": "SELECT matches.winner_name FROM matches GROUP BY matches.winner_name HAVING Count(*) > 'terminal'"}, {"question_toks": ["List", "the", "names", "of", "all", "winners", "who", "played", "in", "both", "2013", "and", "2016", "."], "db_id": "wta_1", "query": "SELECT matches.winner_name FROM matches WHERE matches.year BETWEEN 'terminal' AND 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "players", "who", "won", "in", "both", "2013", "and", "2016", "?"], "db_id": "wta_1", "query": "SELECT players.first_name FROM players JOIN matches ON players.player_id = matches.loser_id WHERE players.birth_date = 'terminal' INTERSECT SELECT players.first_name FROM players WHERE players.birth_date = 'terminal'"}, {"question_toks": ["List", "the", "number", "of", "all", "matches", "who", "played", "in", "years", "of", "2013", "or", "2016", "."], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'"}, {"question_toks": ["How", "many", "matches", "were", "played", "in", "2013", "or", "2016", "?"], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'"}, {"question_toks": ["What", "are", "the", "country", "code", "and", "first", "name", "of", "the", "players", "who", "won", "in", "both", "tourney", "WTA", "Championships", "and", "Australian", "Open", "?"], "db_id": "wta_1", "query": "SELECT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_name = 'terminal'"}, {"question_toks": ["What", "are", "the", "first", "names", "and", "country", "codes", "for", "players", "who", "won", "both", "the", "WTA", "Championships", "and", "the", "Australian", "Open", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.tourney_name = 'terminal'"}, {"question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "."], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "oldest", "player", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1"}, {"question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "in", "the", "order", "of", "birth", "date", "."], "db_id": "wta_1", "query": "SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc"}, {"question_toks": ["What", "are", "the", "full", "names", "of", "all", "players", ",", "sorted", "by", "birth", "date", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc"}, {"question_toks": ["List", "the", "first", "and", "last", "name", "of", "all", "players", "who", "are", "left", "/", "L", "hand", "in", "the", "order", "of", "birth", "date", "."], "db_id": "wta_1", "query": "SELECT players.first_name, players.last_name FROM players WHERE players.hand = 'terminal' ORDER BY players.birth_date Asc"}, {"question_toks": ["What", "are", "the", "full", "names", "of", "all", "left", "handed", "players", ",", "in", "order", "of", "birth", "date", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc"}, {"question_toks": ["Find", "the", "first", "name", "and", "country", "code", "of", "the", "player", "who", "did", "the", "most", "number", "of", "tours", "."], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "first", "name", "and", "country", "code", "of", "the", "player", "with", "the", "most", "tours", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "year", "that", "has", "the", "most", "number", "of", "matches", "."], "db_id": "wta_1", "query": "SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "year", "had", "the", "most", "matches", "?"], "db_id": "wta_1", "query": "SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "name", "and", "rank", "points", "of", "the", "winner", "who", "won", "the", "most", "times", "."], "db_id": "wta_1", "query": "SELECT matches.winner_name, rankings.ranking_points FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY matches.winner_ioc ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "winner", "who", "has", "won", "the", "most", "matches", ",", "and", "how", "many", "rank", "points", "does", "this", "player", "have", "?"], "db_id": "wta_1", "query": "SELECT matches.winner_name, Count(*) FROM matches GROUP BY matches.winner_hand ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "name", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "and", "participated", "in", "the", "Australian", "Open", "tourney", "."], "db_id": "wta_1", "query": "SELECT matches.winner_name FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "winner", "with", "the", "most", "rank", "points", "who", "participated", "in", "the", "Australian", "Open", "tournament", "?"], "db_id": "wta_1", "query": "SELECT matches.winner_name FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'terminal' ORDER BY rankings.ranking_points Desc LIMIT 1"}, {"question_toks": ["find", "the", "names", "of", "loser", "and", "winner", "who", "played", "in", "the", "match", "with", "greatest", "number", "of", "minutes", "."], "db_id": "wta_1", "query": "SELECT matches.winner_name, matches.winner_name FROM matches ORDER BY matches.minutes Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "winner", "and", "loser", "who", "played", "in", "the", "longest", "match", "?"], "db_id": "wta_1", "query": "SELECT matches.winner_name, matches.loser_name FROM matches ORDER BY matches.loser_age Desc LIMIT 1"}, {"question_toks": ["Find", "the", "average", "ranking", "for", "each", "player", "and", "their", "first", "name", "."], "db_id": "wta_1", "query": "SELECT Avg(rankings.ranking), players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name"}, {"question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "average", "rankings", "?"], "db_id": "wta_1", "query": "SELECT Avg(*), players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name"}, {"question_toks": ["Find", "the", "total", "ranking", "points", "for", "each", "player", "and", "their", "first", "name", "."], "db_id": "wta_1", "query": "SELECT Sum(rankings.ranking_points), players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name"}, {"question_toks": ["What", "are", "the", "first", "names", "of", "all", "players", ",", "and", "their", "total", "ranking", "points", "?"], "db_id": "wta_1", "query": "SELECT Sum(rankings.ranking_points), players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name"}, {"question_toks": ["find", "the", "number", "of", "players", "for", "each", "country", "."], "db_id": "wta_1", "query": "SELECT Count(*), players.country_code FROM players GROUP BY players.country_code"}, {"question_toks": ["How", "many", "players", "are", "from", "each", "country", "?"], "db_id": "wta_1", "query": "SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code"}, {"question_toks": ["find", "the", "code", "of", "the", "country", "where", "has", "the", "greatest", "number", "of", "players", "."], "db_id": "wta_1", "query": "SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "code", "of", "the", "country", "with", "the", "most", "players", "?"], "db_id": "wta_1", "query": "SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "codes", "of", "countries", "that", "have", "more", "than", "50", "players", "."], "db_id": "wta_1", "query": "SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "codes", "of", "countries", "with", "more", "than", "50", "players", "?"], "db_id": "wta_1", "query": "SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'"}, {"question_toks": ["Find", "the", "total", "number", "of", "tours", "for", "each", "ranking", "date", "."], "db_id": "wta_1", "query": "SELECT Sum(rankings.tours), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date"}, {"question_toks": ["How", "many", "total", "tours", "were", "there", "for", "each", "ranking", "date", "?"], "db_id": "wta_1", "query": "SELECT Sum(rankings.tours), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date"}, {"question_toks": ["Find", "the", "number", "of", "matches", "happened", "in", "each", "year", "."], "db_id": "wta_1", "query": "SELECT Count(*), matches.year FROM matches GROUP BY matches.year"}, {"question_toks": ["How", "many", "matches", "were", "played", "in", "each", "year", "?"], "db_id": "wta_1", "query": "SELECT Count(*), matches.year FROM matches GROUP BY matches.year"}, {"question_toks": ["Find", "the", "name", "and", "rank", "of", "the", "3", "youngest", "winners", "across", "all", "matches", "."], "db_id": "wta_1", "query": "SELECT matches.winner_name, matches.winner_hand FROM matches ORDER BY matches.winner_age Asc LIMIT 1"}, {"question_toks": ["What", "are", "the", "names", "and", "ranks", "of", "the", "three", "youngest", "winners", "across", "all", "matches", "?"], "db_id": "wta_1", "query": "SELECT matches.winner_name, matches.winner_age FROM matches ORDER BY matches.winner_ioc Asc LIMIT 1"}, {"question_toks": ["How", "many", "different", "winners", "both", "participated", "in", "the", "WTA", "Championships", "and", "were", "left", "handed", "?"], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches WHERE matches.tourney_name = 'terminal' OR matches.winner_age = 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "left", "handed", "winners", "who", "participated", "in", "the", "WTA", "Championships", "."], "db_id": "wta_1", "query": "SELECT Count(*) FROM matches WHERE matches.tourney_name = 'terminal'"}, {"question_toks": ["Find", "the", "first", "name", ",", "country", "code", "and", "birth", "date", "of", "the", "winner", "who", "has", "the", "highest", "rank", "points", "in", "all", "matches", "."], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "first", "name", ",", "country", "code", ",", "and", "birth", "date", "of", "the", "player", "with", "the", "most", "winner", "rank", "points", "across", "all", "matches", "?"], "db_id": "wta_1", "query": "SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "number", "of", "players", "for", "each", "hand", "type", "."], "db_id": "wta_1", "query": "SELECT players.hand, Count(*) FROM players GROUP BY players.hand"}, {"question_toks": ["How", "many", "players", "are", "there", "for", "each", "hand", "type", "?"], "db_id": "wta_1", "query": "SELECT players.hand, Count(*) FROM players GROUP BY players.hand"}, {"question_toks": ["How", "many", "ships", "ended", "up", "being", "'Captured", "'", "?"], "db_id": "battle_death", "query": "SELECT Count(*) FROM ship"}, {"question_toks": ["List", "the", "name", "and", "tonnage", "ordered", "by", "in", "descending", "alphaetical", "order", "for", "the", "names", "."], "db_id": "battle_death", "query": "SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name Desc"}, {"question_toks": ["List", "the", "name", ",", "date", "and", "result", "of", "each", "battle", "."], "db_id": "battle_death", "query": "SELECT battle.name, battle.date, battle.result FROM battle"}, {"question_toks": ["What", "is", "maximum", "and", "minimum", "death", "toll", "caused", "each", "time", "?"], "db_id": "battle_death", "query": "SELECT Max(death.injured), Min(death.injured), death.killed FROM death GROUP BY death.killed"}, {"question_toks": ["What", "is", "the", "average", "number", "of", "injuries", "caused", "each", "time", "?"], "db_id": "battle_death", "query": "SELECT Avg(death.injured), death.killed FROM death GROUP BY death.killed"}, {"question_toks": ["What", "are", "the", "death", "and", "injury", "situations", "caused", "by", "the", "ship", "with", "tonnage", "'t", "'", "?"], "db_id": "battle_death", "query": "SELECT *, death.killed FROM ship JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = 'terminal'"}, {"question_toks": ["What", "are", "the", "name", "and", "results", "of", "the", "battles", "when", "the", "bulgarian", "commander", "is", "not", "'Boril", "'"], "db_id": "battle_death", "query": "SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "ids", "and", "names", "of", "the", "battles", "that", "lost", "any", "'Brig", "'", "type", "shipes", "?"], "db_id": "battle_death", "query": "SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "and", "names", "of", "the", "battles", "that", "led", "to", "more", "than", "10", "people", "killed", "in", "total", "."], "db_id": "battle_death", "query": "SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle GROUP BY battle.id HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "is", "the", "ship", "id", "and", "name", "that", "caused", "most", "total", "injuries", "?"], "db_id": "battle_death", "query": "SELECT ship.id, ship.name FROM ship GROUP BY ship.id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "distinct", "battle", "names", "which", "are", "between", "bulgarian", "commander", "'Kaloyan", "'", "and", "latin", "commander", "'Baldwin", "I", "'", "?"], "db_id": "battle_death", "query": "SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'terminal' AND battle.latin_commander = 'terminal'"}, {"question_toks": ["How", "many", "different", "results", "are", "there", "for", "the", "battles", "?"], "db_id": "battle_death", "query": "SELECT Count(DISTINCT battle.result) FROM battle"}, {"question_toks": ["How", "many", "battles", "did", "not", "lose", "any", "ship", "with", "tonnage", "'225", "'", "?"], "db_id": "battle_death", "query": "SELECT Count(*) FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = 'terminal')"}, {"question_toks": ["List", "the", "name", "and", "date", "the", "battle", "that", "has", "lost", "the", "ship", "named", "'Lettice", "'", "and", "the", "ship", "named", "'HMS", "Atalanta", "'"], "db_id": "battle_death", "query": "SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name = 'terminal' INTERSECT SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name = 'terminal'"}, {"question_toks": ["Show", "names", ",", "results", "and", "bulgarian", "commanders", "of", "the", "battles", "with", "no", "ships", "lost", "in", "the", "'English", "Channel", "'", "."], "db_id": "battle_death", "query": "SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location = 'terminal')"}, {"question_toks": ["What", "are", "the", "notes", "of", "the", "death", "events", "which", "has", "substring", "'East", "'", "?"], "db_id": "battle_death", "query": "SELECT death.note FROM death WHERE death.note LIKE 'terminal'"}, {"question_toks": ["what", "are", "all", "the", "addresses", "including", "line", "1", "and", "line", "2", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Addresses.line_1 FROM Addresses WHERE Addresses.line_2 = 'terminal'"}, {"question_toks": ["What", "is", "the", "first", "and", "second", "line", "for", "all", "addresses", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Addresses.line_1, Addresses.line_1 FROM Addresses GROUP BY Addresses.line_1 ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["How", "many", "courses", "in", "total", "are", "listed", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*) FROM Courses"}, {"question_toks": ["How", "many", "courses", "are", "there", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*) FROM Courses"}, {"question_toks": ["How", "is", "the", "math", "course", "described", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'"}, {"question_toks": ["What", "are", "the", "descriptions", "for", "all", "the", "math", "courses", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "zip", "code", "of", "the", "address", "in", "the", "city", "Port", "Chelsea", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'"}, {"question_toks": ["What", "is", "the", "zip", "code", "for", "Port", "Chelsea", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'"}, {"question_toks": ["Which", "department", "offers", "the", "most", "number", "of", "degrees", "?", "List", "department", "name", "and", "id", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Departments.department_name, Degree_Programs.department_id FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["For", "each", "department", "id", ",", "what", "is", "the", "name", "of", "the", "department", "with", "the", "most", "number", "of", "degrees", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Departments.department_name, Degree_Programs.department_id FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["How", "many", "departments", "offer", "any", "degree", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs"}, {"question_toks": ["How", "many", "different", "departments", "offer", "degrees", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs"}, {"question_toks": ["How", "many", "different", "degree", "names", "are", "offered", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs"}, {"question_toks": ["How", "many", "different", "degrees", "are", "offered", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs"}, {"question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "offer", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id WHERE Departments.department_name = 'terminal'"}, {"question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "have", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*) FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id WHERE Departments.department_name = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "and", "descriptions", "of", "all", "the", "sections", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Sections.section_name, Sections.section_description FROM Sections"}, {"question_toks": ["What", "are", "the", "names", "and", "descriptions", "for", "all", "the", "sections", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Sections.section_name, Sections.section_description FROM Sections"}, {"question_toks": ["What", "are", "the", "names", "and", "id", "of", "courses", "having", "at", "most", "2", "sections", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "and", "ids", "of", "every", "course", "with", "less", "than", "2", "sections", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id HAVING Count(*) = 'terminal'"}, {"question_toks": ["List", "the", "section_name", "in", "reversed", "lexicographical", "order", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Asc"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "sections", "in", "reverse", "alphabetical", "order", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Asc"}, {"question_toks": ["What", "is", "the", "semester", "which", "most", "student", "registered", "in", "?", "Show", "both", "the", "name", "and", "the", "id", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["For", "each", "semester", ",", "what", "is", "the", "name", "and", "id", "of", "the", "one", "with", "the", "most", "students", "registered", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "description", "of", "the", "department", "whose", "name", "has", "the", "substring", "the", "computer", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'"}, {"question_toks": ["What", "is", "the", "department", "description", "for", "the", "one", "whose", "name", "has", "the", "word", "computer", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'"}, {"question_toks": ["Who", "are", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "and", "the", "id", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Semesters.semester_id FROM Degree_Programs JOIN Semesters JOIN Students JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.semester_id = Semesters.semester_id AND Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.student_id = Students.student_id AND Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Semesters.semester_id HAVING Count(*) = 'terminal'"}, {"question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", ",", "along", "with", "the", "ids", ",", "of", "all", "students", "who", "enrolled", "in", "2", "degree", "programs", "in", "one", "semester", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Student_Enrolment.student_enrolment_id, Student_Enrolment.student_enrolment_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Student_Enrolment.student_enrolment_id HAVING Count(*) = 'terminal'"}, {"question_toks": ["Who", "is", "enrolled", "in", "a", "Bachelor", "degree", "program", "?", "List", "the", "first", "name", ",", "middle", "name", ",", "last", "name", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Degree_Programs JOIN Students JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.student_id = Students.student_id WHERE Degree_Programs.degree_summary_name = 'terminal'"}, {"question_toks": ["What", "are", "the", "first", ",", "middle", ",", "and", "last", "names", "for", "everybody", "enrolled", "in", "a", "Bachelors", "program", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Degree_Programs JOIN Students JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.student_id = Students.student_id WHERE Degree_Programs.degree_summary_name = 'terminal'"}, {"question_toks": ["Find", "the", "kind", "of", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Transcript_Contents.transcript_id FROM Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "degree", "summary", "name", "that", "has", "the", "most", "number", "of", "students", "enrolled", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "program", "which", "most", "number", "of", "students", "are", "enrolled", "in", ".", "List", "both", "the", "id", "and", "the", "summary", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Student_Enrolment.student_id, * FROM Student_Enrolment GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "program", "id", "and", "the", "summary", "of", "the", "degree", "that", "has", "the", "most", "students", "enrolled", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Student_Enrolment.degree_program_id, Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "student", "has", "enrolled", "for", "the", "most", "times", "in", "any", "program", "?", "List", "the", "id", ",", "first", "name", ",", "middle", "name", ",", "last", "name", ",", "the", "number", "of", "enrollments", "and", "student", "id", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Student_Enrolment.student_id, Students.first_name, Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", ",", "along", "with", "the", "id", "and", "number", "of", "enrollments", ",", "for", "the", "student", "who", "enrolled", "the", "most", "in", "any", "program", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Student_Enrolment.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "semesters", "do", "not", "have", "any", "student", "enrolled", "?", "List", "the", "semester", "name", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Semesters.semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "semester", "with", "no", "students", "enrolled", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Semesters.semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id"}, {"question_toks": ["What", "are", "all", "the", "course", "names", "of", "the", "courses", "which", "ever", "have", "students", "enrolled", "in", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_name FROM Courses INTERSECT SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id"}, {"question_toks": ["What", "are", "the", "names", "of", "all", "courses", "that", "have", "some", "students", "enrolled", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_name FROM Courses INTERSECT SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id"}, {"question_toks": ["What", "'s", "the", "name", "of", "the", "course", "with", "most", "number", "of", "enrollments", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "course", "with", "the", "most", "students", "enrolled", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "last", "name", "of", "the", "students", "who", "currently", "live", "in", "the", "state", "of", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "program", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.last_name FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id WHERE Addresses.state_province_county IN (SELECT Student_Enrolment.student_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id AND Addresses.address_id = Students.current_address_id JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.city = 'terminal')"}, {"question_toks": ["What", "are", "the", "last", "name", "of", "the", "students", "who", "live", "in", "North", "Carolina", "but", "have", "not", "registered", "in", "any", "degree", "programs", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.last_name FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id WHERE Addresses.city = 'terminal' EXCEPT SELECT Students.last_name FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id WHERE Addresses.city = 'terminal'"}, {"question_toks": ["Show", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "course", "results", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "at", "least", "2", "courses", "listed", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.date_left, Transcripts.transcript_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id AND Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id AND Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Transcripts JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id AND Transcript_Contents.transcript_id = Transcripts.transcript_id AND Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id GROUP BY Transcripts.transcript_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "is", "the", "phone", "number", "of", "the", "man", "with", "the", "first", "name", "Timmothy", "and", "the", "last", "name", "Ward", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.date_first_registered FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "mobile", "phone", "number", "of", "the", "student", "named", "Timothy", "Ward", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.date_first_registered FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'"}, {"question_toks": ["Who", "is", "the", "first", "student", "to", "register", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students"}, {"question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "first", "student", "to", "register", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1"}, {"question_toks": ["Who", "is", "the", "earliest", "graduate", "of", "the", "school", "?", "List", "the", "first", "name", ",", "middle", "name", "and", "last", "name", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_left Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "first", ",", "middle", ",", "and", "last", "name", "of", "the", "earliest", "school", "graduate", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_left Asc LIMIT 1"}, {"question_toks": ["Whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "address", "?", "List", "his", "or", "her", "first", "name", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name, Students.current_address_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id"}, {"question_toks": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "permanent", "address", "is", "different", "from", "his", "or", "her", "current", "one", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name FROM Students WHERE Students.permanent_address_id = 'terminal'"}, {"question_toks": ["Which", "address", "holds", "the", "most", "number", "of", "students", "currently", "?", "List", "the", "address", "id", "and", "all", "lines", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Addresses.address_id, Addresses.address_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "id", ",", "line", "1", ",", "and", "line", "2", "of", "the", "address", "with", "the", "most", "students", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["On", "average", ",", "when", "were", "the", "transcripts", "printed", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Avg(Transcripts.transcript_date) FROM Transcripts"}, {"question_toks": ["What", "is", "the", "average", "transcript", "date", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Avg(Transcripts.transcript_date) FROM Transcripts"}, {"question_toks": ["When", "is", "the", "first", "transcript", "released", "?", "List", "the", "date", "and", "details", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Transcripts.transcript_date, Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "earliest", "date", "of", "a", "transcript", "release", ",", "and", "what", "details", "can", "you", "tell", "me", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.date_left, Transcripts.transcript_date FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Transcripts JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id AND Transcript_Contents.transcript_id = Transcripts.transcript_id ORDER BY Transcripts.transcript_date Asc LIMIT 1"}, {"question_toks": ["How", "many", "transcripts", "are", "released", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*) FROM Transcripts"}, {"question_toks": ["How", "many", "transcripts", "are", "listed", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*) FROM Transcripts"}, {"question_toks": ["What", "is", "the", "last", "transcript", "release", "date", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1"}, {"question_toks": ["When", "was", "the", "last", "transcript", "released", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1"}, {"question_toks": ["How", "many", "times", "at", "most", "can", "a", "course", "enrollment", "result", "show", "in", "different", "transcripts", "?", "Also", "show", "the", "course", "enrollment", "id", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*), Transcript_Contents.transcript_id FROM Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "maximum", "number", "of", "times", "that", "a", "course", "shows", "up", "in", "different", "transcripts", "and", "what", "is", "that", "course", "'s", "enrollment", "id", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(*), Transcript_Contents.transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "the", "date", "of", "the", "transcript", "which", "shows", "the", "least", "number", "of", "results", ",", "also", "list", "the", "id", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.date_left, Transcripts.transcript_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id AND Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id AND Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Transcripts JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id AND Transcript_Contents.transcript_id = Transcripts.transcript_id AND Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "date", "and", "id", "of", "the", "transcript", "with", "the", "least", "number", "of", "results", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.date_left, Transcripts.transcript_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Student_Enrolment_Courses ON Student_Enrolment.student_enrolment_id = Student_Enrolment_Courses.student_enrolment_id JOIN Transcripts JOIN Transcript_Contents ON Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id AND Transcript_Contents.transcript_id = Transcripts.transcript_id GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["Find", "the", "semester", "when", "both", "Master", "students", "and", "Bachelor", "students", "got", "enrolled", "in", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Semesters.semester_name FROM Degree_Programs JOIN Semesters JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.semester_id = Semesters.semester_id AND Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Semesters.semester_name FROM Degree_Programs JOIN Semesters JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.semester_id = Semesters.semester_id AND Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id WHERE Degree_Programs.degree_summary_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "id", "of", "the", "semester", "that", "had", "both", "Masters", "and", "Bachelors", "students", "enrolled", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Student_Enrolment.semester_id FROM Degree_Programs JOIN Semesters JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.semester_id = Semesters.semester_id AND Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Student_Enrolment.semester_id FROM Degree_Programs JOIN Semesters JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id AND Student_Enrolment.semester_id = Semesters.semester_id AND Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id WHERE Degree_Programs.degree_summary_name = 'terminal'"}, {"question_toks": ["How", "many", "different", "addresses", "do", "the", "students", "currently", "live", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Count(DISTINCT Addresses.address_id) FROM Addresses"}, {"question_toks": ["What", "are", "the", "different", "addresses", "that", "have", "students", "living", "there", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT DISTINCT Addresses.address_id FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id"}, {"question_toks": ["List", "all", "the", "student", "details", "in", "reversed", "lexicographical", "order", "."], "db_id": "student_transcripts_tracking", "query": "SELECT * FROM Students ORDER BY Students.last_name Asc"}, {"question_toks": ["What", "other", "details", "can", "you", "tell", "me", "about", "students", "in", "reverse", "alphabetical", "order", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Student_Enrolment.other_details FROM Student_Enrolment ORDER BY Student_Enrolment.other_details Asc"}, {"question_toks": ["Describe", "the", "section", "h", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Sections.section_name FROM Sections WHERE Sections.section_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "description", "for", "the", "section", "named", "h", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'"}, {"question_toks": ["Find", "the", "first", "name", "of", "the", "students", "who", "permanently", "live", "in", "the", "country", "Haiti", "or", "have", "the", "cell", "phone", "number", "09700166582", "."], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id WHERE Students.cell_mobile_number = 'terminal' OR Students.cell_mobile_number = 'terminal'"}, {"question_toks": ["What", "are", "the", "first", "names", "of", "the", "students", "who", "live", "in", "Haiti", "permanently", "or", "have", "the", "cell", "phone", "number", "09700166582", "?"], "db_id": "student_transcripts_tracking", "query": "SELECT Students.first_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Students.cell_mobile_number = 'terminal' OR Students.cell_mobile_number = 'terminal'"}, {"question_toks": ["List", "the", "title", "of", "all", "cartoons", "in", "alphabetical", "order", "."], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc"}, {"question_toks": ["What", "are", "the", "titles", "of", "the", "cartoons", "sorted", "alphabetically", "?"], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc"}, {"question_toks": ["List", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "."], "db_id": "tvshow", "query": "SELECT Cartoon.Directed_by FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "?"], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["How", "many", "cartoons", "were", "written", "by", "``", "Joseph", "Kuhr", "''", "?"], "db_id": "tvshow", "query": "SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "cartoones", "written", "by", "Joseph", "Kuhr", "?"], "db_id": "tvshow", "query": "SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'"}, {"question_toks": ["list", "all", "cartoon", "titles", "and", "their", "directors", "ordered", "by", "their", "air", "date"], "db_id": "tvshow", "query": "SELECT Cartoon.Title, Cartoon.Directed_by FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date Asc"}, {"question_toks": ["What", "is", "the", "name", "and", "directors", "of", "all", "the", "cartoons", "that", "are", "ordered", "by", "air", "date", "?"], "db_id": "tvshow", "query": "SELECT Cartoon.Title, Cartoon.Written_by FROM TV_Channel JOIN TV_series ON TV_series.Channel = TV_Channel.id JOIN Cartoon ON TV_Channel.id = Cartoon.Channel ORDER BY TV_series.Air_Date Desc"}, {"question_toks": ["List", "the", "title", "of", "all", "cartoon", "directed", "by", "``", "Ben", "Jones", "''", "or", "``", "Brandon", "Vietti", "''", "."], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["What", "are", "the", "titles", "of", "all", "cartoons", "directed", "by", "Ben", "Jones", "or", "Brandon", "Vietti", "?"], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["Which", "country", "has", "the", "most", "of", "TV", "Channels", "?", "List", "the", "country", "and", "number", "of", "TV", "Channels", "it", "has", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "country", "with", "the", "most", "number", "of", "TV", "Channels", "and", "how", "many", "does", "it", "have", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["List", "the", "number", "of", "different", "series", "names", "and", "contents", "in", "the", "TV", "Channel", "table", "."], "db_id": "tvshow", "query": "SELECT Count(DISTINCT TV_Channel.series_name), Count(DISTINCT TV_Channel.Pay_per_view_PPV) FROM TV_Channel"}, {"question_toks": ["How", "many", "different", "series", "and", "contents", "are", "listed", "in", "the", "TV", "Channel", "table", "?"], "db_id": "tvshow", "query": "SELECT Count(DISTINCT TV_Channel.series_name), Count(DISTINCT TV_Channel.Pay_per_view_PPV) FROM TV_Channel"}, {"question_toks": ["What", "is", "the", "content", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "content", "of", "the", "series", "Sky", "Radio", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "Package", "Option", "of", "TV", "Channel", "with", "serial", "name", "``", "Sky", "Radio", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["What", "are", "the", "Package", "Options", "of", "the", "TV", "Channels", "whose", "series", "names", "are", "Sky", "Radio", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["How", "many", "TV", "Channel", "using", "language", "English", "?"], "db_id": "tvshow", "query": "SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'"}, {"question_toks": ["How", "many", "TV", "Channels", "use", "the", "English", "language", "?"], "db_id": "tvshow", "query": "SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'"}, {"question_toks": ["List", "the", "language", "used", "least", "number", "of", "TV", "Channel", ".", "List", "language", "and", "number", "of", "TV", "Channel", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["What", "are", "the", "languages", "used", "by", "the", "least", "number", "of", "TV", "Channels", "and", "how", "many", "channels", "use", "it", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["List", "each", "language", "and", "the", "number", "of", "TV", "Channels", "using", "it", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language"}, {"question_toks": ["For", "each", "language", ",", "list", "the", "number", "of", "TV", "Channels", "that", "use", "it", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language"}, {"question_toks": ["What", "is", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "!", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'terminal'"}, {"question_toks": ["What", "is", "the", "series", "name", "of", "the", "TV", "Channel", "that", "shows", "the", "cartoon", "``", "The", "Rise", "of", "the", "Blue", "Beetle", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'terminal'"}, {"question_toks": ["List", "the", "title", "of", "all", "Cartoons", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "title", "of", "all", "the", "cartools", "that", "are", "on", "the", "TV", "Channel", "with", "the", "series", "name", "``", "Sky", "Radio", "''", "?"], "db_id": "tvshow", "query": "SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "sorted", "by", "rating", "."], "db_id": "tvshow", "query": "SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Desc"}, {"question_toks": ["What", "are", "all", "of", "the", "episodes", "ordered", "by", "ratings", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Desc"}, {"question_toks": ["List", "top", "3", "highest", "Rating", "TV", "series", ".", "List", "the", "TV", "series", "'s", "Episode", "and", "Rating", "."], "db_id": "tvshow", "query": "SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1"}, {"question_toks": ["What", "are", "3", "most", "highly", "rated", "episodes", "in", "the", "TV", "series", "table", "and", "what", "were", "those", "ratings", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1"}, {"question_toks": ["What", "is", "minimum", "and", "maximum", "share", "of", "TV", "series", "?"], "db_id": "tvshow", "query": "SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series"}, {"question_toks": ["What", "is", "the", "maximum", "and", "minimum", "share", "for", "the", "TV", "series", "?"], "db_id": "tvshow", "query": "SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series"}, {"question_toks": ["What", "is", "the", "air", "date", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'"}, {"question_toks": ["When", "did", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "air", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'"}, {"question_toks": ["What", "is", "Weekly", "Rank", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'"}, {"question_toks": ["What", "is", "the", "weekly", "rank", "for", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'"}, {"question_toks": ["What", "is", "the", "TV", "Channel", "of", "TV", "series", "with", "Episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?", "List", "the", "TV", "Channel", "'s", "series", "name", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "series", "that", "has", "the", "episode", "``", "A", "Love", "of", "a", "Lifetime", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = 'terminal'"}, {"question_toks": ["List", "the", "Episode", "of", "all", "TV", "series", "showed", "on", "TV", "Channel", "with", "series", "name", "``", "Sky", "Radio", "''", "."], "db_id": "tvshow", "query": "SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["What", "is", "the", "episode", "for", "the", "TV", "series", "named", "``", "Sky", "Radio", "''", "?"], "db_id": "tvshow", "query": "SELECT TV_series.Episode FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "cartoons", "directed", "by", "each", "of", "the", "listed", "directors", "."], "db_id": "tvshow", "query": "SELECT Count(*), Cartoon.Directed_by FROM Cartoon GROUP BY Cartoon.Directed_by"}, {"question_toks": ["How", "many", "cartoons", "did", "each", "director", "create", "?"], "db_id": "tvshow", "query": "SELECT Count(*), Cartoon.Directed_by FROM Cartoon GROUP BY Cartoon.Directed_by"}, {"question_toks": ["Find", "the", "production", "code", "and", "channel", "of", "the", "most", "recently", "aired", "cartoon", "."], "db_id": "tvshow", "query": "SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Production_code Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "produdction", "code", "and", "channel", "of", "the", "most", "recent", "cartoon", "?"], "db_id": "tvshow", "query": "SELECT Cartoon.Directed_by, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Written_by Desc LIMIT 1"}, {"question_toks": ["Find", "the", "package", "choice", "and", "series", "name", "of", "the", "TV", "channel", "that", "has", "high", "definition", "TV", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Pay_per_view_PPV = 'terminal'"}, {"question_toks": ["What", "are", "the", "package", "options", "and", "the", "name", "of", "the", "series", "for", "the", "TV", "Channel", "that", "supports", "high", "definition", "TV", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Pay_per_view_PPV = 'terminal'"}, {"question_toks": ["which", "countries", "'", "tv", "channels", "are", "playing", "some", "cartoon", "written", "by", "Todd", "Casey", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'terminal'"}, {"question_toks": ["What", "are", "the", "countries", "that", "have", "cartoons", "on", "TV", "that", "were", "written", "by", "Todd", "Casey", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'terminal' INTERSECT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'terminal'"}, {"question_toks": ["which", "countries", "'", "tv", "channels", "are", "not", "playing", "any", "cartoon", "written", "by", "Todd", "Casey", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'terminal'"}, {"question_toks": ["What", "are", "the", "countries", "that", "are", "not", "playing", "cartoons", "written", "by", "Todd", "Casey", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'terminal'"}, {"question_toks": ["Find", "the", "series", "name", "and", "country", "of", "the", "tv", "channel", "that", "is", "playing", "some", "cartoons", "directed", "by", "Ben", "Jones", "and", "Michael", "Chang", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["What", "is", "the", "series", "name", "and", "country", "of", "all", "TV", "channels", "that", "are", "playing", "cartoons", "directed", "by", "Ben", "Jones", "and", "cartoons", "directed", "by", "Michael", "Chang", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["find", "the", "pixel", "aspect", "ratio", "and", "nation", "of", "the", "tv", "channels", "that", "do", "not", "use", "English", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Pixel_aspect_ratio_PAR FROM TV_Channel WHERE TV_Channel.Language != 'terminal'"}, {"question_toks": ["What", "is", "the", "pixel", "aspect", "ratio", "and", "country", "of", "origin", "for", "all", "TV", "channels", "that", "do", "not", "use", "English", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'"}, {"question_toks": ["find", "id", "of", "the", "tv", "channels", "that", "from", "the", "countries", "where", "have", "more", "than", "two", "tv", "channels", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "of", "all", "tv", "channels", "that", "have", "more", "than", "2", "TV", "channels", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'"}, {"question_toks": ["find", "the", "id", "of", "tv", "channels", "that", "do", "not", "play", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["What", "are", "the", "ids", "of", "the", "TV", "channels", "that", "do", "not", "have", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["find", "the", "package", "option", "of", "the", "tv", "channel", "that", "do", "not", "have", "any", "cartoon", "directed", "by", "Ben", "Jones", "."], "db_id": "tvshow", "query": "SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["What", "are", "the", "package", "options", "of", "all", "tv", "channels", "that", "are", "not", "playing", "any", "cartoons", "directed", "by", "Ben", "Jones", "?"], "db_id": "tvshow", "query": "SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = 'terminal'"}, {"question_toks": ["How", "many", "poker", "players", "are", "there", "?"], "db_id": "poker_player", "query": "SELECT Count(*) FROM poker_player"}, {"question_toks": ["Count", "the", "number", "of", "poker", "players", "."], "db_id": "poker_player", "query": "SELECT Count(*) FROM poker_player"}, {"question_toks": ["List", "the", "earnings", "of", "poker", "players", "in", "descending", "order", "."], "db_id": "poker_player", "query": "SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc"}, {"question_toks": ["What", "are", "the", "earnings", "of", "poker", "players", ",", "ordered", "descending", "by", "value", "?"], "db_id": "poker_player", "query": "SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc"}, {"question_toks": ["List", "the", "final", "tables", "made", "and", "the", "best", "finishes", "of", "poker", "players", "."], "db_id": "poker_player", "query": "SELECT poker_player.Final_Table_Made, poker_player.Final_Table_Made FROM poker_player"}, {"question_toks": ["What", "are", "the", "final", "tables", "made", "and", "best", "finishes", "for", "all", "poker", "players", "?"], "db_id": "poker_player", "query": "SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player"}, {"question_toks": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "?"], "db_id": "poker_player", "query": "SELECT Avg(poker_player.Earnings) FROM poker_player"}, {"question_toks": ["Return", "the", "average", "earnings", "across", "all", "poker", "players", "."], "db_id": "poker_player", "query": "SELECT Avg(poker_player.Earnings) FROM poker_player"}, {"question_toks": ["What", "is", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "highest", "earnings", "?"], "db_id": "poker_player", "query": "SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1"}, {"question_toks": ["Return", "the", "money", "rank", "of", "the", "player", "with", "the", "greatest", "earnings", "."], "db_id": "poker_player", "query": "SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "maximum", "number", "of", "final", "tables", "made", "among", "poker", "players", "with", "earnings", "less", "than", "200000", "?"], "db_id": "poker_player", "query": "SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'"}, {"question_toks": ["Return", "the", "maximum", "final", "tables", "made", "across", "all", "poker", "players", "who", "have", "earnings", "below", "200000", "."], "db_id": "poker_player", "query": "SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "poker", "players", "?"], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID"}, {"question_toks": ["Return", "the", "names", "of", "all", "the", "poker", "players", "."], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID"}, {"question_toks": ["What", "are", "the", "names", "of", "poker", "players", "whose", "earnings", "is", "higher", "than", "300000", "?"], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 'terminal'"}, {"question_toks": ["Give", "the", "names", "of", "poker", "players", "who", "have", "earnings", "above", "300000", "."], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.Earnings > 'terminal'"}, {"question_toks": ["List", "the", "names", "of", "poker", "players", "ordered", "by", "the", "final", "tables", "made", "in", "ascending", "order", "."], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made Desc"}, {"question_toks": ["What", "are", "the", "names", "of", "poker", "players", ",", "ordered", "ascending", "by", "the", "number", "of", "final", "tables", "they", "have", "made", "?"], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made Asc"}, {"question_toks": ["What", "is", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "?"], "db_id": "poker_player", "query": "SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings Asc LIMIT 1"}, {"question_toks": ["Return", "the", "birth", "date", "of", "the", "poker", "player", "with", "the", "lowest", "earnings", "."], "db_id": "poker_player", "query": "SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings Asc LIMIT 1"}, {"question_toks": ["What", "is", "the", "money", "rank", "of", "the", "tallest", "poker", "player", "?"], "db_id": "poker_player", "query": "SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height Desc LIMIT 1"}, {"question_toks": ["Return", "the", "money", "rank", "of", "the", "poker", "player", "with", "the", "greatest", "height", "."], "db_id": "poker_player", "query": "SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "average", "earnings", "of", "poker", "players", "with", "height", "higher", "than", "200", "?"], "db_id": "poker_player", "query": "SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 'terminal'"}, {"question_toks": ["Give", "average", "earnings", "of", "poker", "players", "who", "are", "taller", "than", "200", "."], "db_id": "poker_player", "query": "SELECT Avg(poker_player.Earnings) FROM poker_player WHERE poker_player.Earnings > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "poker", "players", "in", "descending", "order", "of", "earnings", "?"], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings Desc"}, {"question_toks": ["Return", "the", "names", "of", "poker", "players", "sorted", "by", "their", "earnings", "descending", "."], "db_id": "poker_player", "query": "SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings Desc"}, {"question_toks": ["What", "are", "different", "nationalities", "of", "people", "and", "the", "corresponding", "number", "of", "people", "from", "each", "nation", "?"], "db_id": "poker_player", "query": "SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality"}, {"question_toks": ["How", "many", "people", "are", "there", "of", "each", "nationality", "?"], "db_id": "poker_player", "query": "SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality"}, {"question_toks": ["What", "is", "the", "most", "common", "nationality", "of", "people", "?"], "db_id": "poker_player", "query": "SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Give", "the", "nationality", "that", "is", "most", "common", "across", "all", "people", "."], "db_id": "poker_player", "query": "SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "nationalities", "that", "are", "shared", "by", "at", "least", "two", "people", "?"], "db_id": "poker_player", "query": "SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Return", "the", "nationalities", "for", "which", "there", "are", "two", "or", "more", "people", "."], "db_id": "poker_player", "query": "SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'"}, {"question_toks": ["List", "the", "names", "and", "birth", "dates", "of", "people", "in", "ascending", "alphabetical", "order", "of", "name", "."], "db_id": "poker_player", "query": "SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc"}, {"question_toks": ["What", "are", "the", "names", "and", "birth", "dates", "of", "people", ",", "ordered", "by", "their", "names", "in", "alphabetical", "order", "?"], "db_id": "poker_player", "query": "SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc"}, {"question_toks": ["Show", "names", "of", "people", "whose", "nationality", "is", "not", "``", "Russia", "''", "."], "db_id": "poker_player", "query": "SELECT people.Name FROM people WHERE people.Nationality != 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "people", "who", "are", "not", "from", "Russia", "?"], "db_id": "poker_player", "query": "SELECT people.Name FROM people WHERE people.Nationality != 'terminal'"}, {"question_toks": ["List", "the", "names", "of", "people", "that", "are", "not", "poker", "players", "."], "db_id": "poker_player", "query": "SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)"}, {"question_toks": ["What", "are", "the", "names", "of", "people", "who", "do", "not", "play", "poker", "?"], "db_id": "poker_player", "query": "SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)"}, {"question_toks": ["How", "many", "distinct", "nationalities", "are", "there", "?"], "db_id": "poker_player", "query": "SELECT Count(DISTINCT people.Nationality) FROM people"}, {"question_toks": ["Count", "the", "number", "of", "different", "nationalities", "."], "db_id": "poker_player", "query": "SELECT Count(DISTINCT people.Nationality) FROM people"}, {"question_toks": ["How", "many", "states", "are", "there", "?"], "db_id": "voter_1", "query": "SELECT Count(DISTINCT VOTES.state) FROM VOTES"}, {"question_toks": ["List", "the", "contestant", "numbers", "and", "names", ",", "ordered", "by", "contestant", "name", "descending", "."], "db_id": "voter_1", "query": "SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name Desc"}, {"question_toks": ["List", "the", "vote", "ids", ",", "phone", "numbers", "and", "states", "of", "all", "votes", "."], "db_id": "voter_1", "query": "SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES"}, {"question_toks": ["What", "are", "the", "maximum", "and", "minimum", "values", "of", "area", "codes", "?"], "db_id": "voter_1", "query": "SELECT Max(VOTES.created), Min(VOTES.created) FROM VOTES"}, {"question_toks": ["What", "is", "last", "date", "created", "of", "votes", "from", "the", "state", "'CA", "'", "?"], "db_id": "voter_1", "query": "SELECT VOTES.created FROM VOTES WHERE VOTES.state = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "contestants", "whose", "names", "are", "not", "'Jessie", "Alloway", "'"], "db_id": "voter_1", "query": "SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != 'terminal'"}, {"question_toks": ["What", "are", "the", "distinct", "states", "and", "create", "time", "of", "all", "votes", "?"], "db_id": "voter_1", "query": "SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES"}, {"question_toks": ["What", "are", "the", "contestant", "numbers", "and", "names", "of", "the", "contestants", "who", "had", "at", "least", "two", "votes", "?"], "db_id": "voter_1", "query": "SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Of", "all", "the", "contestants", "who", "got", "voted", ",", "what", "is", "the", "contestant", "number", "and", "name", "of", "the", "contestant", "who", "got", "least", "votes", "?"], "db_id": "voter_1", "query": "SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY VOTES.contestant_number ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["What", "are", "the", "number", "of", "votes", "from", "state", "'NY", "'", "or", "'CA", "'", "?"], "db_id": "voter_1", "query": "SELECT Count(*) FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'"}, {"question_toks": ["How", "many", "contestants", "did", "not", "get", "voted", "?"], "db_id": "voter_1", "query": "SELECT Count(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)"}, {"question_toks": ["What", "is", "the", "area", "code", "in", "which", "the", "most", "voters", "voted", "?"], "db_id": "voter_1", "query": "SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state GROUP BY AREA_CODE_STATE.area_code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "create", "dates", ",", "states", ",", "and", "phone", "numbers", "of", "the", "votes", "that", "were", "for", "the", "contestant", "named", "'Tabatha", "Gehling", "'", "?"], "db_id": "voter_1", "query": "SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE CONTESTANTS.contestant_name = 'terminal'"}, {"question_toks": ["List", "the", "area", "codes", "in", "which", "voters", "voted", "both", "for", "the", "contestant", "'Tabatha", "Gehling", "'", "and", "the", "contestant", "'Kelly", "Clauss", "'", "."], "db_id": "voter_1", "query": "SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN CONTESTANTS JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state AND VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state WHERE CONTESTANTS.contestant_name = 'terminal' INTERSECT SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN CONTESTANTS JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state AND VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state WHERE CONTESTANTS.contestant_name = 'terminal'"}, {"question_toks": ["Return", "the", "names", "the", "contestants", "whose", "names", "contain", "the", "substring", "'Al", "'", "."], "db_id": "voter_1", "query": "SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "all", "the", "countries", "that", "became", "independent", "after", "1950", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.GovernmentForm = 'terminal' AND country.LifeExpectancy > 'terminal'"}, {"question_toks": ["Give", "the", "names", "of", "the", "nations", "that", "were", "founded", "after", "1950", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'"}, {"question_toks": ["How", "many", "countries", "have", "a", "republic", "as", "their", "form", "of", "government", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["How", "many", "countries", "have", "governments", "that", "are", "republics", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["What", "is", "the", "total", "surface", "area", "of", "the", "countries", "in", "the", "Caribbean", "region", "?"], "db_id": "world_1", "query": "SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["How", "much", "surface", "area", "do", "the", "countires", "in", "the", "Carribean", "cover", "together", "?"], "db_id": "world_1", "query": "SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["Which", "continent", "is", "Anguilla", "in", "?"], "db_id": "world_1", "query": "SELECT country.Continent FROM country WHERE country.Name = 'terminal'"}, {"question_toks": ["What", "is", "the", "continent", "name", "which", "Anguilla", "belongs", "to", "?"], "db_id": "world_1", "query": "SELECT country.Continent FROM country WHERE country.LocalName = 'terminal'"}, {"question_toks": ["Which", "region", "is", "the", "city", "Kabul", "located", "in", "?"], "db_id": "world_1", "query": "SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'terminal'"}, {"question_toks": ["What", "region", "is", "Kabul", "in", "?"], "db_id": "world_1", "query": "SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'terminal'"}, {"question_toks": ["Which", "language", "is", "the", "most", "popular", "in", "Aruba", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.LocalName = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "language", "is", "predominantly", "spoken", "in", "Aruba", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.LocalName = 'terminal'"}, {"question_toks": ["What", "are", "the", "population", "and", "life", "expectancies", "in", "Brazil", "?"], "db_id": "world_1", "query": "SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["Give", "me", "Brazil\u2019s", "population", "and", "life", "expectancies", "."], "db_id": "world_1", "query": "SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = 'terminal'"}, {"question_toks": ["What", "are", "the", "region", "and", "population", "of", "Angola", "?"], "db_id": "world_1", "query": "SELECT country.Region, country.Population FROM country WHERE country.LocalName = 'terminal'"}, {"question_toks": ["What", "region", "does", "Angola", "belong", "to", "and", "what", "is", "its", "population", "?"], "db_id": "world_1", "query": "SELECT country.Region, country.Population FROM country WHERE country.LocalName = 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "expected", "life", "expectancy", "for", "countries", "in", "the", "region", "of", "Central", "Africa", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal' AND country.Region = 'terminal'"}, {"question_toks": ["How", "long", "is", "the", "people\u2019s", "average", "life", "expectancy", "in", "Central", "Africa", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "of", "country", "that", "has", "the", "shortest", "life", "expectancy", "in", "Asia", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.LifeExpectancy < (SELECT Min(country.LifeExpectancy) FROM country)"}, {"question_toks": ["Give", "the", "name", "of", "the", "country", "in", "Asia", "with", "the", "lowest", "life", "expectancy", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Region = 'terminal' AND country.LifeExpectancy = (SELECT Min(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal')"}, {"question_toks": ["What", "is", "the", "total", "population", "and", "maximum", "GNP", "in", "Asia", "?"], "db_id": "world_1", "query": "SELECT Sum(country.Population), Sum(country.GNP) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["How", "many", "people", "live", "in", "Asia", ",", "and", "what", "is", "the", "largest", "GNP", "among", "them", "?"], "db_id": "world_1", "query": "SELECT country.Population, country.GNP FROM country WHERE country.Continent = 'terminal' ORDER BY country.GNP Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "average", "life", "expectancy", "in", "African", "countries", "that", "are", "republics", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy) FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["Give", "the", "average", "life", "expectancy", "for", "countries", "in", "Africa", "which", "are", "republics", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy) FROM country WHERE country.GovernmentForm = 'terminal' AND country.Continent = 'terminal'"}, {"question_toks": ["What", "is", "the", "total", "surface", "area", "of", "the", "continents", "Asia", "and", "Europe", "?"], "db_id": "world_1", "query": "SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'"}, {"question_toks": ["Give", "the", "total", "surface", "area", "covered", "by", "countries", "in", "Asia", "or", "Europe", "."], "db_id": "world_1", "query": "SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Region = 'terminal'"}, {"question_toks": ["How", "many", "people", "live", "in", "Gelderland", "district", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM city WHERE city.District = 'terminal'"}, {"question_toks": ["What", "is", "the", "total", "population", "of", "Gelderland", "district", "?"], "db_id": "world_1", "query": "SELECT Sum(country.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "GNP", "and", "total", "population", "in", "all", "nations", "whose", "government", "is", "US", "territory", "?"], "db_id": "world_1", "query": "SELECT Avg(country.Population), Avg(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["Give", "the", "mean", "GNP", "and", "total", "population", "of", "nations", "which", "are", "considered", "US", "territory", "."], "db_id": "world_1", "query": "SELECT Sum(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["How", "many", "unique", "languages", "are", "spoken", "in", "the", "world", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage"}, {"question_toks": ["What", "is", "the", "number", "of", "distinct", "languages", "used", "around", "the", "world", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage"}, {"question_toks": ["How", "many", "type", "of", "governments", "are", "in", "Africa", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["How", "many", "different", "forms", "of", "governments", "are", "there", "in", "Africa", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["What", "is", "the", "total", "number", "of", "languages", "used", "in", "Aruba", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'"}, {"question_toks": ["How", "many", "languages", "are", "spoken", "in", "Aruba", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'"}, {"question_toks": ["How", "many", "official", "languages", "does", "Afghanistan", "have", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'"}, {"question_toks": ["How", "many", "official", "languages", "are", "spoken", "in", "Afghanistan", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'terminal'"}, {"question_toks": ["What", "is", "name", "of", "the", "country", "that", "speaks", "the", "largest", "number", "of", "languages", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Give", "the", "name", "of", "the", "nation", "that", "uses", "the", "greatest", "amount", "of", "languages", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "continent", "has", "the", "most", "diverse", "languages", "?"], "db_id": "world_1", "query": "SELECT country.Continent FROM country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "continent", "speaks", "the", "most", "languages", "?"], "db_id": "world_1", "query": "SELECT country.Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["How", "many", "countries", "speak", "both", "English", "and", "Dutch", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "nations", "that", "use", "English", "and", "Dutch", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.Percentage FROM countrylanguage WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "nations", "speak", "both", "English", "and", "French", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["Give", "the", "names", "of", "nations", "that", "speak", "both", "English", "and", "French", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "nations", "where", "both", "English", "and", "French", "are", "official", "languages", "?"], "db_id": "world_1", "query": "SELECT country.LocalName FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.LocalName FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["Give", "the", "names", "of", "countries", "with", "English", "and", "French", "as", "official", "languages", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "is", "the", "number", "of", "distinct", "continents", "where", "Chinese", "is", "spoken", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["How", "many", "continents", "speak", "Chinese", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "regions", "that", "use", "English", "or", "Dutch", "?"], "db_id": "world_1", "query": "SELECT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'"}, {"question_toks": ["Which", "regions", "speak", "Dutch", "or", "English", "?"], "db_id": "world_1", "query": "SELECT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "countries", "where", "either", "English", "or", "Dutch", "is", "the", "official", "language", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'"}, {"question_toks": ["Which", "countries", "have", "either", "English", "or", "Dutch", "as", "an", "official", "language", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'"}, {"question_toks": ["Which", "language", "is", "the", "most", "popular", "on", "the", "Asian", "continent", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.IsOfficial = (SELECT Max(country.Continent) FROM country)"}, {"question_toks": ["What", "is", "the", "language", "that", "is", "used", "by", "the", "largest", "number", "of", "Asian", "nations", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.Percentage = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "languages", "are", "spoken", "by", "only", "one", "country", "in", "republic", "governments", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY countrylanguage.Language HAVING Count(*) = 'terminal'"}, {"question_toks": ["What", "languages", "are", "only", "used", "by", "a", "single", "country", "with", "a", "republic", "government", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM countrylanguage EXCEPT SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["Find", "the", "city", "with", "the", "largest", "population", "that", "uses", "English", "."], "db_id": "world_1", "query": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' GROUP BY city.Name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "most", "populace", "city", "that", "speaks", "English", "?"], "db_id": "world_1", "query": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' GROUP BY city.Name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "name", ",", "population", "and", "expected", "life", "length", "of", "asian", "country", "with", "the", "largest", "area", "?"], "db_id": "world_1", "query": "SELECT country.Name, country.Population, country.LifeExpectancy FROM country ORDER BY country.GovernmentForm Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "name", ",", "population", ",", "and", "life", "expectancy", "of", "the", "largest", "Asian", "country", "by", "land", "?"], "db_id": "world_1", "query": "SELECT country.Name, country.Population, country.LifeExpectancy FROM country ORDER BY country.LifeExpectancy Desc LIMIT 1"}, {"question_toks": ["What", "is", "average", "life", "expectancy", "in", "the", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["Give", "the", "mean", "life", "expectancy", "of", "countries", "in", "which", "English", "is", "not", "the", "official", "language", "."], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.Percentage FROM countrylanguage WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["What", "is", "the", "total", "number", "of", "people", "living", "in", "the", "nations", "that", "do", "not", "use", "English", "?"], "db_id": "world_1", "query": "SELECT Sum(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["How", "many", "people", "live", "in", "countries", "that", "do", "not", "speak", "English", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["What", "is", "the", "official", "language", "spoken", "in", "the", "country", "whose", "head", "of", "state", "is", "Beatrix", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'"}, {"question_toks": ["What", "is", "the", "official", "language", "used", "in", "the", "country", "the", "name", "of", "whose", "head", "of", "state", "is", "Beatrix", "."], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'terminal'"}, {"question_toks": ["What", "is", "the", "total", "number", "of", "unique", "official", "languages", "spoken", "in", "the", "countries", "that", "are", "founded", "before", "1930", "?"], "db_id": "world_1", "query": "SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 'terminal'"}, {"question_toks": ["For", "the", "countries", "founded", "before", "1930", ",", "what", "is", "the", "total", "number", "of", "distinct", "official", "languages", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language < 'terminal'"}, {"question_toks": ["What", "are", "the", "countries", "that", "have", "greater", "surface", "area", "than", "any", "country", "in", "Europe", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country WHERE country.Region = 'terminal')"}, {"question_toks": ["Which", "countries", "have", "greater", "area", "than", "that", "of", "any", "country", "in", "Europe", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Region = 'terminal')"}, {"question_toks": ["What", "are", "the", "African", "countries", "that", "have", "a", "population", "less", "than", "any", "country", "in", "Asia", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Region = 'terminal')"}, {"question_toks": ["Which", "African", "countries", "have", "a", "smaller", "population", "than", "that", "of", "any", "country", "in", "Asia", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Region = 'terminal')"}, {"question_toks": ["Which", "Asian", "countries", "have", "a", "population", "that", "is", "larger", "than", "any", "country", "in", "Africa", "?"], "db_id": "world_1", "query": "SELECT country.IndepYear FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal')"}, {"question_toks": ["What", "are", "the", "Asian", "countries", "which", "have", "a", "population", "larger", "than", "that", "of", "any", "country", "in", "Africa", "?"], "db_id": "world_1", "query": "SELECT country.IndepYear FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal')"}, {"question_toks": ["What", "are", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["Return", "the", "country", "codes", "for", "countries", "that", "do", "not", "speak", "English", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country EXCEPT SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "country", "codes", "of", "countries", "where", "people", "use", "languages", "other", "than", "English", "?"], "db_id": "world_1", "query": "SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language < 'terminal'"}, {"question_toks": ["Give", "the", "country", "codes", "for", "countries", "in", "which", "people", "speak", "langauges", "that", "are", "not", "English", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Code IN (SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["What", "are", "the", "codes", "of", "the", "countries", "that", "do", "not", "speak", "English", "and", "whose", "government", "forms", "are", "not", "Republic", "?"], "db_id": "world_1", "query": "SELECT country.Code FROM country WHERE country.GovernmentForm != 'terminal' EXCEPT SELECT country.Code FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["Return", "the", "codes", "of", "countries", "that", "do", "not", "speak", "English", "and", "do", "not", "have", "Republics", "for", "governments", "."], "db_id": "world_1", "query": "SELECT country.Code FROM country WHERE country.GovernmentForm != 'terminal' EXCEPT SELECT country.Code FROM country WHERE country.GovernmentForm = 'terminal'"}, {"question_toks": ["Which", "cities", "are", "in", "European", "countries", "where", "English", "is", "not", "the", "official", "language", "?"], "db_id": "world_1", "query": "SELECT city.Name FROM city WHERE city.CountryCode NOT IN (SELECT city.CountryCode FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["What", "are", "the", "names", "of", "cities", "in", "Europe", "for", "which", "English", "is", "not", "the", "official", "language", "?"], "db_id": "world_1", "query": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Region = 'terminal' AND countrylanguage.Language != 'terminal'"}, {"question_toks": ["Whic`h", "unique", "cities", "are", "in", "Asian", "countries", "where", "Chinese", "is", "the", "official", "language", "?"], "db_id": "world_1", "query": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["Return", "the", "different", "names", "of", "cities", "that", "are", "in", "Asia", "and", "for", "which", "Chinese", "is", "the", "official", "language", "."], "db_id": "world_1", "query": "SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code AND city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Region = 'terminal' AND countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "name", ",", "independence", "year", ",", "and", "surface", "area", "of", "the", "country", "with", "the", "smallest", "population", "?"], "db_id": "world_1", "query": "SELECT country.Name, country.SurfaceArea, country.SurfaceArea FROM country ORDER BY country.Population Asc LIMIT 1"}, {"question_toks": ["Give", "the", "name", ",", "year", "of", "independence", ",", "and", "surface", "area", "of", "the", "country", "that", "has", "the", "lowest", "population", "."], "db_id": "world_1", "query": "SELECT country.Name, country.SurfaceArea, country.SurfaceArea FROM country ORDER BY country.Population Asc LIMIT 1"}, {"question_toks": ["What", "are", "the", "population", ",", "name", "and", "leader", "of", "the", "country", "with", "the", "largest", "area", "?"], "db_id": "world_1", "query": "SELECT country.Population, country.Name, country.GovernmentForm FROM country ORDER BY country.GovernmentForm Desc LIMIT 1"}, {"question_toks": ["Give", "the", "name", ",", "population", ",", "and", "head", "of", "state", "for", "the", "country", "that", "has", "the", "largest", "area", "."], "db_id": "world_1", "query": "SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.GovernmentForm Desc LIMIT 1"}, {"question_toks": ["Return", "the", "country", "name", "and", "the", "numbers", "of", "languages", "spoken", "for", "each", "country", "that", "speaks", "at", "least", "3", "languages", "."], "db_id": "world_1", "query": "SELECT country.Name, Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "countries", "that", "speak", "more", "than", "2", "languages", ",", "as", "well", "as", "how", "many", "languages", "they", "speak", "?"], "db_id": "world_1", "query": "SELECT country.Name, Count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING Count(*) > 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "cities", "in", "each", "district", "whose", "population", "is", "greater", "than", "the", "average", "population", "of", "cities", "?"], "db_id": "world_1", "query": "SELECT Count(*), city.District FROM city GROUP BY city.District HAVING Count(*) > 'terminal'"}, {"question_toks": ["How", "many", "cities", "in", "each", "district", "have", "a", "population", "that", "is", "above", "the", "average", "population", "across", "all", "cities", "?"], "db_id": "world_1", "query": "SELECT Count(*), city.District FROM city GROUP BY city.District HAVING Avg(city.Population) > (SELECT Avg(city.Population) FROM city)"}, {"question_toks": ["Find", "the", "government", "form", "name", "and", "total", "population", "for", "each", "government", "form", "whose", "average", "life", "expectancy", "is", "longer", "than", "72", "."], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy), country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "government", "forms", "and", "what", "is", "the", "total", "population", "of", "each", "for", "government", "forms", "that", "have", "an", "average", "life", "expectancy", "greater", "than", "72", "?"], "db_id": "world_1", "query": "SELECT Sum(country.Population), country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING Sum(country.LifeExpectancy) > 'terminal'"}, {"question_toks": ["Find", "the", "average", "life", "expectancy", "and", "total", "population", "for", "each", "continent", "where", "the", "average", "life", "expectancy", "is", "shorter", "than", "72", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy), country.Continent FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) > 'terminal'"}, {"question_toks": ["What", "are", "the", "different", "continents", "and", "the", "total", "popuation", "and", "average", "life", "expectancy", "corresponding", "to", "each", ",", "for", "continents", "that", "have", "an", "average", "life", "expectancy", "less", "than", "72", "?"], "db_id": "world_1", "query": "SELECT Avg(country.LifeExpectancy), country.Continent FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "and", "areas", "of", "countries", "with", "the", "top", "5", "largest", "area", "?"], "db_id": "world_1", "query": "SELECT country.Name, country.GovernmentForm FROM country ORDER BY country.Population Desc LIMIT 1"}, {"question_toks": ["Return", "the", "names", "and", "surface", "areas", "of", "the", "5", "largest", "countries", "."], "db_id": "world_1", "query": "SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.SurfaceArea Desc LIMIT 1"}, {"question_toks": ["What", "are", "names", "of", "countries", "with", "the", "top", "3", "largest", "population", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1"}, {"question_toks": ["Return", "the", "names", "of", "the", "3", "most", "populated", "countries", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "nations", "with", "the", "3", "lowest", "populations", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1"}, {"question_toks": ["Return", "the", "names", "of", "the", "3", "countries", "with", "the", "fewest", "people", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country GROUP BY country.Name ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["how", "many", "countries", "are", "in", "Asia", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "countries", "in", "Asia", "."], "db_id": "world_1", "query": "SELECT Count(*) FROM country WHERE country.Region = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "countries", "that", "are", "in", "the", "continent", "of", "Europe", "and", "have", "a", "population", "of", "80000", "?"], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population > 'terminal'"}, {"question_toks": ["Give", "the", "names", "of", "countries", "that", "are", "in", "Europe", "and", "have", "a", "population", "equal", "to", "80000", "."], "db_id": "world_1", "query": "SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population > 'terminal'"}, {"question_toks": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000\uff1f"], "db_id": "world_1", "query": "SELECT Sum(country.Population) FROM country WHERE country.Continent = 'terminal' AND country.LifeExpectancy > 'terminal'"}, {"question_toks": ["Give", "the", "total", "population", "and", "average", "surface", "area", "corresponding", "to", "countries", "in", "Noth", "America", "that", "have", "a", "surface", "area", "greater", "than", "3000", "."], "db_id": "world_1", "query": "SELECT Sum(country.Population) FROM country WHERE country.Continent = 'terminal' AND country.SurfaceArea > 'terminal'"}, {"question_toks": ["What", "are", "the", "cities", "whose", "population", "is", "between", "160000", "and", "900000", "?"], "db_id": "world_1", "query": "SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'"}, {"question_toks": ["Return", "the", "names", "of", "cities", "that", "have", "a", "population", "between", "160000", "and", "900000", "."], "db_id": "world_1", "query": "SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'"}, {"question_toks": ["Which", "language", "is", "spoken", "by", "the", "largest", "number", "of", "countries", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Give", "the", "language", "that", "is", "spoken", "in", "the", "most", "countries", "."], "db_id": "world_1", "query": "SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "language", "spoken", "by", "the", "largest", "percentage", "of", "people", "in", "each", "country", "?"], "db_id": "world_1", "query": "SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Sum(countrylanguage.Percentage) Desc LIMIT 1"}, {"question_toks": ["What", "are", "the", "country", "codes", "of", "the", "different", "countries", ",", "and", "what", "are", "the", "languages", "spoken", "by", "the", "greatest", "percentage", "of", "people", "for", "each", "?"], "db_id": "world_1", "query": "SELECT country.Code, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY Sum(countrylanguage.Percentage) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "total", "number", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "db_id": "world_1", "query": "SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Percentage > (SELECT Max(countrylanguage.Percentage) FROM countrylanguage WHERE countrylanguage.Language = 'terminal')"}, {"question_toks": ["Count", "the", "number", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "db_id": "world_1", "query": "SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["What", "are", "the", "codes", "of", "countries", "where", "Spanish", "is", "spoken", "by", "the", "largest", "percentage", "of", "people", "?"], "db_id": "world_1", "query": "SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' GROUP BY country.Code ORDER BY Sum(countrylanguage.Percentage) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "codes", "of", "countries", "for", "which", "Spanish", "is", "the", "predominantly", "spoken", "language", "."], "db_id": "world_1", "query": "SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'terminal'"}, {"question_toks": ["How", "many", "conductors", "are", "there", "?"], "db_id": "orchestra", "query": "SELECT Count(*) FROM conductor"}, {"question_toks": ["Count", "the", "number", "of", "conductors", "."], "db_id": "orchestra", "query": "SELECT Count(*) FROM conductor"}, {"question_toks": ["List", "the", "names", "of", "conductors", "in", "ascending", "order", "of", "age", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc"}, {"question_toks": ["What", "are", "the", "names", "of", "conductors", ",", "ordered", "by", "age", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc"}, {"question_toks": ["What", "are", "the", "names", "of", "conductors", "whose", "nationalities", "are", "not", "``", "USA", "''", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'"}, {"question_toks": ["Return", "the", "names", "of", "conductors", "that", "do", "not", "have", "the", "nationality", "``", "USA", "''", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'"}, {"question_toks": ["What", "are", "the", "record", "companies", "of", "orchestras", "in", "descending", "order", "of", "years", "in", "which", "they", "were", "founded", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc"}, {"question_toks": ["Return", "the", "record", "companies", "of", "orchestras", ",", "sorted", "descending", "by", "the", "years", "in", "which", "they", "were", "founded", "."], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc"}, {"question_toks": ["What", "is", "the", "average", "attendance", "of", "shows", "?"], "db_id": "orchestra", "query": "SELECT Avg(show.Attendance) FROM show"}, {"question_toks": ["Return", "the", "average", "attendance", "across", "all", "shows", "."], "db_id": "orchestra", "query": "SELECT Avg(show.Attendance) FROM show"}, {"question_toks": ["What", "are", "the", "maximum", "and", "minimum", "share", "of", "performances", "whose", "type", "is", "not", "``", "Live", "final", "''", "."], "db_id": "orchestra", "query": "SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'"}, {"question_toks": ["Return", "the", "maximum", "and", "minimum", "shares", "for", "performances", "that", "do", "not", "have", "the", "type", "``", "Live", "final", "''", "."], "db_id": "orchestra", "query": "SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'"}, {"question_toks": ["How", "many", "different", "nationalities", "do", "conductors", "have", "?"], "db_id": "orchestra", "query": "SELECT Count(DISTINCT conductor.Nationality) FROM conductor"}, {"question_toks": ["Count", "the", "number", "of", "different", "nationalities", "of", "conductors", "."], "db_id": "orchestra", "query": "SELECT Count(DISTINCT conductor.Nationality) FROM conductor"}, {"question_toks": ["List", "names", "of", "conductors", "in", "descending", "order", "of", "years", "of", "work", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc"}, {"question_toks": ["What", "are", "the", "names", "of", "conductors", ",", "sorted", "descending", "by", "the", "number", "of", "years", "they", "have", "worked", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor GROUP BY conductor.Name ORDER BY Count(*) Desc"}, {"question_toks": ["List", "the", "name", "of", "the", "conductor", "with", "the", "most", "years", "of", "work", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "worked", "the", "greatest", "number", "of", "years", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1"}, {"question_toks": ["Show", "the", "names", "of", "conductors", "and", "the", "orchestras", "they", "have", "conducted", "."], "db_id": "orchestra", "query": "SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID"}, {"question_toks": ["What", "are", "the", "names", "of", "conductors", "as", "well", "as", "the", "corresonding", "orchestras", "that", "they", "have", "conducted", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name, Count(*) FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY orchestra.Conductor_ID"}, {"question_toks": ["Show", "the", "names", "of", "conductors", "that", "have", "conducted", "more", "than", "one", "orchestras", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "at", "more", "than", "one", "orchestra", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["Show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "the", "most", "number", "of", "orchestras", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "conductor", "who", "has", "conducted", "the", "most", "orchestras", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Please", "show", "the", "name", "of", "the", "conductor", "that", "has", "conducted", "orchestras", "founded", "after", "2008", "."], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "conductors", "who", "have", "conducted", "orchestras", "founded", "after", "the", "year", "2008", "?"], "db_id": "orchestra", "query": "SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = 'terminal'"}, {"question_toks": ["Please", "show", "the", "different", "record", "companies", "and", "the", "corresponding", "number", "of", "orchestras", "."], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company"}, {"question_toks": ["How", "many", "orchestras", "does", "each", "record", "company", "manage", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company"}, {"question_toks": ["Please", "show", "the", "record", "formats", "of", "orchestras", "in", "ascending", "order", "of", "count", "."], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Record_Company Asc"}, {"question_toks": ["What", "are", "the", "major", "record", "formats", "of", "orchestras", ",", "sorted", "by", "their", "frequency", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Major_Record_Format FROM orchestra ORDER BY orchestra.Major_Record_Format Desc"}, {"question_toks": ["List", "the", "record", "company", "shared", "by", "the", "most", "number", "of", "orchestras", "."], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "record", "company", "used", "by", "the", "greatest", "number", "of", "orchestras", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["List", "the", "names", "of", "orchestras", "that", "have", "no", "performance", "."], "db_id": "orchestra", "query": "SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)"}, {"question_toks": ["What", "are", "the", "orchestras", "that", "do", "not", "have", "any", "performances", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)"}, {"question_toks": ["Show", "the", "record", "companies", "shared", "by", "orchestras", "founded", "before", "2003", "and", "after", "2003", "."], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal'"}, {"question_toks": ["What", "are", "the", "record", "companies", "that", "are", "used", "by", "both", "orchestras", "founded", "before", "2003", "and", "those", "founded", "after", "2003", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal'"}, {"question_toks": ["Find", "the", "number", "of", "orchestras", "whose", "record", "format", "is", "``", "CD", "''", "or", "``", "DVD", "''", "."], "db_id": "orchestra", "query": "SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "orchestras", "that", "have", "CD", "or", "DVD", "as", "their", "record", "format", "."], "db_id": "orchestra", "query": "SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'"}, {"question_toks": ["Show", "the", "years", "in", "which", "orchestras", "that", "have", "given", "more", "than", "one", "performance", "are", "founded", "."], "db_id": "orchestra", "query": "SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "years", "of", "founding", "for", "orchestras", "that", "have", "had", "more", "than", "a", "single", "performance", "?"], "db_id": "orchestra", "query": "SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["How", "many", "high", "schoolers", "are", "there", "?"], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler"}, {"question_toks": ["Count", "the", "number", "of", "high", "schoolers", "."], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler"}, {"question_toks": ["Show", "the", "names", "and", "grades", "of", "each", "high", "schooler", "."], "db_id": "network_1", "query": "SELECT Highschooler.name, Highschooler.grade FROM Highschooler"}, {"question_toks": ["What", "are", "the", "names", "and", "grades", "for", "each", "high", "schooler", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name, Highschooler.grade FROM Highschooler"}, {"question_toks": ["Show", "all", "the", "grades", "of", "the", "high", "schoolers", "."], "db_id": "network_1", "query": "SELECT DISTINCT Highschooler.grade FROM Highschooler"}, {"question_toks": ["What", "is", "the", "grade", "of", "each", "high", "schooler", "?"], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler"}, {"question_toks": ["What", "grade", "is", "Kyle", "in", "?"], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Return", "the", "grade", "for", "the", "high", "schooler", "named", "Kyle", "."], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Show", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'"}, {"question_toks": ["Show", "the", "ID", "of", "the", "high", "schooler", "named", "Kyle", "."], "db_id": "network_1", "query": "SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["What", "is", "Kyle", "'s", "id", "?"], "db_id": "network_1", "query": "SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["How", "many", "high", "schoolers", "are", "there", "in", "grade", "9", "or", "10", "?"], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "high", "schoolers", "in", "grades", "9", "or", "10", "."], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'"}, {"question_toks": ["Show", "the", "number", "of", "high", "schoolers", "for", "each", "grade", "."], "db_id": "network_1", "query": "SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade"}, {"question_toks": ["How", "many", "high", "schoolers", "are", "in", "each", "grade", "?"], "db_id": "network_1", "query": "SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade"}, {"question_toks": ["Which", "grade", "has", "the", "most", "high", "schoolers", "?"], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "grade", "that", "has", "the", "greatest", "number", "of", "high", "schoolers", "."], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "me", "all", "grades", "that", "have", "at", "least", "4", "students", "."], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Which", "grades", "have", "4", "or", "more", "high", "schoolers", "?"], "db_id": "network_1", "query": "SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Show", "the", "student", "IDs", "and", "numbers", "of", "friends", "corresponding", "to", "each", "."], "db_id": "network_1", "query": "SELECT Friend.student_id, Count(*) FROM Friend GROUP BY Friend.student_id"}, {"question_toks": ["How", "many", "friends", "does", "each", "student", "have", "?"], "db_id": "network_1", "query": "SELECT Count(*), Friend.student_id FROM Friend GROUP BY Friend.student_id"}, {"question_toks": ["Show", "the", "names", "of", "high", "school", "students", "and", "their", "corresponding", "number", "of", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.name"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "high", "schoolers", "and", "how", "many", "friends", "does", "each", "have", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.name"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "friends", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "name", "of", "the", "high", "school", "student", "with", "the", "most", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "at", "least", "3", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "3", "or", "more", "friends", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Show", "the", "names", "of", "all", "of", "the", "high", "schooler", "Kyle", "'s", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Return", "the", "names", "of", "friends", "of", "the", "high", "school", "student", "Kyle", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["How", "many", "friends", "does", "the", "high", "school", "student", "Kyle", "have", "?"], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Count", "the", "number", "of", "friends", "Kyle", "has", "."], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Show", "ids", "of", "all", "students", "who", "do", "not", "have", "any", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend"}, {"question_toks": ["What", "are", "the", "ids", "of", "high", "school", "students", "who", "do", "not", "have", "friends", "?"], "db_id": "network_1", "query": "SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend"}, {"question_toks": ["Show", "names", "of", "all", "high", "school", "students", "who", "do", "not", "have", "any", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}, {"question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "no", "friends", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}, {"question_toks": ["Show", "the", "ids", "of", "high", "schoolers", "who", "have", "friends", "and", "are", "also", "liked", "by", "someone", "else", "."], "db_id": "network_1", "query": "SELECT Highschooler.ID FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.ID HAVING Count(*) = 'terminal' INTERSECT SELECT Likes.student_id FROM Likes"}, {"question_toks": ["What", "are", "the", "ids", "of", "students", "who", "both", "have", "friends", "and", "are", "liked", "?"], "db_id": "network_1", "query": "SELECT Friend.student_id FROM Highschooler JOIN Friend ON Friend.student_id = Highschooler.ID JOIN Likes ON Highschooler.ID = Likes.liked_id INTERSECT SELECT Likes.student_id FROM Highschooler JOIN Friend ON Friend.student_id = Highschooler.ID JOIN Likes ON Highschooler.ID = Likes.liked_id"}, {"question_toks": ["Show", "name", "of", "all", "students", "who", "have", "some", "friends", "and", "also", "are", "liked", "by", "someone", "else", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id"}, {"question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "both", "have", "friends", "and", "are", "liked", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id"}, {"question_toks": ["Count", "the", "number", "of", "likes", "for", "each", "student", "id", "."], "db_id": "network_1", "query": "SELECT Count(DISTINCT Likes.student_id), Likes.student_id FROM Likes GROUP BY Likes.student_id"}, {"question_toks": ["How", "many", "likes", "correspond", "to", "each", "student", "id", "?"], "db_id": "network_1", "query": "SELECT Count(*), Likes.student_id FROM Likes GROUP BY Likes.student_id"}, {"question_toks": ["Show", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "numbers", "of", "likes", "for", "each", "."], "db_id": "network_1", "query": "SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.name"}, {"question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "likes", ",", "and", "how", "many", "likes", "does", "each", "have", "?"], "db_id": "network_1", "query": "SELECT Count(*), Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Highschooler.name"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "likes", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Likes.liked_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Give", "the", "name", "of", "the", "student", "with", "the", "most", "likes", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "the", "names", "of", "students", "who", "have", "at", "least", "2", "likes", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "students", "who", "have", "2", "or", "more", "likes", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Show", "the", "names", "of", "students", "who", "have", "a", "grade", "higher", "than", "5", "and", "have", "at", "least", "2", "friends", "."], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.grade >= 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "have", "a", "grade", "of", "over", "5", "and", "have", "2", "or", "more", "friends", "?"], "db_id": "network_1", "query": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.grade >= 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade >= 'terminal'"}, {"question_toks": ["How", "many", "likes", "does", "Kyle", "have", "?"], "db_id": "network_1", "query": "SELECT Count(DISTINCT Likes.student_id) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Return", "the", "number", "of", "likes", "that", "the", "high", "schooler", "named", "Kyle", "has", "."], "db_id": "network_1", "query": "SELECT Count(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.liked_id WHERE Highschooler.name = 'terminal'"}, {"question_toks": ["Find", "the", "average", "grade", "of", "all", "students", "who", "have", "some", "friends", "."], "db_id": "network_1", "query": "SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)"}, {"question_toks": ["What", "is", "the", "average", "grade", "of", "students", "who", "have", "friends", "?"], "db_id": "network_1", "query": "SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)"}, {"question_toks": ["Find", "the", "minimum", "grade", "of", "students", "who", "have", "no", "friends", "."], "db_id": "network_1", "query": "SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}, {"question_toks": ["What", "is", "the", "lowest", "grade", "of", "students", "who", "do", "not", "have", "any", "friends", "?"], "db_id": "network_1", "query": "SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)"}, {"question_toks": ["Which", "states", "have", "both", "owners", "and", "professionals", "living", "there", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.state FROM Professionals INTERSECT SELECT Professionals.state FROM Professionals"}, {"question_toks": ["Find", "the", "states", "where", "both", "owners", "and", "professionals", "live", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.state FROM Professionals INTERSECT SELECT Professionals.state FROM Professionals"}, {"question_toks": ["What", "is", "the", "average", "age", "of", "the", "dogs", "who", "have", "gone", "through", "any", "treatments", "?"], "db_id": "dog_kennels", "query": "SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)"}, {"question_toks": ["Find", "the", "average", "age", "of", "the", "dogs", "who", "went", "through", "treatments", "."], "db_id": "dog_kennels", "query": "SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)"}, {"question_toks": ["Which", "professionals", "live", "in", "the", "state", "of", "Indiana", "or", "have", "done", "treatment", "on", "more", "than", "2", "treatments", "?", "List", "his", "or", "her", "id", ",", "last", "name", "and", "cell", "phone", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.last_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Find", "the", "id", ",", "last", "name", "and", "cell", "phone", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Indiana", "or", "have", "performed", "more", "than", "two", "treatments", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Which", "dogs", "have", "not", "cost", "their", "owner", "more", "than", "1000", "for", "treatment", "?", "List", "the", "dog", "names", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "dogs", "for", "which", "the", "owner", "spent", "more", "than", "1000", "for", "treatment", "?"], "db_id": "dog_kennels", "query": "SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 'terminal'"}, {"question_toks": ["Which", "first", "names", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Dogs JOIN Professionals JOIN Treatments ON Dogs.dog_id = Treatments.dog_id AND Treatments.professional_id = Professionals.professional_id"}, {"question_toks": ["Find", "the", "first", "names", "that", "are", "used", "for", "professionals", "or", "owners", "but", "are", "not", "used", "as", "dog", "names", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Dogs JOIN Professionals JOIN Treatments ON Dogs.dog_id = Treatments.dog_id AND Treatments.professional_id = Professionals.professional_id"}, {"question_toks": ["Which", "professional", "did", "not", "operate", "any", "treatment", "on", "dogs", "?", "List", "the", "professional", "'s", "id", ",", "role", "and", "email", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id"}, {"question_toks": ["Give", "me", "the", "id", ",", "role", "and", "email", "of", "the", "professionals", "who", "did", "not", "perform", "any", "treatment", "on", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id"}, {"question_toks": ["Which", "owner", "owns", "the", "most", "dogs", "?", "List", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "."], "db_id": "dog_kennels", "query": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Return", "the", "owner", "id", ",", "first", "name", "and", "last", "name", "of", "the", "owner", "who", "has", "the", "most", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "treatments", "?", "List", "the", "professional", "'s", "id", ",", "role", ",", "and", "first", "name", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "id", ",", "role", ",", "and", "first", "name", "of", "the", "professionals", "who", "have", "performed", "two", "or", "more", "treatments", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "breed", "with", "the", "most", "dogs", "?"], "db_id": "dog_kennels", "query": "SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "breed", "do", "the", "most", "dogs", "have", "?", "Give", "me", "the", "breed", "name", "."], "db_id": "dog_kennels", "query": "SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_name ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "owner", "has", "paid", "for", "the", "most", "treatments", "on", "his", "or", "her", "dogs", "?", "List", "the", "owner", "id", "and", "last", "name", "."], "db_id": "dog_kennels", "query": "SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Tell", "me", "the", "owner", "id", "and", "last", "name", "of", "the", "owner", "who", "spent", "the", "most", "on", "treatments", "of", "his", "or", "her", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "description", "of", "the", "treatment", "type", "that", "costs", "the", "least", "money", "in", "total", "?"], "db_id": "dog_kennels", "query": "SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.treatment_type_code ORDER BY Sum(Treatments.cost_of_treatment) Asc LIMIT 1"}, {"question_toks": ["Give", "me", "the", "description", "of", "the", "treatment", "type", "whose", "total", "cost", "is", "the", "lowest", "."], "db_id": "dog_kennels", "query": "SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatments.treatment_type_code ORDER BY Avg(Treatments.cost_of_treatment) Asc LIMIT 1"}, {"question_toks": ["Which", "owner", "has", "paid", "the", "largest", "amount", "of", "money", "in", "total", "for", "their", "dogs", "?", "Show", "the", "owner", "id", "and", "zip", "code", "."], "db_id": "dog_kennels", "query": "SELECT Owners.owner_id, Sum(Dogs.weight) FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY Sum(Dogs.weight) Desc LIMIT 1"}, {"question_toks": ["Find", "the", "owner", "id", "and", "zip", "code", "of", "the", "owner", "who", "spent", "the", "most", "money", "in", "total", "for", "his", "or", "her", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY Sum(Dogs.weight) Desc LIMIT 1"}, {"question_toks": ["Which", "professionals", "have", "done", "at", "least", "two", "types", "of", "treatments", "?", "List", "the", "professional", "id", "and", "cell", "phone", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal' INTERSECT SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["Find", "the", "id", "and", "cell", "phone", "of", "the", "professionals", "who", "operate", "two", "or", "more", "types", "of", "treatments", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.professional_id, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'"}, {"question_toks": ["What", "are", "the", "first", "name", "and", "last", "name", "of", "the", "professionals", "who", "have", "done", "treatment", "with", "cost", "below", "average", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.first_name HAVING Avg(Treatments.cost_of_treatment) < 'terminal'"}, {"question_toks": ["Which", "professionals", "have", "operated", "a", "treatment", "that", "costs", "less", "than", "the", "average", "?", "Give", "me", "theor", "first", "names", "and", "last", "names", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.first_name HAVING Avg(Treatments.cost_of_treatment) > (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)"}, {"question_toks": ["List", "the", "date", "of", "each", "treatment", ",", "together", "with", "the", "first", "name", "of", "the", "professional", "who", "operated", "it", "."], "db_id": "dog_kennels", "query": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id"}, {"question_toks": ["What", "are", "the", "date", "and", "the", "operating", "professional", "'s", "first", "name", "of", "each", "treatment", "?"], "db_id": "dog_kennels", "query": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id"}, {"question_toks": ["List", "the", "cost", "of", "each", "treatment", "and", "the", "corresponding", "treatment", "type", "description", "."], "db_id": "dog_kennels", "query": "SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code"}, {"question_toks": ["What", "are", "the", "cost", "and", "treatment", "type", "description", "of", "each", "treatment", "?"], "db_id": "dog_kennels", "query": "SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code"}, {"question_toks": ["List", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "his", "for", "her", "dog", "."], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Sizes JOIN Owners JOIN Dogs ON Sizes.size_code = Dogs.size_code AND Dogs.owner_id = Owners.owner_id"}, {"question_toks": ["What", "are", "each", "owner", "'s", "first", "name", ",", "last", "name", ",", "and", "the", "size", "of", "their", "dog", "?"], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Sizes JOIN Owners JOIN Dogs ON Sizes.size_code = Dogs.size_code AND Dogs.owner_id = Owners.owner_id"}, {"question_toks": ["List", "pairs", "of", "the", "owner", "'s", "first", "name", "and", "the", "dogs", "'s", "name", "."], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id"}, {"question_toks": ["What", "are", "each", "owner", "'s", "first", "name", "and", "their", "dogs", "'s", "name", "?"], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id"}, {"question_toks": ["List", "the", "names", "of", "the", "dogs", "of", "the", "rarest", "breed", "and", "the", "treatment", "dates", "of", "them", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.name, Dogs.date_of_birth FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Which", "dogs", "are", "of", "the", "rarest", "breed", "?", "Show", "their", "names", "and", "treatment", "dates", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.name, Dogs.date_of_birth FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Dogs.breed_code ORDER BY Count(*) Asc LIMIT 1"}, {"question_toks": ["Which", "dogs", "are", "owned", "by", "someone", "who", "lives", "in", "Virginia", "?", "List", "the", "owner", "'s", "first", "name", "and", "the", "dog", "'s", "name", "."], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'terminal'"}, {"question_toks": ["Find", "the", "first", "names", "of", "owners", "living", "in", "Virginia", "and", "the", "names", "of", "dogs", "they", "own", "."], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'terminal'"}, {"question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "who", "have", "gone", "through", "a", "treatment", "?"], "db_id": "dog_kennels", "query": "SELECT Dogs.date_of_birth, Dogs.date_of_birth FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id"}, {"question_toks": ["Find", "the", "arriving", "date", "and", "the", "departing", "date", "of", "the", "dogs", "that", "received", "a", "treatment", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.date_of_birth, Dogs.date_of_birth FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id"}, {"question_toks": ["List", "the", "last", "name", "of", "the", "owner", "owning", "the", "youngest", "dog", "."], "db_id": "dog_kennels", "query": "SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age Asc LIMIT 1"}, {"question_toks": ["Who", "owns", "the", "youngest", "dog", "?", "Give", "me", "his", "or", "her", "last", "name", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.name FROM Dogs ORDER BY Dogs.date_arrived Desc LIMIT 1"}, {"question_toks": ["List", "the", "emails", "of", "the", "professionals", "who", "live", "in", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'"}, {"question_toks": ["What", "are", "the", "emails", "of", "the", "professionals", "living", "in", "either", "the", "state", "of", "Hawaii", "or", "the", "state", "of", "Wisconsin", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'"}, {"question_toks": ["What", "are", "the", "arriving", "date", "and", "the", "departing", "date", "of", "all", "the", "dogs", "?"], "db_id": "dog_kennels", "query": "SELECT Dogs.date_arrived, Dogs.date_arrived FROM Dogs"}, {"question_toks": ["List", "the", "arrival", "date", "and", "the", "departure", "date", "for", "all", "the", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs"}, {"question_toks": ["How", "many", "dogs", "went", "through", "any", "treatments", "?"], "db_id": "dog_kennels", "query": "SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments"}, {"question_toks": ["Count", "the", "number", "of", "dogs", "that", "went", "through", "a", "treatment", "."], "db_id": "dog_kennels", "query": "SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments"}, {"question_toks": ["How", "many", "professionals", "have", "performed", "any", "treatment", "to", "dogs", "?"], "db_id": "dog_kennels", "query": "SELECT Count(DISTINCT Treatments.professional_id) FROM Treatments"}, {"question_toks": ["Find", "the", "number", "of", "professionals", "who", "have", "ever", "treated", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Count(DISTINCT Treatments.professional_id) FROM Treatments"}, {"question_toks": ["Which", "professionals", "live", "in", "a", "city", "containing", "the", "substring", "'West", "'", "?", "List", "his", "or", "her", "role", ",", "street", ",", "city", "and", "state", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.role_code, Professionals.street, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'"}, {"question_toks": ["Find", "the", "role", ",", "street", ",", "city", "and", "state", "of", "the", "professionals", "living", "in", "a", "city", "that", "contains", "the", "substring", "'West", "'", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.role_code, Professionals.street, Professionals.state FROM Professionals WHERE Professionals.city = 'terminal'"}, {"question_toks": ["Which", "owners", "live", "in", "the", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "?", "List", "his", "first", "name", ",", "last", "name", "and", "email", "."], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'"}, {"question_toks": ["Return", "the", "first", "name", ",", "last", "name", "and", "email", "of", "the", "owners", "living", "in", "a", "state", "whose", "name", "contains", "the", "substring", "'North", "'", "."], "db_id": "dog_kennels", "query": "SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'"}, {"question_toks": ["How", "many", "dogs", "have", "an", "age", "below", "the", "average", "?"], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)"}, {"question_toks": ["Count", "the", "number", "of", "dogs", "of", "an", "age", "below", "the", "average", "."], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)"}, {"question_toks": ["How", "much", "does", "the", "most", "recent", "treatment", "cost", "?"], "db_id": "dog_kennels", "query": "SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.cost_of_treatment Desc LIMIT 1"}, {"question_toks": ["Show", "me", "the", "cost", "of", "the", "most", "recently", "performed", "treatment", "."], "db_id": "dog_kennels", "query": "SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.cost_of_treatment Desc LIMIT 1"}, {"question_toks": ["How", "many", "dogs", "have", "not", "gone", "through", "any", "treatment", "?"], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)"}, {"question_toks": ["Tell", "me", "the", "number", "of", "dogs", "that", "have", "received", "any", "treatment", "."], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)"}, {"question_toks": ["How", "many", "owners", "temporarily", "do", "not", "have", "any", "dogs", "?"], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)"}, {"question_toks": ["Find", "the", "number", "of", "owners", "who", "do", "not", "own", "any", "dogs", "at", "this", "moment", "."], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)"}, {"question_toks": ["How", "many", "professionals", "did", "not", "operate", "any", "treatment", "on", "dogs", "?"], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)"}, {"question_toks": ["Find", "the", "number", "of", "professionals", "who", "have", "not", "treated", "any", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)"}, {"question_toks": ["List", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "who", "have", "been", "abandoned", "?", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn LIKE 'terminal'"}, {"question_toks": ["What", "are", "the", "dog", "name", ",", "age", "and", "weight", "of", "the", "dogs", "that", "were", "abandoned", "?", "Note", "that", "1", "stands", "for", "yes", ",", "and", "0", "stands", "for", "no", "in", "the", "tables", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn LIKE 'terminal'"}, {"question_toks": ["What", "is", "the", "average", "age", "of", "all", "the", "dogs", "?"], "db_id": "dog_kennels", "query": "SELECT Avg(Dogs.age) FROM Dogs"}, {"question_toks": ["Compute", "the", "average", "age", "of", "all", "the", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT Avg(Dogs.age) FROM Dogs"}, {"question_toks": ["What", "is", "the", "age", "of", "the", "oldest", "dog", "?"], "db_id": "dog_kennels", "query": "SELECT Dogs.age FROM Dogs ORDER BY Dogs.age Desc LIMIT 1"}, {"question_toks": ["Tell", "me", "the", "age", "of", "the", "oldest", "dog", "."], "db_id": "dog_kennels", "query": "SELECT Dogs.age FROM Dogs ORDER BY Dogs.age Desc LIMIT 1"}, {"question_toks": ["How", "much", "does", "each", "charge", "type", "costs", "?", "List", "both", "charge", "type", "and", "amount", "."], "db_id": "dog_kennels", "query": "SELECT Charges.charge_type, Sum(Charges.charge_amount) FROM Charges GROUP BY Charges.charge_type"}, {"question_toks": ["List", "each", "charge", "type", "and", "its", "amount", "."], "db_id": "dog_kennels", "query": "SELECT Charges.charge_type, Count(DISTINCT Charges.charge_amount) FROM Charges GROUP BY Charges.charge_type"}, {"question_toks": ["How", "much", "does", "the", "most", "expensive", "charge", "type", "costs", "?"], "db_id": "dog_kennels", "query": "SELECT Max(Charges.charge_amount) FROM Charges ORDER BY Charges.charge_type Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "charge", "amount", "of", "the", "most", "expensive", "charge", "type", "?"], "db_id": "dog_kennels", "query": "SELECT Charges.charge_amount FROM Charges GROUP BY Charges.charge_type ORDER BY Max(Charges.charge_amount) Desc LIMIT 1"}, {"question_toks": ["List", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "all", "the", "professionals", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals"}, {"question_toks": ["What", "are", "the", "email", ",", "cell", "phone", "and", "home", "phone", "of", "each", "professional", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals"}, {"question_toks": ["What", "are", "all", "the", "possible", "breed", "type", "and", "size", "type", "combinations", "?"], "db_id": "dog_kennels", "query": "SELECT Sizes.size_description FROM Breeds JOIN Sizes JOIN Dogs ON Breeds.breed_code = Dogs.breed_code AND Dogs.size_code = Sizes.size_code INTERSECT SELECT Sizes.size_description FROM Sizes"}, {"question_toks": ["Find", "the", "distinct", "breed", "type", "and", "size", "type", "combinations", "for", "dogs", "."], "db_id": "dog_kennels", "query": "SELECT DISTINCT Dogs.breed_code, Sizes.size_description FROM Sizes JOIN Dogs ON Sizes.size_code = Dogs.size_code"}, {"question_toks": ["List", "the", "first", "name", "of", "all", "the", "professionals", "along", "with", "the", "description", "of", "the", "treatment", "they", "have", "done", "."], "db_id": "dog_kennels", "query": "SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Professionals JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code AND Treatments.professional_id = Professionals.professional_id AND Treatment_Types.treatment_type_code = Treatments.treatment_type_code"}, {"question_toks": ["What", "are", "each", "professional", "'s", "first", "name", "and", "description", "of", "the", "treatment", "they", "have", "performed", "?"], "db_id": "dog_kennels", "query": "SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Professionals JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code AND Treatments.professional_id = Professionals.professional_id AND Treatment_Types.treatment_type_code = Treatments.treatment_type_code"}, {"question_toks": ["How", "many", "singers", "are", "there", "?"], "db_id": "singer", "query": "SELECT Count(*) FROM singer"}, {"question_toks": ["What", "is", "the", "count", "of", "singers", "?"], "db_id": "singer", "query": "SELECT Count(*) FROM singer"}, {"question_toks": ["List", "the", "name", "of", "singers", "in", "ascending", "order", "of", "net", "worth", "."], "db_id": "singer", "query": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc"}, {"question_toks": ["What", "are", "the", "names", "of", "singers", "ordered", "by", "ascending", "net", "worth", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc"}, {"question_toks": ["What", "are", "the", "birth", "year", "and", "citizenship", "of", "singers", "?"], "db_id": "singer", "query": "SELECT singer.Birth_Year, singer.Citizenship FROM singer"}, {"question_toks": ["What", "are", "the", "birth", "years", "and", "citizenships", "of", "the", "singers", "?"], "db_id": "singer", "query": "SELECT singer.Birth_Year, singer.Citizenship FROM singer"}, {"question_toks": ["List", "the", "name", "of", "singers", "whose", "citizenship", "is", "not", "``", "France", "''", "."], "db_id": "singer", "query": "SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "are", "not", "French", "citizens", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)"}, {"question_toks": ["Show", "the", "name", "of", "singers", "whose", "birth", "year", "is", "either", "1948", "or", "1949", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "singers", "whose", "birth", "years", "are", "either", "1948", "or", "1949", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "singer", "with", "the", "largest", "net", "worth", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "name", "of", "the", "singer", "who", "is", "worth", "the", "most", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1"}, {"question_toks": ["Show", "different", "citizenship", "of", "singers", "and", "the", "number", "of", "singers", "of", "each", "citizenship", "."], "db_id": "singer", "query": "SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship"}, {"question_toks": ["For", "each", "citizenship", ",", "how", "many", "singers", "are", "from", "that", "country", "?"], "db_id": "singer", "query": "SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship"}, {"question_toks": ["Please", "show", "the", "most", "common", "citizenship", "of", "singers", "."], "db_id": "singer", "query": "SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["What", "is", "the", "msot", "common", "singer", "citizenship", "?"], "db_id": "singer", "query": "SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1"}, {"question_toks": ["Show", "different", "citizenships", "and", "the", "maximum", "net", "worth", "of", "singers", "of", "each", "citizenship", "."], "db_id": "singer", "query": "SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship"}, {"question_toks": ["For", "each", "citizenship", ",", "what", "is", "the", "maximum", "net", "worth", "?"], "db_id": "singer", "query": "SELECT Max(singer.Net_Worth_Millions), singer.Citizenship FROM singer GROUP BY singer.Citizenship"}, {"question_toks": ["Show", "titles", "of", "songs", "and", "names", "of", "singers", "."], "db_id": "singer", "query": "SELECT song.Title, singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID"}, {"question_toks": ["What", "are", "the", "song", "titles", "and", "singer", "names", "?"], "db_id": "singer", "query": "SELECT song.Title, singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID"}, {"question_toks": ["Show", "distinct", "names", "of", "singers", "that", "have", "songs", "with", "sales", "more", "than", "300000", "."], "db_id": "singer", "query": "SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 'terminal'"}, {"question_toks": ["what", "are", "the", "different", "names", "of", "the", "singers", "that", "have", "sales", "more", "than", "300000", "?"], "db_id": "singer", "query": "SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 'terminal'"}, {"question_toks": ["Show", "the", "names", "of", "singers", "that", "have", "more", "than", "one", "song", "."], "db_id": "singer", "query": "SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["What", "are", "the", "names", "of", "the", "singers", "that", "have", "more", "than", "one", "songs", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'"}, {"question_toks": ["Show", "the", "names", "of", "singers", "and", "the", "total", "sales", "of", "their", "songs", "."], "db_id": "singer", "query": "SELECT Sum(song.Sales), singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name"}, {"question_toks": ["For", "each", "singer", "name", ",", "what", "is", "the", "total", "sales", "for", "their", "songs", "?"], "db_id": "singer", "query": "SELECT Sum(song.Sales), singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name"}, {"question_toks": ["List", "the", "name", "of", "singers", "that", "do", "not", "have", "any", "song", "."], "db_id": "singer", "query": "SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)"}, {"question_toks": ["What", "is", "the", "sname", "of", "every", "sing", "that", "does", "not", "have", "any", "song", "?"], "db_id": "singer", "query": "SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)"}, {"question_toks": ["Show", "the", "citizenship", "shared", "by", "singers", "with", "birth", "year", "before", "1945", "and", "after", "1955", "."], "db_id": "singer", "query": "SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal'"}, {"question_toks": ["What", "are", "the", "citizenships", "that", "are", "shared", "by", "singers", "with", "a", "birth", "year", "before", "1945", "and", "after", "1955", "?"], "db_id": "singer", "query": "SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal'"}, {"question_toks": ["How", "many", "available", "features", "are", "there", "in", "total", "?"], "db_id": "real_estate_properties", "query": "SELECT Count(*) FROM Other_Available_Features"}, {"question_toks": ["What", "is", "the", "feature", "type", "name", "of", "feature", "AirCon", "?"], "db_id": "real_estate_properties", "query": "SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features ON Ref_Feature_Types.feature_type_code = Other_Available_Features.feature_type_code WHERE Other_Available_Features.feature_name = 'terminal'"}, {"question_toks": ["Show", "the", "property", "type", "descriptions", "of", "properties", "belonging", "to", "that", "code", "."], "db_id": "real_estate_properties", "query": "SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types"}, {"question_toks": ["What", "are", "the", "names", "of", "properties", "that", "are", "either", "houses", "or", "apartments", "with", "more", "than", "1", "room", "?"], "db_id": "real_estate_properties", "query": "SELECT Properties.property_name FROM Properties WHERE Properties.property_type_code = 'terminal' UNION SELECT Properties.property_name FROM Properties WHERE Properties.room_count > 'terminal'"}]